{"sentences":"/*\n * Preference block that encapsulates the controls used\n * for displaying/editing CDT file type associations\n */","labels":{"default":["positive"]}}
{"sentences":"// Create the table viewer for file associations","labels":{"default":["positive"]}}
{"sentences":"// Create the button pane","labels":{"default":["positive"]}}
{"sentences":"// New button","labels":{"default":["positive"]}}
{"sentences":"// Remove button","labels":{"default":["positive"]}}
{"sentences":"// Hook up the viewer","labels":{"default":["positive"]}}
{"sentences":"// assoc is marked to be added.","labels":{"default":["positive"]}}
{"sentences":"// assoc exists, but is marked to be removed.","labels":{"default":["positive"]}}
{"sentences":"// analyze current settings","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     TimeSys Corporation - Initial implementation","labels":{"default":["negative"]}}
{"sentences":"// skip over it.","labels":{"default":["positive"]}}
{"sentences":"Class that helps in checking file system permission.\n * The state of this class need not be synchronized as it has data structures that\n * are read-only.","labels":{"default":["positive"]}}
{"sentences":"@link FSNamesystem#readLock()","labels":{"default":["negative"]}}
{"sentences":"Some of the helper methods are gaurded by {@link FSNamesystem#readLock()}.","labels":{"default":["positive"]}}
{"sentences":"@link AccessControlException","labels":{"default":["negative"]}}
{"sentences":"@link AccessControlException","labels":{"default":["negative"]}}
{"sentences":"/**\n   * Verify if the caller has the required permission. This will result into \n   * an exception if the caller is not allowed to access the resource.\n   */","labels":{"default":["positive"]}}
{"sentences":"Check whether current user have permissions to access the path.\n   * Traverse is always checked.","labels":{"default":["positive"]}}
{"sentences":"For example, suppose the path is \"/foo/bar/baz\".\n   * No matter baz is a file or a directory,\n   * the parent path is \"/foo/bar\".\n   * If bar exists, then the ancestor path is also \"/foo/bar\".\n   * If bar does not exist and foo exists,\n   * then the ancestor path is \"/foo\".\n   * Further, if both foo and bar do not exist,\n   * then the ancestor path is \"/\".","labels":{"default":["negative"]}}
{"sentences":"@return a string for throwing","labels":{"default":["negative"]}}
{"sentences":"@return a string for throwing","labels":{"default":["negative"]}}
{"sentences":"@param doCheckOwner Require user to be the owner of the path?","labels":{"default":["negative"]}}
{"sentences":"checkPermission","labels":{"default":["negative"]}}
{"sentences":"@param ancestorAccess The access required by the ancestor of the path.","labels":{"default":["negative"]}}
{"sentences":"@param parentAccess The access required by the parent of the path.","labels":{"default":["negative"]}}
{"sentences":"@param access The access required by the path.","labels":{"default":["negative"]}}
{"sentences":"@param subAccess If path is a directory,\n   * it is the access required of the path and all the sub-directories.\n   * If path is not a directory, there is no effect.","labels":{"default":["negative"]}}
{"sentences":"@param ignoreEmptyDir Ignore permission checking for empty directory?","labels":{"default":["negative"]}}
{"sentences":"@throws AccessControlException","labels":{"default":["negative"]}}
{"sentences":"@link FSNamesystem#readLock()","labels":{"default":["negative"]}}
{"sentences":"Parent path means the parent directory for the path.\n   * Ancestor path means the last (the closest) existing ancestor directory\n   * of the path.\n   * Note that if the parent path exists,\n   * then the parent path and the ancestor path are the same.","labels":{"default":["positive"]}}
{"sentences":"// check if (parentAccess != null) && file exists, then check sb\n    // If resolveLink, the check is performed on the link target.","labels":{"default":["negative"]}}
{"sentences":"/**\n   * Check whether exception e is due to an ancestor inode's not being\n   * directory.\n   */","labels":{"default":["positive"]}}
{"sentences":"/** Guarded by {@link FSNamesystem#readLock()} */","labels":{"default":["positive"]}}
{"sentences":"/** Guarded by {@link FSNamesystem#readLock()} */","labels":{"default":["positive"]}}
{"sentences":"/** Guarded by {@link FSNamesystem#readLock()} */","labels":{"default":["positive"]}}
{"sentences":"/** Guarded by {@link FSNamesystem#readLock()} */","labels":{"default":["positive"]}}
{"sentences":"@link FSNamesystem#readLock()","labels":{"default":["negative"]}}
{"sentences":"@link FSNamesystem#readLock()","labels":{"default":["negative"]}}
{"sentences":"@link FSNamesystem#readLock()","labels":{"default":["negative"]}}
{"sentences":"@link FSNamesystem#readLock()","labels":{"default":["negative"]}}
{"sentences":"@link FsPermission","labels":{"default":["negative"]}}
{"sentences":"@link AclStorage","labels":{"default":["negative"]}}
{"sentences":"@link AclFeature","labels":{"default":["negative"]}}
{"sentences":"@link AclTransformation","labels":{"default":["negative"]}}
{"sentences":"@param inode INodeAttributes accessed inode","labels":{"default":["negative"]}}
{"sentences":"@param snapshotId int snapshot ID","labels":{"default":["negative"]}}
{"sentences":"@param access FsAction requested permission","labels":{"default":["negative"]}}
{"sentences":"@param mode FsPermission mode from inode","labels":{"default":["negative"]}}
{"sentences":"@param aclFeature AclFeature of inode","labels":{"default":["negative"]}}
{"sentences":"@throws AccessControlException if the ACL denies permission","labels":{"default":["negative"]}}
{"sentences":"Checks requested access against an Access Control List.  This method relies\n   * on finding the ACL data in the relevant portions of {@link FsPermission} and\n   * {@link AclFeature} as implemented in the logic of {@link AclStorage}.  This\n   * method also relies on receiving the ACL entries in sorted order.  This is\n   * assumed to be true, because the ACL modification methods in\n   * {@link AclTransformation} sort the resulting entries.","labels":{"default":["positive"]}}
{"sentences":"More specifically, this method depends on these invariants in an ACL:\n   * - The list must be sorted.\n   * - Each entry in the list must be unique by scope + type + name.\n   * - There is exactly one each of the unnamed user/group/other entries.\n   * - The mask entry must not have a name.\n   * - The other entry must not have a name.\n   * - Default entries may be present, but they are ignored during enforcement.","labels":{"default":["negative"]}}
{"sentences":"// It's possible that the inode has a default ACL but no access ACL.","labels":{"default":["positive"]}}
{"sentences":"//user class","labels":{"default":["negative"]}}
{"sentences":"//group class","labels":{"default":["negative"]}}
{"sentences":"//other class","labels":{"default":["negative"]}}
{"sentences":"// Use owner entry from permission bits if user is owner.","labels":{"default":["positive"]}}
{"sentences":"// Check named user and group entries if user was not denied by owner entry.","labels":{"default":["positive"]}}
{"sentences":"// Use named user entry with mask from permission bits applied if user\n          // matches name.","labels":{"default":["positive"]}}
{"sentences":"// Use group entry (unnamed or named) with mask from permission bits\n          // applied if user is a member and entry grants access.  If user is a\n          // member of multiple groups that have entries that grant access, then\n          // it doesn't matter which is chosen, so exit early after first match.","labels":{"default":["negative"]}}
{"sentences":"// Use other entry if user was not denied by an earlier match.","labels":{"default":["positive"]}}
{"sentences":"@link FSNamesystem#readLock()","labels":{"default":["negative"]}}
{"sentences":"/** Guarded by {@link FSNamesystem#readLock()} */","labels":{"default":["positive"]}}
{"sentences":"// If this user is the directory owner, return","labels":{"default":["positive"]}}
{"sentences":"// if this user is the file owner, return","labels":{"default":["positive"]}}
{"sentences":"Whether a cache pool can be accessed by the current context","labels":{"default":["positive"]}}
{"sentences":"@param pool CachePool being accessed","labels":{"default":["negative"]}}
{"sentences":"@param access type of action being performed on the cache pool","labels":{"default":["negative"]}}
{"sentences":"@throws AccessControlException if pool cannot be accessed","labels":{"default":["negative"]}}
{"sentences":"Guarded by {@link FSNamesystem#readLock()}","labels":{"default":["positive"]}}
{"sentences":"Caller of this method must hold that lock.","labels":{"default":["negative"]}}
{"sentences":"/**\n * Group Launch delegate. Launches each configuration in the user selected mode\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t\t * Allows us decouple the enum identifier in the code from its textual representation in the GUI\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t\t * Allows us decouple the enum identifier in the code from its textual representation in the GUI\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * A specialization of launch to track sublaunches lifecycle, also terminates itself when all sublaunches are terminated\n\t *\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t\t * Whether this process has been terminated\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"@param subLaunch","labels":{"default":["negative"]}}
{"sentences":"/**\n\t\t * Associate the launch\n\t\t * @param subLaunch\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"@see org.eclipse.debug.core.Launch#isTerminated()","labels":{"default":["negative"]}}
{"sentences":"/**\n\t\t * Override default behavior by querying all sub-launches to see if they are terminated\n\t\t * @see org.eclipse.debug.core.Launch#isTerminated()\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"isTerminated","labels":{"default":["positive"]}}
{"sentences":"@see org.eclipse.debug.core.Launch#canTerminate()","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.core.Launch#terminate()","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.core.Launch#launchChanged(org.eclipse.debug.core.ILaunch)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.core.Launch#launchRemoved(org.eclipse.debug.core.ILaunch)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.core.ILaunchesListener2#launchesTerminated(org.eclipse.debug.core.ILaunch[])","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.core.ILaunchesListener#launchesAdded(org.eclipse.debug.core.ILaunch[])","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.core.ILaunchesListener#launchesChanged(org.eclipse.debug.core.ILaunch[])","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.core.ILaunchesListener#launchesRemoved(org.eclipse.debug.core.ILaunch[])","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.core.model.LaunchConfigurationDelegate#getLaunch(org.eclipse.debug.core.ILaunchConfiguration, java.lang.String)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.core.model.ILaunchConfigurationDelegate#launch(org.eclipse.debug.core.ILaunchConfiguration, java.lang.String, org.eclipse.debug.core.ILaunch, org.eclipse.core.runtime.IProgressMonitor)","labels":{"default":["negative"]}}
{"sentences":"/**\n\t\t * Override default behavior by querying all sub-launches if they can be terminated\n\t\t * @see org.eclipse.debug.core.Launch#canTerminate()\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t\t * Override default behavior by terminating all sub-launches\n\t\t * @see org.eclipse.debug.core.Launch#terminate()\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t\t * Handle terminated sub-launch\n\t\t * @param launch\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"@param launch","labels":{"default":["negative"]}}
{"sentences":"// Remove sub launch, keeping the processes of the terminated launch to\n\t\t\t// show the association and to keep the console content accessible","labels":{"default":["negative"]}}
{"sentences":"// terminate ourselves if this is the last sub launch","labels":{"default":["positive"]}}
{"sentences":"/* (non-Javadoc)\n\t\t * @see org.eclipse.debug.core.Launch#launchChanged(org.eclipse.debug.core.ILaunch)\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"/* (non-Javadoc)\n\t\t * @see org.eclipse.debug.core.Launch#launchRemoved(org.eclipse.debug.core.ILaunch)\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"/* (non-Javadoc)\n\t\t * @see org.eclipse.debug.core.ILaunchesListener2#launchesTerminated(org.eclipse.debug.core.ILaunch[])\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"/* (non-Javadoc)\n\t\t * @see org.eclipse.debug.core.ILaunchesListener#launchesAdded(org.eclipse.debug.core.ILaunch[])\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"/* (non-Javadoc)\n\t\t * @see org.eclipse.debug.core.ILaunchesListener#launchesChanged(org.eclipse.debug.core.ILaunch[])\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"/* (non-Javadoc)\n\t\t * @see org.eclipse.debug.core.ILaunchesListener#launchesRemoved(org.eclipse.debug.core.ILaunch[])\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"/* (non-Javadoc)\n\t * @see org.eclipse.debug.core.model.LaunchConfigurationDelegate#getLaunch(org.eclipse.debug.core.ILaunchConfiguration, java.lang.String)\n\t */","labels":{"default":["positive"]}}
{"sentences":"/* (non-Javadoc)\n\t * @see org.eclipse.debug.core.model.ILaunchConfigurationDelegate#launch(org.eclipse.debug.core.ILaunchConfiguration, java.lang.String, org.eclipse.debug.core.ILaunch, org.eclipse.core.runtime.IProgressMonitor)\n\t */","labels":{"default":["positive"]}}
{"sentences":"// Replace the processes of the changed launch","labels":{"default":["positive"]}}
{"sentences":"// Add new processes","labels":{"default":["positive"]}}
{"sentences":"// avoid notifications when processes have not changed.","labels":{"default":["positive"]}}
{"sentences":"// Remove old processes","labels":{"default":["positive"]}}
{"sentences":"// add/remove processes","labels":{"default":["positive"]}}
{"sentences":"// Remove the processes we got from the sub-launches from this launch","labels":{"default":["positive"]}}
{"sentences":"// Have to temporarily turn off the \"remove terminated launches when new one created\"\n\t\t// preference because it does not work well for multilaunch","labels":{"default":["negative"]}}
{"sentences":"// find launch; if not found, skip","labels":{"default":["positive"]}}
{"sentences":"// determine mode for each launch","labels":{"default":["positive"]}}
{"sentences":"// LAUNCH child here","labels":{"default":["positive"]}}
{"sentences":"// Now that we added the launch in our list, we have already\n\t\t\t\t\t// received the real launchChanged event, and did not know it was part of our list\n\t\t\t\t\t// So, fake another event now.","labels":{"default":["negative"]}}
{"sentences":"//Now we need to override the history to make multi-launch appear last, if we\n\t\t\t\t\t//don't do it last launch would be our child's launch which is not correct\n\t\t\t\t\t//for repeating the experience","labels":{"default":["negative"]}}
{"sentences":"// param is milliseconds","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.core.model.LaunchConfigurationDelegate#buildProjects(org.eclipse.core.resources.IProject[], org.eclipse.core.runtime.IProgressMonitor)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.core.model.LaunchConfigurationDelegate#buildForLaunch(org.eclipse.debug.core.ILaunchConfiguration, java.lang.String, org.eclipse.core.runtime.IProgressMonitor)","labels":{"default":["negative"]}}
{"sentences":"/* (non-Javadoc)\n\t * @see org.eclipse.debug.core.model.LaunchConfigurationDelegate#buildProjects(org.eclipse.core.resources.IProject[], org.eclipse.core.runtime.IProgressMonitor)\n\t */","labels":{"default":["positive"]}}
{"sentences":"/* (non-Javadoc)\n\t * @see org.eclipse.debug.core.model.LaunchConfigurationDelegate#buildForLaunch(org.eclipse.debug.core.ILaunchConfiguration, java.lang.String, org.eclipse.core.runtime.IProgressMonitor)\n\t */","labels":{"default":["positive"]}}
{"sentences":"// not build for this one","labels":{"default":["negative"]}}
{"sentences":"@param config configuration reference","labels":{"default":["negative"]}}
{"sentences":"@return <code>true</code> if it is a valid reference, <code>false</code> if launch configuration should be filtered","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * Test if a launch configuration is a valid reference.\n\t * @param config configuration reference\n\t * @return <code>true</code> if it is a valid reference, <code>false</code> if launch configuration should be filtered\n\t */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *      QNX Software Systems - initial API and implementation\n *      Freescale Semiconductor","labels":{"default":["negative"]}}
{"sentences":"@since 7.1","labels":{"default":["negative"]}}
{"sentences":"@link SimpleWeekToolbar","labels":{"default":["negative"]}}
{"sentences":"/**\n * A label in the {@link SimpleWeekToolbar}\n * \n * @since 7.1\n */","labels":{"default":["positive"]}}
{"sentences":"// Define label specific configuration","labels":{"default":["positive"]}}
{"sentences":"// Define top-level queues","labels":{"default":["positive"]}}
{"sentences":"A specialization of a template parameter.","labels":{"default":["positive"]}}
{"sentences":"This class provides common implementation for CPPTemplateNonTypeParameterSpecialization,\n * CPPTemplateTypeParameterSpecialization, and CPPTemplateTemplateParameterSpecialization.","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Nathan Ridge","labels":{"default":["negative"]}}
{"sentences":"@author dsteffle","labels":{"default":["negative"]}}
{"sentences":"// start a new job that repeatedly updates the file...","labels":{"default":["positive"]}}
{"sentences":"// give the updater thread some time to update the resource","labels":{"default":["negative"]}}
{"sentences":"// item was properly removed by the updater thread","labels":{"default":["positive"]}}
{"sentences":"// start a new job that repeatedly updates the file...","labels":{"default":["positive"]}}
{"sentences":"// give the updater thread some time to update the resource","labels":{"default":["negative"]}}
{"sentences":"// item was properly removed by the updater thread","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     IBM - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"This is a template template parameter as <code> V </code> in \n * <code>template&lttemplate&lttypename T&gt class V&gt class CT;</code>","labels":{"default":["positive"]}}
{"sentences":"@noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":"@noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * Relation between template template parameter and its (nested) template parameters.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Relation between template template parameter and its name.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Relation between template template parameter and its default value.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Get the nested template parameters.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Get the (optional) name of this template template parameter. In case there is no name an\n\t * empty name is returned.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Get default value for template template parameter or <code>null</code>.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Set the name of this template template parameter.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Set default value for the template template parameter.\n\t */","labels":{"default":["positive"]}}
{"sentences":"@since 5.1","labels":{"default":["negative"]}}
{"sentences":"@since 5.3","labels":{"default":["negative"]}}
{"sentences":"@since 5.3","labels":{"default":["negative"]}}
{"sentences":"@since 5.2","labels":{"default":["negative"]}}
{"sentences":"@since 5.4","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * @since 5.1\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * @since 5.3\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Add a nested template parameter.\n\t * @since 5.3\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Set whether this template template parameter is a parameter pack.\n\t * @since 5.2\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Returns the scope that contains the template parameters of this template-template parameter.\n\t * @since 5.4\n\t */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *    John Camelon (IBM) - Initial API and implementation\n *    Markus Schorn (Wind River Systems)","labels":{"default":["negative"]}}
{"sentences":"@link #addTemplateParameter(ICPPASTTemplateParameter)","labels":{"default":["negative"]}}
{"sentences":"@deprecated Use {@link #addTemplateParameter(ICPPASTTemplateParameter)};","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"/**\n * GDB tdump CLI command.\n * @since 4.0\n *\n */","labels":{"default":["positive"]}}
{"sentences":"@param ctx trace context","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * @param ctx trace context\n\t */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Ericsson - Initial implementation","labels":{"default":["negative"]}}
{"sentences":"// There are 3 overloads of QObject::connect (Qt 4.8.4). They can be\n\t\t// distinguished by examining\n\t\t// the type of the forth parameter.\n\t\t// connect( , , , const char *, )\n\t\t// connect( , , , QMetaMethod&, )\n\t\t// connect( , , , Qt::ConnectionType = )","labels":{"default":["negative"]}}
{"sentences":"// QMetaMethod cannot be statically analyzed.","labels":{"default":["negative"]}}
{"sentences":"// There are 4 overloads of QObject::disconnect (Qt 4.8.4).  They can be distinguished by examining\n    \t// the type of the second parameter.  The number of parameters is used to disambiguate one conflict.\n\t\t// disconnect( , const char *, , )  && 4 params\n    \t// disconnect( , QMetaMethod&, , )\n    \t// disconnect( , const QObject *, )\n    \t// disconnect( , const char * )     && 2 params","labels":{"default":["negative"]}}
{"sentences":"// Otherwise find the signal and member parameters based on the overload.","labels":{"default":["positive"]}}
{"sentences":"// Otherwise find the signal and member parameters based on the overload.","labels":{"default":["positive"]}}
{"sentences":"// QMetaMethod cannot be statically analyzed.","labels":{"default":["positive"]}}
{"sentences":" Extracts required information from FunctionCallExpressions that call\n * QObject::connect.  This implementation handles all overloads of QObject::connect\n * except the QMetaMethod related ones.  QMetaMethods cannot be statically analyzed\n * so they are ignored.\n * <p>\n * The binding is found by identifying the overload and then looking at the appropriate\n * parameters.","labels":{"default":["positive"]}}
{"sentences":"Returns a collection of all Qt method references within the given function call.  Returns\n\t * null if there are no Qt method references.","labels":{"default":["positive"]}}
{"sentences":"@since 2.0","labels":{"default":["negative"]}}
{"sentences":"@since 2.1","labels":{"default":["negative"]}}
{"sentences":"/**\n     * Value <code>0</code> means it's not known.  Value <code>1</code>, means it's known.\n     */","labels":{"default":["negative"]}}
{"sentences":"/**\n     * Value <code>0</code> means it's not known.  Value <code>1</code>, means it's known.\n     * @since 2.1\n     */","labels":{"default":["negative"]}}
{"sentences":"/**\n     * Value <code>0</code> means it's not known.  Value <code>1</code>, means it's known.\n     */","labels":{"default":["negative"]}}
{"sentences":"/**\n     * Value <code>0</code> means it's not known.  Value <code>1</code>, means it's known.\n     */","labels":{"default":["negative"]}}
{"sentences":"// In non-stop mode threads that are running have no state change reason","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Wind River Systems - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"/****************************************************\n * A BlockIdCommand is an instruction to a datanode \n * regarding some blocks under its control.\n ****************************************************/","labels":{"default":["positive"]}}
{"sentences":"/**\n   * Create BlockCommand for the given action\n   */","labels":{"default":["positive"]}}
{"sentences":"@link InputStream","labels":{"default":["negative"]}}
{"sentences":"@author Chris Nokleberg","labels":{"default":["negative"]}}
{"sentences":"@since 1.0","labels":{"default":["negative"]}}
{"sentences":"@param in the input stream to be wrapped","labels":{"default":["negative"]}}
{"sentences":"/**\n * An {@link InputStream} that counts the number of bytes read.\n *\n * @author Chris Nokleberg\n * @since 1.0\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n   * Wraps another input stream, counting the number of bytes read.\n   *\n   * @param in the input stream to be wrapped\n   */","labels":{"default":["positive"]}}
{"sentences":"/** Returns the number of bytes read. */","labels":{"default":["positive"]}}
{"sentences":"// it's okay to mark even if mark isn't supported, as reset won't work","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Bryan Wilkinson (QNX) - Initial API and implementation\n *     Markus Schorn (Wind River Systems)\n *     Sergey Prigogin (Google)","labels":{"default":["negative"]}}
{"sentences":"/**\n * Binding for template type parameters in the index.\n */","labels":{"default":["positive"]}}
{"sentences":"// No need for volatile, PDOMCPPUnknownScope protects its fields.","labels":{"default":["negative"]}}
{"sentences":"/**\n * Test to verify that the DataNode Uuid is correctly initialized before\n * FsDataSet initialization.\n */","labels":{"default":["positive"]}}
{"sentences":"// This constructor does the actual verification by ensuring that\n    // the DatanodeUuid is initialized.","labels":{"default":["negative"]}}
{"sentences":"// Create configuration to use SimulatedFsDatasetVerifier#Factory.","labels":{"default":["positive"]}}
{"sentences":"// Start a cluster so that SimulatedFsDatasetVerifier constructor is\n    // invoked.","labels":{"default":["positive"]}}
{"sentences":"@link ComponentConnector","labels":{"default":["negative"]}}
{"sentences":"@link ComponentConnector","labels":{"default":["negative"]}}
{"sentences":"@param classType\n     *            {@link ComponentConnector} class to instantiate","labels":{"default":["negative"]}}
{"sentences":"@return new instance of the connector","labels":{"default":["negative"]}}
{"sentences":"@param fullyqualifiedName\n     *            fully qualified name of the server side component class","labels":{"default":["negative"]}}
{"sentences":"@return component connector class to use","labels":{"default":["negative"]}}
{"sentences":"@return component connector class to load after the initial widgetset\n     *         loading","labels":{"default":["negative"]}}
{"sentences":"@param classType\n     *            component connector class","labels":{"default":["negative"]}}
{"sentences":"Abstract class mapping between {@link ComponentConnector} instances and their\n * instances.","labels":{"default":["positive"]}}
{"sentences":"/**\n     * Create a new instance of a connector based on its type.\n     * \n     * @param classType\n     *            {@link ComponentConnector} class to instantiate\n     * @return new instance of the connector\n     */","labels":{"default":["positive"]}}
{"sentences":"/**\n     * Return the connector class to use for a fully qualified server side\n     * component class name.\n     * \n     * @param fullyqualifiedName\n     *            fully qualified name of the server side component class\n     * @return component connector class to use\n     */","labels":{"default":["positive"]}}
{"sentences":"/**\n     * Return the connector classes to load after the initial widgetset load and\n     * start.\n     * \n     * @return component connector class to load after the initial widgetset\n     *         loading\n     */","labels":{"default":["positive"]}}
{"sentences":"/**\n     * Make sure the code for a (deferred or lazy) component connector type has\n     * been loaded, triggering the load and waiting for its completion if\n     * necessary.\n     * \n     * @param classType\n     *            component connector class\n     */","labels":{"default":["positive"]}}
{"sentences":"A concrete implementation of this class is generated by WidgetMapGenerator or\n * one of its subclasses during widgetset compilation.","labels":{"default":["negative"]}}
{"sentences":"/**\n   * Create the mini cluster for testing and sub in a custom runtime so that\n   * edit log journal failures don't actually cause the JVM to exit.\n   */","labels":{"default":["positive"]}}
{"sentences":"/**\n   * Pull out one of the JournalAndStream objects from the edit log.\n   */","labels":{"default":["positive"]}}
{"sentences":"// Ignore ExitExceptions as the tests may result in the\n        // NameNode doing an immediate shutdown.","labels":{"default":["negative"]}}
{"sentences":"// Invalidate one edits journal.","labels":{"default":["positive"]}}
{"sentences":"// The NN has not terminated (no ExitException thrown)","labels":{"default":["positive"]}}
{"sentences":"// A single journal failure should not result in a call to terminate","labels":{"default":["positive"]}}
{"sentences":"// Invalidate both edits journals.","labels":{"default":["positive"]}}
{"sentences":"// The NN has not terminated (no ExitException thrown)","labels":{"default":["positive"]}}
{"sentences":"// Invalidate both edits journals.","labels":{"default":["positive"]}}
{"sentences":"// The NN has not terminated (no ExitException thrown)","labels":{"default":["positive"]}}
{"sentences":"// Invalidate one edits journal.","labels":{"default":["positive"]}}
{"sentences":"// The NN has not terminated (no ExitException thrown)","labels":{"default":["positive"]}}
{"sentences":"// A single journal failure should not result in a call to terminate","labels":{"default":["positive"]}}
{"sentences":"// Set one of the edits dirs to be required.","labels":{"default":["positive"]}}
{"sentences":"// Invalidated the one required edits journal.","labels":{"default":["positive"]}}
{"sentences":"// The NN has not terminated (no ExitException thrown)\n    \n    // ..and that the other stream is active.","labels":{"default":["positive"]}}
{"sentences":"// Since the required directory failed setReadyToFlush, and that\n    // directory was listed prior to the non-required directory,\n    // we should not call setReadyToFlush on the non-required\n    // directory. Regression test for HDFS-2874.","labels":{"default":["negative"]}}
{"sentences":"// Set up 4 name/edits dirs.","labels":{"default":["positive"]}}
{"sentences":"// Keep running unless there are less than 2 edits dirs remaining.","labels":{"default":["positive"]}}
{"sentences":"// All journals active.","labels":{"default":["positive"]}}
{"sentences":"// Invalidate 1/4 of the redundant journals.","labels":{"default":["positive"]}}
{"sentences":"// Invalidate 2/4 of the redundant journals.","labels":{"default":["positive"]}}
{"sentences":"// Invalidate 3/4 of the redundant journals.","labels":{"default":["positive"]}}
{"sentences":"// The NN has not terminated (no ExitException thrown)","labels":{"default":["positive"]}}
{"sentences":"// The NN has not terminated (no ExitException thrown)","labels":{"default":["positive"]}}
{"sentences":"// The NN has not terminated (no ExitException thrown)","labels":{"default":["positive"]}}
{"sentences":"Replace the journal at index <code>index</code> with one that throws an\n   * exception on flush.","labels":{"default":["positive"]}}
{"sentences":"@param index the index of the journal to take offline.","labels":{"default":["negative"]}}
{"sentences":"@return the original <code>EditLogOutputStream</code> of the journal.","labels":{"default":["negative"]}}
{"sentences":"@return true if the operation was successful, false otherwise.","labels":{"default":["negative"]}}
{"sentences":"/**\n   * Do a mutative metadata operation on the file system.\n   * \n   * @return true if the operation was successful, false otherwise.\n   */","labels":{"default":["positive"]}}
{"sentences":"/**\n   * Replace the journal at index <code>index</code> with one that throws an\n   * exception on flush.\n   * \n   * @param index the index of the journal to take offline.\n   * @return the original <code>EditLogOutputStream</code> of the journal.\n   */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * Ewa Matejska          (PalmSource) - initial API and implementation\n * Martin Oberhuber      (Wind River) - [186773] split ISystemRegistryUI from ISystemRegistry\n * Martin Oberhuber      (Wind River) - [196934] hide disabled system types in remotecdt combo\n * Yu-Fen Kuo            (MontaVista) - [190613] Fix NPE in Remotecdt when RSEUIPlugin has not been loaded\n * Martin Oberhuber      (Wind River) - [cleanup] Avoid using SystemStartHere in production code\n * Johann Draschwandtner (Wind River) - [231827][remotecdt]Auto-compute default for Remote path\n * Johann Draschwandtner (Wind River) - [233057][remotecdt]Fix button enablement\n * Anna Dushistova       (MontaVista) - [181517][usability] Specify commands to be run before remote application launch\n * Anna Dushistova       (MontaVista) - [223728] [remotecdt] connection combo is not populated until RSE is activated\n * Anna Dushistova       (MontaVista) - [267951] [remotecdt] Support systemTypes without files subsystem\n * Anna Dushistova  (Mentor Graphics) - [314659] move remote launch/debug to DSF \n * Anna Dushistova  (Mentor Graphics) - moved to org.eclipse.cdt.launch.remote.tabs\n * Anna Dushistova  (Mentor Graphics) - [318052] [remote launch] Properties are not saved/used\n * Anna Dushistova  (Mentor Graphics) - [333453] adapted the fix from RemoteCDSFMainTab.java\n * Dan Ungureanu          (Freescale) - [428367] [remote launch] Fix missing title for Properties dialog\n * Iulia Vasii            (Freescale) - [370768] new 'Edit...' button to access connection properties","labels":{"default":["negative"]}}
{"sentences":"/* Labels and Error Messages */","labels":{"default":["positive"]}}
{"sentences":"/* Defaults */","labels":{"default":["positive"]}}
{"sentences":"/* SystemConnectionPropertyPage id*/","labels":{"default":["positive"]}}
{"sentences":"@see org.eclipse.debug.ui.ILaunchConfigurationTab#createControl","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.ui.ILaunchConfigurationTab#isValid","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.ui.ILaunchConfigurationTab#performApply","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.debug.ui.ILaunchConfigurationTab#initialize","labels":{"default":["negative"]}}
{"sentences":"/* The RSE Connection dropdown with New button. */","labels":{"default":["positive"]}}
{"sentences":"/* The Project and local binary location */","labels":{"default":["positive"]}}
{"sentences":"/* The remote binary location and skip download option */","labels":{"default":["positive"]}}
{"sentences":"/* If the local binary path changes, modify the remote binary location */","labels":{"default":["positive"]}}
{"sentences":"// //No more needed according to\n\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=178832\n\t\t// LaunchUIPlugin.setDialogShell(parent.getShell());","labels":{"default":["negative"]}}
{"sentences":"/*\n\t * isValid\n\t * \n\t * @see org.eclipse.debug.ui.ILaunchConfigurationTab#isValid\n\t */","labels":{"default":["positive"]}}
{"sentences":"/*\n\t * createTargetExePath This creates the remote path user-editable textfield\n\t * on the Main Tab.\n\t */","labels":{"default":["positive"]}}
{"sentences":"// Commands to run before execution","labels":{"default":["positive"]}}
{"sentences":"/*\n\t * createDownloadOption This creates the skip download check button.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/*\n\t * performApply\n\t * \n\t * @see org.eclipse.debug.ui.ILaunchConfigurationTab#performApply\n\t */","labels":{"default":["positive"]}}
{"sentences":"/*\n\t * @see org.eclipse.debug.ui.ILaunchConfigurationTab#initializeFrom\n\t */","labels":{"default":["positive"]}}
{"sentences":"/*\n\t\t * Select the last used connection in the connecion pulldown if it still\n\t\t * exists.\n\t\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Opens the <code>SystemConnectionPropertyPage</code> page for the selected connection.\n\t */","labels":{"default":["positive"]}}
{"sentences":"// already initialized","labels":{"default":["negative"]}}
{"sentences":"/*\n\t * setLocalPathForRemotePath This function sets the remote path text field\n\t * with the value of the local executable path.\n\t */","labels":{"default":["positive"]}}
{"sentences":"// During initialization, we don't want to use the default\n\t\t// values of the connection, but we want to use the ones\n\t\t// that are part of the configuration","labels":{"default":["negative"]}}
{"sentences":"// try to use remote path","labels":{"default":["positive"]}}
{"sentences":"// use remoteWSRoot instead of Workspace Root","labels":{"default":["positive"]}}
{"sentences":"/*\n\t * createControl\n\t * \n\t * @see org.eclipse.debug.ui.ILaunchConfigurationTab#createControl\n\t */","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t// create composite","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Doug Schaefer (IBM) - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":"@noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"/**\n * This represents a field in a struct. This allows for the specification of\n * size for a bit field.\n * \n * @noextend This interface is not intended to be extended by clients.\n * @noimplement This interface is not intended to be implemented by clients.\n */","labels":{"default":["positive"]}}
{"sentences":"**\n\t * <code>FIELD_SIZE</code> represents the relationship between a\n\t * <code>IASTFieldDeclarator</code> and its <code>IASTExpression</code>.\n\t */","labels":{"default":["positive"]}}
{"sentences":"@since 5.3","labels":{"default":["negative"]}}
{"sentences":"@since 5.1","labels":{"default":["negative"]}}
{"sentences":"@param size\n\t *            <code>IASTExpression</code>","labels":{"default":["negative"]}}
{"sentences":"@return size of bit field or null.","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * Returns the number of bits if this is a bit field, otherwise {@code null}.\n\t * \n\t * @return size of bit field or null.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Sets the bitfield size.\n\t * \n\t * @param size\n\t *            <code>IASTExpression</code>\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * @since 5.1\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * @since 5.3\n\t */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Texas Instruments, Freescale Semiconductor - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@author Alain Lee and John Cortell","labels":{"default":["negative"]}}
{"sentences":"/**\n * An extension of the IMemoryBlockRetrievalExtension interface that supports\n * memory spaces. The memory space interface is provisional, thus this class\n * cannot yet be API.\n * \n * @author Alain Lee and John Cortell\n */","labels":{"default":["positive"]}}
{"sentences":"@link #getMemorySpaces()","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * Caller to {@link #getMemorySpaces()} provides one of these, as that\n\t * method may need to consult the debugger backend, and thus needs to be\n\t * asynchronous\n\t */","labels":{"default":["positive"]}}
{"sentences":"Provides the string encoding of a memory space qualified address. This\n\t * method is called when having to represent a memory-space qualified\n\t * address as a single string.","labels":{"default":["positive"]}}
{"sentences":"@param expression\n\t *            the expression representing a location within a memory space.\n\t *            This can be a simple numeric expression like \"0x10000\" or\n\t *            something more complex \"$EAX+(gCustomerCount*100)\".","labels":{"default":["negative"]}}
{"sentences":"@param memorySpaceID\n\t *            a string which represents the memory space","labels":{"default":["negative"]}}
{"sentences":"@return the encoded string representation of the address, or null to\n\t *         indicate no custom encoding is required","labels":{"default":["negative"]}}
{"sentences":"@link #encodeAddress(String, String)","labels":{"default":["negative"]}}
{"sentences":"@param str\n\t *            the encoded string","labels":{"default":["negative"]}}
{"sentences":"@return the result of decoding the string into its components; never null","labels":{"default":["negative"]}}
{"sentences":"@param context\n\t *            a debug context","labels":{"default":["negative"]}}
{"sentences":"@param request\n\t *            the asynchronous data request object","labels":{"default":["negative"]}}
{"sentences":"@return an array of memory space identifiers","labels":{"default":["negative"]}}
{"sentences":"@param expression\n\t *            expression to be evaluated to an address","labels":{"default":["negative"]}}
{"sentences":"@param context\n\t *            a debug context","labels":{"default":["negative"]}}
{"sentences":" @param memorySpaceID\n\t *            the memory space the block is being requested for, or null if\n\t *            n/a","labels":{"default":["negative"]}}
{"sentences":"@return a memory block based on the given parameters","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * Provides the memory spaces available for the given debug context.\n\t * \n\t * @param context\n\t *            a debug context\n\t * @param request\n\t *            the asynchronous data request object\n\t * @return an array of memory space identifiers\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * The inverse of {@link #encodeAddress(String, String)}.\n\t * \n\t * @param str\n\t *            the encoded string\n\t * @return the result of decoding the string into its components; never null\n\t * @throws CoreException\n\t *             if decoding and string is not in the expected format\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Provides the string encoding of a memory space qualified address. This\n\t * method is called when having to represent a memory-space qualified\n\t * address as a single string.\n\t * \n\t * @param expression\n\t *            the expression representing a location within a memory space.\n\t *            This can be a simple numeric expression like \"0x10000\" or\n\t *            something more complex \"$EAX+(gCustomerCount*100)\".\n\t * @param memorySpaceID\n\t *            a string which represents the memory space\n\t * @return the encoded string representation of the address, or null to\n\t *         indicate no custom encoding is required\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Retrieves and returns a memory block.\n\t * \n\t * @param expression\n\t *            expression to be evaluated to an address\n\t * @param context\n\t *            a debug context\n\t * @param memorySpaceID\n\t *            the memory space the block is being requested for, or null if\n\t *            n/a\n\t * @return a memory block based on the given parameters\n\t * @throws DebugException\n\t *             if unable to retrieve the specified memory\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Return true if creating a memory block with a null memory space ID is NOT\n\t * supported. Some debuggers may not have the ability to infer the memory\n\t * space from an expression, in which case the user should be forced to\n\t * select a memory space when being prompted for a memory location.\n\t */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     John Camelon (IBM Rational Software) - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"This interface represents a postfix array subscript expression. x[10]\n * y.z()[t * t]","labels":{"default":["positive"]}}
{"sentences":"@since 5.3","labels":{"default":["negative"]}}
{"sentences":"@since 5.1","labels":{"default":["negative"]}}
{"sentences":"@since 5.2","labels":{"default":["negative"]}}
{"sentences":"@since 5.2","labels":{"default":["negative"]}}
{"sentences":"@param expression","labels":{"default":["negative"]}}
{"sentences":"@return <code>IASTExpression</code> that represents the array.","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * @since 5.3\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * @since 5.1\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Not allowed on frozen ast.\n\t * @deprecated Replaced by {@link #setArgument(IASTInitializerClause)}\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Returns the subscript expression, or <code>null</code>. Consider using {@link #getArgument()}.\n\t * @deprecated Replaced by {@link #getArgument()}\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Not allowed on frozen ast.\n\t * @since 5.2\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Returns the operand of this expression. In c++ the operand can be a braced initializer list.\n\t * @since 5.2\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Set the expression that represents the array.\n\t * \n\t * @param expression\n\t *            <code>IASTExpression</code> to be set.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Get the expression that represents the array\n\t * \n\t * @return <code>IASTExpression</code> that represents the array.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n * This interface represents a postfix array subscript expression. x[10]\n * y.z()[t * t]\n * \n * @noextend This interface is not intended to be extended by clients.\n * @noimplement This interface is not intended to be implemented by clients.\n */","labels":{"default":["positive"]}}
{"sentences":"@noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":"@noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"@link #setArgument(IASTInitializerClause)","labels":{"default":["negative"]}}
{"sentences":"@link #getArgument()","labels":{"default":["negative"]}}
{"sentences":"@link #getArgument()","labels":{"default":["negative"]}}
{"sentences":"@deprecated Replaced by {@link #getArgument()}","labels":{"default":["negative"]}}
{"sentences":"@deprecated Replaced by {@link #setArgument(IASTInitializerClause)}","labels":{"default":["negative"]}}
{"sentences":"@return property id (not null)","labels":{"default":["negative"]}}
{"sentences":"@param propertyId\n     *            the identifier (not null) of the property whose value to check","labels":{"default":["negative"]}}
{"sentences":"@since 6.6","labels":{"default":["negative"]}}
{"sentences":"/**\n * Simple container filter checking whether an item property value is null.\n * \n * This filter also directly supports in-memory filtering.\n * \n * @since 6.6\n */","labels":{"default":["positive"]}}
{"sentences":"Constructor for a filter that compares the value of an item property with\n     * null.","labels":{"default":["positive"]}}
{"sentences":" // Only objects of the same class can be equal","labels":{"default":["positive"]}}
{"sentences":"// Checks the properties one by one","labels":{"default":["positive"]}}
{"sentences":"Returns the property id of the property tested by the filter, not null\n     * for valid filters.","labels":{"default":["positive"]}}
{"sentences":"For in-memory filtering, a simple == check is performed. For other\n     * containers, the comparison implementation is container dependent but\n     * should correspond to the in-memory null check.","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Ericsson - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@since 1.1","labels":{"default":["negative"]}}
{"sentences":"/**\n     * Returns the GDB/MI thread group identifier of this context.\n     */","labels":{"default":["positive"]}}
{"sentences":"/**\n * An container context object.  In the GDB/MI protocol, thread groups\n * are used as containers of threads, and are represented by a string \n * identifier.  These thread groups are the basis for this context.\n * @since 1.1\n */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Ericsson - initial API and implementation\n *     Marc Khouzam (Ericsson) - Don't use translatable strings for the command summary\n *                               since it will be send directly to GDB","labels":{"default":["negative"]}}
{"sentences":"@since 3.0","labels":{"default":["negative"]}}
{"sentences":"// The name of the sub actions","labels":{"default":["positive"]}}
{"sentences":"// A comma-separated string of the actual content of each sub command\n\t// This is the string than can be sent to GDB","labels":{"default":["positive"]}}
{"sentences":"// The number of steps this while-stepping command will occur","labels":{"default":["positive"]}}
{"sentences":"// Take all the sub action names, and find their corresponding action,\n\t// then build the content string","labels":{"default":["positive"]}}
{"sentences":"// Remove last comma","labels":{"default":["positive"]}}
{"sentences":"// Create command to be sent to GDB","labels":{"default":["positive"]}}
{"sentences":"@link BigDecimal","labels":{"default":["negative"]}}
{"sentences":"@link NumberFormat","labels":{"default":["negative"]}}
{"sentences":"@link #getFormat(Locale)","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":"@since 7.2","labels":{"default":["negative"]}}
{"sentences":"A converter that converts from {@link String} to {@link BigDecimal} and back.\n * Uses the given locale and a {@link NumberFormat} instance for formatting and\n * parsing.","labels":{"default":["positive"]}}
{"sentences":"Leading and trailing white spaces are ignored when converting from a String.\n * </p>\n * <p>\n * Override and overwrite {@link #getFormat(Locale)} to use a different format.","labels":{"default":["negative"]}}
{"sentences":"@link String","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     IBM Corporation - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"//IBinding declarator;","labels":{"default":["positive"]}}
{"sentences":"// temporary storage for pointer modifiers","labels":{"default":["positive"]}}
{"sentences":"// stores pointer and array modifiers that are applied to the declarator","labels":{"default":["positive"]}}
{"sentences":"// the declSpec may be null, so use getDeclSpec()","labels":{"default":["negative"]}}
{"sentences":"// link the types together","labels":{"default":["positive"]}}
{"sentences":"@author Mike Kucera","labels":{"default":["negative"]}}
{"sentences":"Represents a frame on the declaration stack used by the resolver actions.","labels":{"default":["positive"]}}
{"sentences":"@param testDir Path root testing directory","labels":{"default":["negative"]}}
{"sentences":"// test more complicated directory","labels":{"default":["positive"]}}
{"sentences":"// testing directory with 1 file","labels":{"default":["positive"]}}
{"sentences":"// test empty directory","labels":{"default":["positive"]}}
{"sentences":"/** Test when input path is a directory */","labels":{"default":["positive"]}}
{"sentences":"/** Test when input path is a file */","labels":{"default":["positive"]}}
{"sentences":"// Create and write a file that contains three blocks of data","labels":{"default":["positive"]}}
{"sentences":"Sets the root testing directory and reinitializes any additional test paths\n   * that are under the root.  This method is intended to be called from a\n   * subclass's @BeforeClass method if there is a need to override the testing\n   * directory.","labels":{"default":["positive"]}}
{"sentences":"/**\n * This class tests the FileStatus API.\n */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     IBM Rational Software - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@author jcamelon","labels":{"default":["negative"]}}
{"sentences":"This method is quick 1-pass path reconciler.","labels":{"default":["positive"]}}
{"sentences":"Functions:\n\t *   - replace \"/\" or \"\\\" by system's separator\n\t *   - replace multiple separators by single one\n\t *   - skip \"/./\" \n\t *   - skip quotes\n\t * \n\t * Note: \"/../\" is left untouched on purpose in order to work properly under\n\t * circumstances such as this:\n\t * \n\t * header file at include_1/vector:\n\t *   // Is supposed to find the STL vector header:\n\t *   #include <ext/../vector>\n\t *   \n\t * GCC include tree \n\t *   include_gcc/ext/...\n\t *              /vector\n\t * \n\t * (ls include_1/ext/../vector does not work either).","labels":{"default":["negative"]}}
{"sentences":"@param originalPath - path to process","labels":{"default":["negative"]}}
{"sentences":"@return             - reconciled path","labels":{"default":["negative"]}}
{"sentences":"// index for output array","labels":{"default":["positive"]}}
{"sentences":"// quotes are removed","labels":{"default":["positive"]}}
{"sentences":"// both separators are processed","labels":{"default":["positive"]}}
{"sentences":"// in the same way","labels":{"default":["positive"]}}
{"sentences":"// No separator before, not a 1st string symbol.","labels":{"default":["positive"]}}
{"sentences":"// Process as usual","labels":{"default":["positive"]}}
{"sentences":"// Write nothing to output, skip the next symbol","labels":{"default":["positive"]}}
{"sentences":"// Check for \"/./\" case","labels":{"default":["positive"]}}
{"sentences":"// Check for next symbol","labels":{"default":["positive"]}}
{"sentences":"// Separator before \".\"","labels":{"default":["positive"]}}
{"sentences":"@param path     - include path","labels":{"default":["negative"]}}
{"sentences":"@param fileName - include file name","labels":{"default":["negative"]}}
{"sentences":"@return         - reconciled path","labels":{"default":["negative"]}}
{"sentences":"// to avoid multiple calculations","labels":{"default":["positive"]}}
{"sentences":"// to avoid duplicate separators","labels":{"default":["positive"]}}
{"sentences":"@see ViewportGenerator","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":"@since 7.4","labels":{"default":["negative"]}}
{"sentences":"Defines a viewport tag generator class that will be used for generating the\n * content of a viewport tag that will be added to the HTML of the host page of\n * a UI class.\n * <p>\n * If you want to use the same viewport values for all requests, you can use the\n * simpler {@link Viewport} annotation instead.","labels":{"default":["positive"]}}
{"sentences":"@return the viewport generator class","labels":{"default":["negative"]}}
{"sentences":"Gets the viewport generator class to use. Please note that the class must\n     * be public and have a default constructor. It must additionally be\n     * declared as static if it's declared as an inner class.","labels":{"default":["positive"]}}
{"sentences":"@link Viewport","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Markus Schorn - initial API and implementation\n *     Andrew Ferguson (Symbian)\n *     Bryan Wilkinson (QNX)\n *     Sergey Prigogin (Google)\n *     Jens Elmenthaler - http://bugs.eclipse.org/173458 (camel case completion)","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"@noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":"@noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"@return {@code true} if there are threads waiting for read locks.","labels":{"default":["negative"]}}
{"sentences":"@since 5.2","labels":{"default":["negative"]}}
{"sentences":"@see #findIncludedBy(IIndexFile, int)","labels":{"default":["negative"]}}
{"sentences":"@see #findIncludes(IIndexFile, int)","labels":{"default":["negative"]}}
{"sentences":"@see #findIncludedBy(IIndexFile, int)","labels":{"default":["negative"]}}
{"sentences":"@see #findIncludes(IIndexFile, int)","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * Constant to specify infinite depth.\n\t * @see #findIncludedBy(IIndexFile, int)\n\t * @see #findIncludes(IIndexFile, int)\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Constant to find direct includes, only.\n\t * @see #findIncludedBy(IIndexFile, int)\n\t * @see #findIncludes(IIndexFile, int)\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Constant to search for declarations. This does not include definitions.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Constant to search for definitions. This does not include declarations.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Constant to search for references. This does not include declarations or definitions.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Constant to search for occurrences across language boundaries.\n\t * Can be used to find the occurrences of a C++-function declared with 'extern \"C\"' within\n\t * the c-linkage.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Constant to search for all declarations including definitions.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Constant to search for all occurrences of a binding. This includes declarations, definitions\n\t * and references.\n\t */","labels":{"default":["positive"]}}
{"sentences":"@see #getLastWriteAccess()","labels":{"default":["negative"]}}
{"sentences":"@since 5.4","labels":{"default":["negative"]}}
{"sentences":"@since 5.3","labels":{"default":["negative"]}}
{"sentences":"@since 5.4","labels":{"default":["negative"]}}
{"sentences":"@since 5.4","labels":{"default":["negative"]}}
{"sentences":"@return an IIndexBinding for this index that is equivalent to the specified binding","labels":{"default":["negative"]}}
{"sentences":"@param binding an AST or an index binding","labels":{"default":["negative"]}}
{"sentences":"@param binding a binding for which declarations are searched for\n\t * @return an array of names\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@param binding a binding for which declarations are searched for\n\t * @return an array of names\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@param binding a binding for which references are searched for\n\t * @return an array of names\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":" @noreference This method is not intended to be referenced by clients.","labels":{"default":["negative"]}}
{"sentences":" @noreference This method is not intended to be referenced by clients.","labels":{"default":["negative"]}}
{"sentences":" @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@link IIndexBinding","labels":{"default":["negative"]}}
{"sentences":"@link #FIND_DECLARATIONS","labels":{"default":["negative"]}}
{"sentences":"@link #FIND_DEFINITIONS","labels":{"default":["negative"]}}
{"sentences":"@link #SEARCH_ACROSS_LANGUAGE_BOUNDARIES","labels":{"default":["negative"]}}
{"sentences":"@link #FIND_REFERENCES","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code true","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code true","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code true","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@link #DEPTH_INFINITE","labels":{"default":["negative"]}}
{"sentences":"@link #DEPTH_ZERO","labels":{"default":["negative"]}}
{"sentences":"@link #DEPTH_ZERO","labels":{"default":["negative"]}}
{"sentences":"@link #DEPTH_INFINITE","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@link #getFiles(int, IIndexFileLocation)","labels":{"default":["negative"]}}
{"sentences":"@link #getFile(int, IIndexFileLocation, ISignificantMacros)","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@link #acquireReadLock()","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * Before making calls to an index you have to obtain a lock. The objects\n\t * returned by an index become invalid as soon as the indexer writes to the\n\t * index. You may obtain nested read locks. Make sure you release the lock.\n\t * @see #getLastWriteAccess()\n\t * <pre>\n\t * index.acquireReadLock();\n\t * try {\n\t *    ....\n\t * } finally {\n\t *    index.releaseReadLock();\n\t * }\n\t * </pre>\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Any lock obtained by {@link #acquireReadLock()} must be released.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Returns a timestamp of when the index was last written to. This can\n\t * be used to figure out whether information read from the index is\n\t * still reliable or not.","labels":{"default":["positive"]}}
{"sentences":" @param location an IIndexFileLocation representing the location of the file\n\t * @return the file in the index or {@code null}\n\t * @throws CoreException\n\t * @deprecated Use","labels":{"default":["negative"]}}
{"sentences":"@param linkageID the id of the linkage in which the file has been parsed.\n\t * @param location the IIndexFileLocation representing the location of the file\n\t * @param macroDictionary The names and definitions of the macros used to disambiguate between\n\t *     variants of the file contents corresponding to different inclusion points.\n\t * @return the file for the location, or {@code null} if the file is not present in\n\t *     the index\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":" @since 5.4","labels":{"default":["negative"]}}
{"sentences":"@param linkageID the id of the linkage in which the file has been parsed.\n\t * @param location the IIndexFileLocation representing the location of the file\n\t * @return the files for the location and the linkage.\n\t * @throws CoreException\n\t * @since 5.4","labels":{"default":["negative"]}}
{"sentences":"@param location an IIndexFileLocation representing the location of the file\n\t * @return an array of file-objects.\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@param file the file containing the include directives\n\t * @return an array of include relations\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@param file the file included by the directives to be found\n\t * @return an array of include relations\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@param file the file containing the include directives\n\t * @param depth depth to which includes are followed, should be one of\n\t * {@link #DEPTH_ZERO} or {@link #DEPTH_INFINITE}\n\t * @return an array of include relations\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":" @param file the file the include directives point to\n\t * @param depth depth to which includes are followed, should be one of\n\t * {@link #DEPTH_ZERO} or {@link #DEPTH_INFINITE}\n\t * @return an array of include relations\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@param include\n\t * @return the file included or {@code null}.\n\t * @throws CoreException\n\t * @since 4.0","labels":{"default":["negative"]}}
{"sentences":" @param name a name, that has to be matched by the macros.\n\t * @param filter a filter that allows for skipping parts of the index\n\t * @param monitor a monitor to report progress, may be {@code null}.\n\t * @return an array of macros matching the name.\n\t * @throws CoreException\n\t * @since 4.0.2","labels":{"default":["negative"]}}
{"sentences":"@param prefix the prefix with which all returned macros must start\n\t * @param filter a filter that allows for skipping parts of the index\n\t * @param monitor a monitor for progress reporting and cancellation, may be {@code null}\n\t * @return an array of bindings with the prefix\n\t * @throws CoreException\n\t * @since 4.0.2","labels":{"default":["negative"]}}
{"sentences":" @param name a name to find the binding for\n\t * @return the binding or {@code null}\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@param pattern the pattern the name of the binding has to match.\n\t * @param isFullyQualified if {@code true}, binding must be in global scope\n\t * @param filter a filter that allows for skipping parts of the index\n\t * @param monitor a monitor to report progress, may be {@code null}.\n\t * @return an array of bindings matching the pattern\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@param patterns an array of patterns the components of the qualified name of the bindings\n\t *     have to match.\n\t * @param isFullyQualified if {@code true}, the array of pattern specifies the fully\n\t *     qualified name\n\t * @param filter a filter that allows for skipping parts of the index\n\t * @param monitor a monitor to report progress, may be {@code null}.\n\t * @return an array of bindings matching the pattern\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":" @param pattern a pattern the name of the bindings have to match.\n\t * @param filter a filter that allows for skipping parts of the index\n\t * @param monitor a monitor to report progress, may be {@code null}\n\t * @return an array of bindings matching the pattern\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@param names an array of names, which has to be matched by the qualified name of\n\t *     the bindings.\n\t * @param filter a filter that allows for skipping parts of the index\n\t * @param monitor a monitor to report progress, may be {@code null}.\n\t * @return an array of bindings matching the pattern\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":" @param name a name, which has to be matched by the qualified name of the bindings.\n\t * @param filter a filter that allows for skipping parts of the index\n\t * @param monitor a monitor to report progress, may be {@code null}.\n\t * @return an array of bindings matching the pattern\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@param name a name, which has to be matched by the qualified name of the bindings.\n\t * @param fileScopeOnly if true, only bindings at file scope are returned\n\t * @param filter a filter that allows for skipping parts of the index\n\t * @param monitor a monitor to report progress, may be {@code null}.\n\t * @return an array of bindings matching the pattern\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"@param prefix the prefix with which all returned bindings must start\n\t * @param fileScopeOnly if true, only bindings at file scope are returned\n\t * @param filter a filter that allows for skipping parts of the index\n\t * @param monitor a monitor for progress reporting and cancellation, may be {@code null}\n\t * @return an array of bindings with the prefix\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":" @noreference This method is not intended to be referenced by clients.","labels":{"default":["negative"]}}
{"sentences":" @param binding a binding for which names are searched for\n\t * @param flags a combination of {@link #FIND_DECLARATIONS}, {@link #FIND_DEFINITIONS},\n\t * {@link #FIND_REFERENCES} and {@link #SEARCH_ACROSS_LANGUAGE_BOUNDARIES}.\n\t * @return an array of names\n\t * @throws CoreException","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * Returns {@code true} if the index is fully initialized. An index may not be fully initialized\n\t * during Eclipse startup, or soon after adding a new project to the workspace.\n\t * @since 5.4\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Returns the global inline c++ namespaces.\n\t * @throws CoreException\n\t * @since 5.3\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Returns an array of files containing unresolved includes.\n\t * @noreference This method is not intended to be referenced by clients.\n\t * @since 5.4\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Returns an array of files that were indexed with I/O errors.\n\t * @noreference This method is not intended to be referenced by clients.\n\t * @since 5.4\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Returns an array of all files that are part of this index. If a file is parsed in two\n\t * linkages or in multiple fragments, only one of the files will be returned.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Creates a file-set that can be used with this index as long as the caller holds a read-lock.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Returns an {@link IIndexBinding} for this index that is equivalent to the specified binding,\n\t * or null if such a binding does not exist in this index. This is useful for adapting\n\t * bindings obtained from IIndex objects that might have been created for a different scope\n     * or for IBinding objects obtained directly from the AST.\n     *\n\t * @param binding an AST or an index binding\n\t * @return an IIndexBinding for this index that is equivalent to the specified binding\n\t */","labels":{"default":["positive"]}}
{"sentences":"\n\t/**\n\t * Searches for all definitions that resolve to the given binding.\n\t * This is fully equivalent to\n\t * <pre>\n\t * findNames(binding, IIndex.FIND_DEFINITIONS);\n\t * </pre>\n\t * @param binding a binding for which declarations are searched for\n\t * @return an array of names\n\t * @throws CoreException\n\t */","labels":{"default":["positive"]}}
{"sentences":"**\n\t * Searches for all declarations and definitions that resolve to the given binding.\n\t * This is fully equivalent to\n\t * <pre>\n\t * findNames(binding, IIndex.FIND_DECLARATIONS_DEFINITIONS);\n\t * </pre>\n\t * @param binding a binding for which declarations are searched for\n\t * @return an array of names\n\t * @throws CoreException\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Searches for all references that resolve to the given binding.\n\t * This is fully equivalent to\n\t * <pre>\n\t * findNames(binding, IIndex.FIND_REFERENCES);\n\t * </pre>\n\t * @param binding a binding for which references are searched for\n\t * @return an array of names\n\t * @throws CoreException\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Searches for all names that resolve to the given binding. The search can be limited to\n\t * references, declarations or definitions, or a combination of those.\n\t *\n\t * @param binding a binding for which names are searched for\n\t * @param flags a combination of {@link #FIND_DECLARATIONS}, {@link #FIND_DEFINITIONS},\n\t * {@link #FIND_REFERENCES} and {@link #SEARCH_ACROSS_LANGUAGE_BOUNDARIES}.\n\t * @return an array of names\n\t * @throws CoreException\n\t */","labels":{"default":["positive"]}}
{"sentences":"\t * Searches for all bindings with names that start with the given prefix.","labels":{"default":["positive"]}}
{"sentences":"Searches the global scope and optionally all other scopes for bindings with a given name.\n\t * In case a binding exists in multiple projects, no duplicate bindings are returned.\n\t * This method makes use of the BTree and is faster than the methods using patterns.","labels":{"default":["positive"]}}
{"sentences":" Searches the global scope for all bindings with a given name.\n\t * In case a binding exists in multiple projects, no duplicate bindings are returned.\n\t * This method makes use of the BTree and is faster than the methods using patterns.\n\t *\n \t * This is fully equivalent to\n\t * <pre>\n\t * findBindings(name, true, filter, monitor);\n\t * </pre>","labels":{"default":["positive"]}}
{"sentences":"*\n\t * Searches for all bindings in global scope with a given name. In case a binding exists in\n\t * multiple projects, no duplicate bindings are returned. This method makes use of the BTree\n\t * and is faster than the methods using patterns.\n\t *","labels":{"default":["positive"]}}
{"sentences":"Searches for all macro containers (one for macros with the same name) with names that\n\t * match the given pattern. In case a binding exists in multiple projects, no duplicate\n\t * bindings are returned.","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Searches for all bindings with qualified names that seen as an array of simple names match\n\t * the given array of patterns. In case a binding exists in multiple projects, no duplicate\n\t * bindings are returned. You can search with an array of patterns that specifies a partial\n\t * qualification only.","labels":{"default":["positive"]}}
{"sentences":" Searches for all bindings with simple names that match the given pattern. In case a binding\n\t * exists in multiple projects, no duplicate bindings are returned.\n\t * This is fully equivalent to\n\t * <pre>\n\t * findBindings(new Pattern[] {pattern}, isFullyQualified, filter, monitor);\n\t * </pre>","labels":{"default":["positive"]}}
{"sentences":" * Searches for the binding of a name. The name may be originated by\n\t * an AST or by a search in an index. May return {@code null}.","labels":{"default":["positive"]}}
{"sentences":"* Searches for all macros with names that start with the given prefix.","labels":{"default":["positive"]}}
{"sentences":" * Searches for all macros with a given name.","labels":{"default":["positive"]}}
{"sentences":"Resolves the file that is included by the given include directive. May return {@code null}\n\t * in case the file cannot be found. This is usually more efficient than using:\n\t * <pre>\n\t * getFiles(include.getIncludesLocation())\n\t * </pre>","labels":{"default":["positive"]}}
{"sentences":" Looks recursively for include relations pointing to the given file.","labels":{"default":["positive"]}}
{"sentences":"Looks recursively for include relations originated by the given file.","labels":{"default":["positive"]}}
{"sentences":" Looks for include relations pointing to the given file.\n\t * This is the same as <pre> findIncludedBy(file, DEPTH_ZERO); </pre>","labels":{"default":["positive"]}}
{"sentences":"Looks for include relations originated by the given file.\n\t * This is the same as <pre> findIncludes(file, DEPTH_ZERO); </pre>","labels":{"default":["positive"]}}
{"sentences":"Returns the file objects for the given location in any linkage.","labels":{"default":["positive"]}}
{"sentences":" Returns the file objects for the given location and linkage.\n\t * Multiple files are returned when a header file is stored in the index in multiple variants\n\t * for different sets of macro definitions.\n\t * This method may only return files that are actually managed by this fragment.\n\t * This method returns files without content, also.\n\t *","labels":{"default":["positive"]}}
{"sentences":"* Returns the file for the given location, linkage, and significant macros\n\t * May return {@code null}, if no such file exists.","labels":{"default":["positive"]}}
{"sentences":"* Returns the file object for the given location and linkage or {@code null} if the file\n\t * was not indexed in this linkage.\n\t * <p>\n\t * When a header file is stored in the index in multiple variants for different sets of macro\n\t * definitions, this method will return an arbitrary one of these variants.","labels":{"default":["positive"]}}
{"sentences":"<pre>\n\t * long timestamp;\n\t * IBinding binding= null;\n\t * index.acquireReadLock();\n\t * try {\n\t *    timestamp= index.getLastWriteAccess();\n\t *    binding= index.findBinding(...);\n\t * } finally {\n\t *    index.releaseReadLock();\n\t * }\n\t * ...\n\t * index.acqureReadLock();\n\t * try {\n\t *    if (index.getLastWriteAccess() != timestamp) {\n\t *       // don't use binding, it's not valid anymore\n\t *       binding= index.findBinding(...);\n\t *    }\n\t *    String name= binding.getName();\n\t *    ...\n\t * } finally {\n\t *    index.releaseReadLock();\n\t * }\n\t */","labels":{"default":["negative"]}}
{"sentences":"Interface for accessing the index for one or more projects.","labels":{"default":["positive"]}}
{"sentences":"// Make the default constructor private, since this only holds static methods.","labels":{"default":["negative"]}}
{"sentences":"/**\n   * Sets the bit at the specified index to {@code true}.\n   */","labels":{"default":["positive"]}}
{"sentences":"/**\n   * Sets the bit at the specified index to {@code false}.\n   */","labels":{"default":["positive"]}}
{"sentences":"/**\n   * Returns {@code true} if the bit is set at the specified index.\n   */","labels":{"default":["positive"]}}
{"sentences":"/**\n   * Returns {@code true} if any bit is set.\n   */","labels":{"default":["positive"]}}
{"sentences":"Returns the index of the first bit that is set to true that occurs on or after the\n   * specified starting index. If no such bit exists then {@code -1} is returned.","labels":{"default":["positive"]}}
{"sentences":"To iterate over the true bits in a BitSet, use the following loop:\n   * <pre>\n   * <code>\n   *  for (long i = bs.nextSetBit(0, sizeInWords); i &gt;= 0; i = bs.nextSetBit(i + 1, sizeInWords)) {\n   *    // operate on index i here\n   *  }","labels":{"default":["negative"]}}
{"sentences":"@param fromIndex the index to start checking from (inclusive)","labels":{"default":["negative"]}}
{"sentences":"@param bitsetSizeInWords the size of the bitset, measured in 8-byte words","labels":{"default":["negative"]}}
{"sentences":"@return the index of the next set bit, or -1 if there is no such bit","labels":{"default":["negative"]}}
{"sentences":"// Try to find the next set bit in the current word","labels":{"default":["positive"]}}
{"sentences":"// Find the next set bit in the rest of the words","labels":{"default":["positive"]}}
{"sentences":"@code true","labels":{"default":["negative"]}}
{"sentences":"@code false","labels":{"default":["negative"]}}
{"sentences":"@code true","labels":{"default":["negative"]}}
{"sentences":"@code true","labels":{"default":["negative"]}}
{"sentences":"@code -1","labels":{"default":["negative"]}}
{"sentences":"/**\n * Methods for working with fixed-size uncompressed bitsets.\n *\n * We assume that the bitset data is word-aligned (that is, a multiple of 8 bytes in length).\n *\n * Each bit occupies exactly one bit of storage.\n */","labels":{"default":["positive"]}}
{"sentences":"Bug 406545","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Intel Corporation - initial API and implementation\n *     Markus Schorn (Wind River Systems)\n *     Serge Beauchamp (Freescale Semiconductor)","labels":{"default":["negative"]}}
{"sentences":"/**\n * CLocationTab implements common features for \"Source Location\" and \"Output Location\"\n * tabs in project preferences.\n *\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Add, Create/Link: always enabled\n\t * Edit: enabled if 1 element selected (entry or filter)\n\t * Delete: enabled if selected element is entry\n\t */","labels":{"default":["negative"]}}
{"sentences":"// add","labels":{"default":["positive"]}}
{"sentences":"// create / link","labels":{"default":["positive"]}}
{"sentences":"// edit filter","labels":{"default":["positive"]}}
{"sentences":"// This page can be displayed either for project or for folder","labels":{"default":["negative"]}}
{"sentences":"// cannot work with multi cfg","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * This class should hold elements for source location tree\n\t */","labels":{"default":["negative"]}}
{"sentences":"@see java.lang.Object#toString()","labels":{"default":["negative"]}}
{"sentences":"/**\n\t\t * For debugging purpose only\n\t\t * @see java.lang.Object#toString()\n\t\t */","labels":{"default":["negative"]}}
{"sentences":"// Expand the tree and select current resource","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     QNX Software Systems - Initial API and implementation\n *     Markus Schorn (Wind River Systems)","labels":{"default":["negative"]}}
{"sentences":"@see GraphConfig","labels":{"default":["negative"]}}
{"sentences":"@link IncidenceSetDirectedGraph","labels":{"default":["negative"]}}
{"sentences":"// An edge is never adjacent to itself","labels":{"default":["negative"]}}
{"sentences":"/**\n * Tests for {@link IncidenceSetDirectedGraph} with default graph configuration.\n *\n * @see GraphConfig\n */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"/**\n * MakefilePreferencesMessages\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n * A simple logger to handle the task-specific user logs.\n * This class uses the system property <code>hadoop.log.dir</code>.\n * \n */","labels":{"default":["positive"]}}
{"sentences":"// localFS is set in (and used by) writeToIndexFile()","labels":{"default":["negative"]}}
{"sentences":"//the format of the index file is\n    //LOG_DIR: <the dir where the task logs are really stored>\n    //stdout:<start-offset in the stdout file> <length>\n    //stderr:<start-offset in the stderr file> <length>\n    //syslog:<start-offset in the syslog file> <length>","labels":{"default":["negative"]}}
{"sentences":"// the file doesn't have anything","labels":{"default":["negative"]}}
{"sentences":"// special cases are the debugout and profile.out files. They are\n      // guaranteed\n      // to be associated with each task attempt since jvm reuse is disabled\n      // when profiling/debugging is enabled","labels":{"default":["negative"]}}
{"sentences":"// look for the exact line containing the logname","labels":{"default":["positive"]}}
{"sentences":"/**\n   * Obtain the owner of the log dir. This is \n   * determined by checking the job's log directory.\n   */","labels":{"default":["positive"]}}
{"sentences":"// To ensure atomicity of updates to index file, write to temporary index\n    // file first and then rename.","labels":{"default":["negative"]}}
{"sentences":"//the format of the index file is\n      //LOG_DIR: <the dir where the task logs are really stored>\n      //STDOUT: <start-offset in the stdout file> <length>\n      //STDERR: <start-offset in the stderr file> <length>\n      //SYSLOG: <start-offset in the syslog file> <length>","labels":{"default":["negative"]}}
{"sentences":"// flush standard streams","labels":{"default":["positive"]}}
{"sentences":"// flush & close all appenders","labels":{"default":["positive"]}}
{"sentences":"// flush standard streams","labels":{"default":["positive"]}}
{"sentences":"// flush flushable appenders","labels":{"default":["positive"]}}
{"sentences":"/**\n   * The filter for userlogs.\n   */","labels":{"default":["positive"]}}
{"sentences":"/** Log on the stdout of the task. */","labels":{"default":["positive"]}}
{"sentences":"/** Log on the stderr of the task. */","labels":{"default":["positive"]}}
{"sentences":"/** Log on the map-reduce system logs of the task. */","labels":{"default":["positive"]}}
{"sentences":"/** The java profiler information. */","labels":{"default":["positive"]}}
{"sentences":"/** Log the debug script's stdout  */","labels":{"default":["positive"]}}
{"sentences":"@param taskid the id of the task to read the log file for","labels":{"default":["negative"]}}
{"sentences":"@param kind the kind of log to read","labels":{"default":["negative"]}}
{"sentences":"@param start the offset to read from (negative is relative to tail)","labels":{"default":["negative"]}}
{"sentences":"@param end the offset to read upto (negative is relative to tail)","labels":{"default":["negative"]}}
{"sentences":"@param isCleanup whether the attempt is cleanup attempt or not","labels":{"default":["negative"]}}
{"sentences":"// find the right log file","labels":{"default":["positive"]}}
{"sentences":"// calculate the start and stop","labels":{"default":["positive"]}}
{"sentences":"// skip upto start","labels":{"default":["positive"]}}
{"sentences":"@param conf the job to look in","labels":{"default":["negative"]}}
{"sentences":"@return the number of bytes to cap the log files at","labels":{"default":["negative"]}}
{"sentences":"@param setup The setup commands for the execed process.","labels":{"default":["negative"]}}
{"sentences":"@param cmd The command and the arguments that should be run","labels":{"default":["negative"]}}
{"sentences":"@param stdoutFilename The filename that stdout should be saved to","labels":{"default":["negative"]}}
{"sentences":"@param stderrFilename The filename that stderr should be saved to","labels":{"default":["negative"]}}
{"sentences":"@param tailLength The length of the tail to be saved.","labels":{"default":["negative"]}}
{"sentences":"@param useSetsid Should setsid be used in the command or not.","labels":{"default":["negative"]}}
{"sentences":"@return the modified command that should be run","labels":{"default":["negative"]}}
{"sentences":"@param setup The setup commands for the execed process.","labels":{"default":["negative"]}}
{"sentences":"@param cmd The command and the arguments that should be run","labels":{"default":["negative"]}}
{"sentences":"@param stdoutFilename The filename that stdout should be saved to","labels":{"default":["negative"]}}
{"sentences":"@param stderrFilename The filename that stderr should be saved to","labels":{"default":["negative"]}}
{"sentences":"@param tailLength The length of the tail to be saved.","labels":{"default":["negative"]}}
{"sentences":"@return the command line as a String","labels":{"default":["negative"]}}
{"sentences":"Construct the command line for running the task JVM","labels":{"default":["positive"]}}
{"sentences":"Wrap a command in a shell to capture stdout and stderr to files.\n   * Setup commands such as setting memory limit can be passed which \n   * will be executed before exec.\n   * If the tailLength is 0, the entire output will be saved.","labels":{"default":["positive"]}}
{"sentences":"Get the desired maximum length of task's logs.","labels":{"default":["positive"]}}
{"sentences":"// Export the pid of taskJvm to env variable JVM_PID.\n    // Currently pid is not used on Windows","labels":{"default":["positive"]}}
{"sentences":"@param cmd The command and the arguments that should be run","labels":{"default":["negative"]}}
{"sentences":"@param stdoutFilename The filename that stdout should be saved to","labels":{"default":["negative"]}}
{"sentences":"@param stderrFilename The filename that stderr should be saved to","labels":{"default":["negative"]}}
{"sentences":"@param tailLength The length of the tail to be saved.","labels":{"default":["negative"]}}
{"sentences":"@return the command line as a String","labels":{"default":["negative"]}}
{"sentences":"@param cmd The command to be quoted","labels":{"default":["negative"]}}
{"sentences":"@param isExecutable makes shell path if the first \n   * argument is executable","labels":{"default":["negative"]}}
{"sentences":"@return returns The quoted string.","labels":{"default":["negative"]}}
{"sentences":"@return base log directory","labels":{"default":["negative"]}}
{"sentences":"@param jobid","labels":{"default":["negative"]}}
{"sentences":"@return user log directory for the job","labels":{"default":["negative"]}}
{"sentences":"Construct the command line for running the debug script","labels":{"default":["positive"]}}
{"sentences":"// the executable name needs to be expressed as a shell path for the  \n        // shell to find it.","labels":{"default":["negative"]}}
{"sentences":"// the executable name needs to be expressed as a shell path for the  \n        // shell to find it.","labels":{"default":["negative"]}}
{"sentences":"Add quotes to each of the command strings and\n   * return as a single string","labels":{"default":["positive"]}}
{"sentences":"Method to return the location of user log directory.","labels":{"default":["positive"]}}
{"sentences":"Get the user log directory for the job jobid.","labels":{"default":["positive"]}}
{"sentences":" Read a log file from start to end positions. The offsets may be negative,\n     * in which case they are relative to the end of the file. For example,\n     * Reader(taskid, kind, 0, -1) is the entire file and \n     * Reader(taskid, kind, -4197, -1) is the last 4196 bytes.","labels":{"default":["positive"]}}
{"sentences":"// set localFS once","labels":{"default":["positive"]}}
{"sentences":"@link OutputFormat","labels":{"default":["negative"]}}
{"sentences":"@link JobConf","labels":{"default":["negative"]}}
{"sentences":"@link JobConf","labels":{"default":["negative"]}}
{"sentences":"@link CompressionCodec","labels":{"default":["negative"]}}
{"sentences":"@link JobConf","labels":{"default":["negative"]}}
{"sentences":"@link CompressionCodec","labels":{"default":["negative"]}}
{"sentences":"@link CompressionCodec","labels":{"default":["negative"]}}
{"sentences":"@link JobConf","labels":{"default":["negative"]}}
{"sentences":"@link CompressionCodec","labels":{"default":["negative"]}}
{"sentences":"@link CompressionCodec","labels":{"default":["negative"]}}
{"sentences":"@link Path","labels":{"default":["negative"]}}
{"sentences":"@link Path","labels":{"default":["negative"]}}
{"sentences":"@link Path","labels":{"default":["negative"]}}
{"sentences":"@link Path","labels":{"default":["negative"]}}
{"sentences":"@link Path","labels":{"default":["negative"]}}
{"sentences":"@link Path","labels":{"default":["negative"]}}
{"sentences":"@link Path","labels":{"default":["negative"]}}
{"sentences":"@link OutputCommitter","labels":{"default":["negative"]}}
{"sentences":"@link FileOutputCommitter","labels":{"default":["negative"]}}
{"sentences":"@link #getOutputPath(JobConf)","labels":{"default":["negative"]}}
{"sentences":"@link #getWorkOutputPath(JobConf)","labels":{"default":["negative"]}}
{"sentences":"@link #getWorkOutputPath(JobConf)","labels":{"default":["negative"]}}
{"sentences":"@link Path","labels":{"default":["negative"]}}
{"sentences":"@link Path","labels":{"default":["negative"]}}
{"sentences":"@link #getUniqueName","labels":{"default":["negative"]}}
{"sentences":"@return a unique path accross all tasks of the job.","labels":{"default":["negative"]}}
{"sentences":"@param name the name for the file.","labels":{"default":["negative"]}}
{"sentences":"@param conf the configuration for the job.","labels":{"default":["negative"]}}
{"sentences":"@return a unique name accross all tasks of the job.","labels":{"default":["negative"]}}
{"sentences":"@param name the name to make unique.","labels":{"default":["negative"]}}
{"sentences":"@param conf the configuration for the job.","labels":{"default":["negative"]}}
{"sentences":"@param conf job-configuration","labels":{"default":["negative"]}}
{"sentences":"@param name temporary task-output filename","labels":{"default":["negative"]}}
{"sentences":"@return path to the task's temporary output file","labels":{"default":["negative"]}}
{"sentences":"@return the {@link Path} to the task's temporary output directory \n   * for the map-reduce job.","labels":{"default":["negative"]}}
{"sentences":"@return the {@link Path} to the output directory for the map-reduce job.","labels":{"default":["negative"]}}
{"sentences":"@param conf The configuration of the job.","labels":{"default":["negative"]}}
{"sentences":"@param outputDir the {@link Path} of the output directory \n   * for the map-reduce job.","labels":{"default":["negative"]}}
{"sentences":"@param conf The configuration of the job.","labels":{"default":["negative"]}}
{"sentences":"@param outputDir the {@link Path} of the output directory for \n   * the map-reduce job.","labels":{"default":["negative"]}}
{"sentences":"@param conf the {@link JobConf} to look in","labels":{"default":["negative"]}}
{"sentences":"@param defaultValue the {@link CompressionCodec} to return if not set","labels":{"default":["negative"]}}
{"sentences":"@return the {@link CompressionCodec} to be used to compress the \n   *         job outputs","labels":{"default":["negative"]}}
{"sentences":"@param conf the {@link JobConf} to modify","labels":{"default":["negative"]}}
{"sentences":"@param codecClass the {@link CompressionCodec} to be used to\n   *                   compress the job outputs","labels":{"default":["negative"]}}
{"sentences":"@param conf the {@link JobConf} to look in","labels":{"default":["negative"]}}
{"sentences":"@return <code>true</code> if the job output should be compressed,\n   *         <code>false</code> otherwise","labels":{"default":["negative"]}}
{"sentences":"@param conf the {@link JobConf} to modify","labels":{"default":["negative"]}}
{"sentences":"@param compress should the output of the job be compressed?","labels":{"default":["negative"]}}
{"sentences":"/** A base class for {@link OutputFormat}. */","labels":{"default":["positive"]}}
{"sentences":"Set whether the output of the job is compressed.","labels":{"default":["positive"]}}
{"sentences":"Is the job output compressed?","labels":{"default":["positive"]}}
{"sentences":"Set the {@link CompressionCodec} to be used to compress job outputs.","labels":{"default":["positive"]}}
{"sentences":"Get the {@link CompressionCodec} for compressing the job outputs.","labels":{"default":["positive"]}}
{"sentences":"// Ensure that the output directory is set and not already there","labels":{"default":["positive"]}}
{"sentences":"// normalize the output directory","labels":{"default":["positive"]}}
{"sentences":"// get delegation token for the outDir's file system","labels":{"default":["positive"]}}
{"sentences":"// check its existence","labels":{"default":["positive"]}}
{"sentences":"Set the {@link Path} of the output directory for the map-reduce job.","labels":{"default":["positive"]}}
{"sentences":"Set the {@link Path} of the task's temporary output directory \n   * for the map-reduce job.","labels":{"default":["positive"]}}
{"sentences":"Get the {@link Path} to the output directory for the map-reduce job.","labels":{"default":["positive"]}}
{"sentences":"Helper function to create the task's temporary output directory and \n   * return the path to the task's output file.","labels":{"default":["positive"]}}
{"sentences":"Helper function to generate a {@link Path} for a file that is unique for\n   * the task within the job output directory.","labels":{"default":["positive"]}}
{"sentences":" <p>The path can be used to create custom files from within the map and\n   * reduce tasks. The path name will be unique for each task. The path parent\n   * will be the job output directory.</p>ls\n   *\n   * <p>This method uses the {@link #getUniqueName} method to make the file name\n   * unique for the task.</p>","labels":{"default":["positive"]}}
{"sentences":"Helper function to generate a name that is unique for the task.\n   *\n   * <p>The generated name can be used to create custom files from within the\n   * different tasks for the job, the names for different tasks will not collide\n   * with each other.</p>\n   *\n   * <p>The given name is postfixed with the task type, 'm' for maps, 'r' for\n   * reduces and the task partition number. For example, give a name 'test'\n   * running on the first map o the job the generated name will be\n   * 'test-m-00000'.</p>","labels":{"default":["positive"]}}
{"sentences":"// ${mapred.out.dir}/_temporary/_${taskid}/${name}","labels":{"default":["negative"]}}
{"sentences":"// ${mapred.out.dir}","labels":{"default":["negative"]}}
{"sentences":"Get the {@link Path} to the task's temporary output directory \n   *  for the map-reduce job","labels":{"default":["positive"]}}
{"sentences":" * <b id=\"SideEffectFiles\">Tasks' Side-Effect Files</b>\n   * \n   * <p><i>Note:</i> The following is valid only if the {@link OutputCommitter}\n   *  is {@link FileOutputCommitter}. If <code>OutputCommitter</code> is not \n   *  a <code>FileOutputCommitter</code>, the task's temporary output\n   *  directory is same as {@link #getOutputPath(JobConf)} i.e.\n   *  <tt>${mapreduce.output.fileoutputformat.outputdir}$</tt></p>\n   *  \n   * <p>Some applications need to create/write-to side-files, which differ from\n   * the actual job-outputs.\n   * \n   * <p>In such cases there could be issues with 2 instances of the same TIP \n   * (running simultaneously e.g. speculative tasks) trying to open/write-to the\n   * same file (path) on HDFS. Hence the application-writer will have to pick \n   * unique names per task-attempt (e.g. using the attemptid, say \n   * <tt>attempt_200709221812_0001_m_000000_0</tt>), not just per TIP.</p> \n   * \n   * <p>To get around this the Map-Reduce framework helps the application-writer \n   * out by maintaining a special \n   * <tt>${mapreduce.output.fileoutputformat.outputdir}/_temporary/_${taskid}</tt> \n   * sub-directory for each task-attempt on HDFS where the output of the \n   * task-attempt goes. On successful completion of the task-attempt the files \n   * in the <tt>${mapreduce.output.fileoutputformat.outputdir}/_temporary/_${taskid}</tt> (only) \n   * are <i>promoted</i> to <tt>${mapreduce.output.fileoutputformat.outputdir}</tt>. Of course, the \n   * framework discards the sub-directory of unsuccessful task-attempts. This \n   * is completely transparent to the application.</p>\n   * \n   * <p>The application-writer can take advantage of this by creating any \n   * side-files required in <tt>${mapreduce.task.output.dir}</tt> during execution \n   * of his reduce-task i.e. via {@link #getWorkOutputPath(JobConf)}, and the \n   * framework will move them out similarly - thus she doesn't have to pick \n   * unique paths per task-attempt.</p>\n   * \n   * <p><i>Note</i>: the value of <tt>${mapreduce.task.output.dir}</tt> during \n   * execution of a particular task-attempt is actually \n   * <tt>${mapreduce.output.fileoutputformat.outputdir}/_temporary/_{$taskid}</tt>, and this value is \n   * set by the map-reduce framework. So, just create any side-files in the \n   * path  returned by {@link #getWorkOutputPath(JobConf)} from map/reduce \n   * task to take advantage of this feature.</p>\n   * \n   * <p>The entire discussion holds true for maps of jobs with \n   * reducer=NONE (i.e. 0 reduces) since output of the map, in that case, \n   * goes directly to HDFS.</p>","labels":{"default":["negative"]}}
{"sentences":"@see FileOutputFormat#getWorkOutputPath(JobConf)","labels":{"default":["negative"]}}
{"sentences":"<p><i>Note</i>: Task output path is set by the framework.\n   * </p>","labels":{"default":["positive"]}}
{"sentences":"/** A Reduce task. */","labels":{"default":["positive"]}}
{"sentences":"// register a ctor","labels":{"default":["positive"]}}
{"sentences":"// If this is a LocalJobRunner-based job, this will\n  // be a mapping from map task attempts to their output files.\n  // This will be null in other cases.","labels":{"default":["negative"]}}
{"sentences":"// A custom comparator for map output files. Here the ordering is determined\n  // by the file's size and path. In case of files with same size and different\n  // file paths, the first parameter is considered smaller than the second one.\n  // In case of files with same size and path are considered equal.","labels":{"default":["positive"]}}
{"sentences":" // A sorted set for keeping a set of map output files on disk","labels":{"default":["positive"]}}
{"sentences":"Register the set of mapper outputs created by a LocalJobRunner-based\n   * job with this ReduceTask so it knows where to fetch from.\n   *\n   * This should not be called in normal (networked) execution.\n   */","labels":{"default":["positive"]}}
{"sentences":"    // check if map-outputs are to be compressed","labels":{"default":["positive"]}}
{"sentences":"   * Localize the given JobConf to be specific for this task.","labels":{"default":["positive"]}}
{"sentences":"// write the number of maps","labels":{"default":["positive"]}}
{"sentences":"  // Get the input files for the reducer (for local jobs).","labels":{"default":["positive"]}}
{"sentences":"// update progress","labels":{"default":["positive"]}}
{"sentences":"       //close the skip writer once all the ranges are skipped","labels":{"default":["positive"]}}
{"sentences":"    // start thread that will handle communication with parent","labels":{"default":["positive"]}}
{"sentences":"    // check if it is a cleanupJobTask","labels":{"default":["positive"]}}
{"sentences":"    // Initialize the codec","labels":{"default":["positive"]}}
{"sentences":"free up the data structures","labels":{"default":["positive"]}}
{"sentences":"  // sort is complete","labels":{"default":["positive"]}}
{"sentences":" make output collector","labels":{"default":["positive"]}}
{"sentences":"  // indicate that progress update needs to be sent","labels":{"default":["positive"]}}
{"sentences":"  // apply reduce function","labels":{"default":["positive"]}}
{"sentences":" //increment processed counter only if skipping feature is enabled","labels":{"default":["positive"]}}
{"sentences":"// wrap value iterator to report progress.","labels":{"default":["positive"]}}
{"sentences":"    // make a task context so we can get the classes","labels":{"default":["positive"]}}
{"sentences":"    // make a reducer","labels":{"default":["positive"]}}
{"sentences":"// For lhs == rhs","labels":{"default":["positive"]}}
{"sentences":"// lhs > rhs","labels":{"default":["positive"]}}
{"sentences":"// For lhs < rhs","labels":{"default":["positive"]}}
{"sentences":"// verify for 2 dimensional resources i.e memory and cpu\n    // dominant resource types","labels":{"default":["positive"]}}
{"sentences":"@since 7.1","labels":{"default":["negative"]}}
{"sentences":" Internally used by the calendar","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Wind River Systems - initial API and implementation\n *     Ericsson AB\t\t  - Modules view for DSF implementation","labels":{"default":["negative"]}}
{"sentences":"@since 1.0","labels":{"default":["negative"]}}
{"sentences":"/*\n         *  Create the top level node to deal with the root selection.\n         */","labels":{"default":["positive"]}}
{"sentences":"/*\n         *  Create the Group nodes next. They represent the first level shown in the view.\n         */","labels":{"default":["positive"]}}
{"sentences":"/*\n         *  Now set this schema set as the layout set.\n         */","labels":{"default":["positive"]}}
{"sentences":"/*\n     *  Current default for register formatting.\n     */","labels":{"default":["positive"]}}
{"sentences":"/**\n * InputWriter that writes the client's input as raw bytes.\n */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * Intel Corporation - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"/**\n * .SCCS_GET\n * The application shall ensure that this special target is specified without\n * prerequesites.\n * The commands specifeied with this target shall replace the default\n * commands associated with this special target.\n */","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":"@since 7.4","labels":{"default":["negative"]}}
{"sentences":"Multi-row selection model.","labels":{"default":["positive"]}}
{"sentences":"/* Event handling for selection with space key */","labels":{"default":["positive"]}}
{"sentences":"// Trying to replace grid","labels":{"default":["positive"]}}
{"sentences":"// unpin deselected rows","labels":{"default":["positive"]}}
{"sentences":"\t\t//Took out the stack dump - too much space","labels":{"default":["positive"]}}
{"sentences":"\t\t\t// there was a problem opening the log file so log to the console","labels":{"default":["positive"]}}
{"sentences":"// If there were problems writing out the date, ignore and\n\t\t\t// continue since that shouldn't stop us from losing the rest\n\t\t\t// of the information","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * Writes the given string to the log, followed by the line terminator string.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Shuts down the log.\n\t */","labels":{"default":["positive"]}}
{"sentences":"\t\t\t//we've shutdown the log, so not much else we can do!","labels":{"default":["positive"]}}
{"sentences":"@author vhirsl","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *  IBM - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"/**\n * Log writer utility\n * \n * @author vhirsl\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n * Use this singleton to get or register a Broadcast variable.\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n * Use this singleton to get or register an Accumulator.\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n * Counts words in text encoded with UTF8 received from the network every second. This example also\n * shows how to use lazily instantiated singleton instances for Accumulator and Broadcast so that\n * they can be registered on driver failures.","labels":{"default":["positive"]}}
{"sentences":" Usage: JavaRecoverableNetworkWordCount <hostname> <port> <checkpoint-directory> <output-file>\n *   <hostname> and <port> describe the TCP server that Spark Streaming would connect to receive\n *   data. <checkpoint-directory> directory to HDFS-compatible file system which checkpoint data\n *   <output-file> file to which the word counts will be appended\n *\n * <checkpoint-directory> and <output-file> must be absolute paths\n *\n * To run this on your local machine, you need to first run a Netcat server\n *\n *      `$ nc -lk 9999`\n *\n * and run the example as\n *\n *      `$ ./bin/run-example org.apache.spark.examples.streaming.JavaRecoverableNetworkWordCount \\\n *              localhost 9999 ~/checkpoint/ ~/out`","labels":{"default":["negative"]}}
{"sentences":"If the directory ~/checkpoint/ does not exist (e.g. running for the first time), it will create\n * a new StreamingContext (will print \"Creating new context\" to the console). Otherwise, if\n * checkpoint data exists in ~/checkpoint/, then it will create StreamingContext from\n * the checkpoint data.\n *\n * Refer to the online documentation for more details.\n */","labels":{"default":["negative"]}}
{"sentences":"    // Create the context with a 1 second batch size","labels":{"default":["positive"]}}
{"sentences":" // Create a socket stream on target ip:port and count the\n    // words in input stream of \\n delimited text (eg. generated by 'nc')","labels":{"default":["positive"]}}
{"sentences":"  // If you do not see this printed, that means the StreamingContext has been loaded\n    // from the new checkpoint","labels":{"default":["positive"]}}
{"sentences":"/ Get or register the blacklist Broadcast","labels":{"default":["positive"]}}
{"sentences":"        // Get or register the droppedWordsCounter Accumulator","labels":{"default":["positive"]}}
{"sentences":"        // Use blacklist to drop words and use droppedWordsCounter to count them","labels":{"default":["positive"]}}
{"sentences":" // Function to create JavaStreamingContext without any output operations\n    // (used to detect the new context)","labels":{"default":["positive"]}}
{"sentences":" * A Spark SQL UDF that has 5 arguments.","labels":{"default":["positive"]}}
{"sentences":"// **************************************************\n// THIS FILE IS AUTOGENERATED BY CODE IN\n// org.apache.spark.sql.api.java.FunctionRegistration\n// **************************************************","labels":{"default":["negative"]}}
{"sentences":"// numberOfIds should be about 60 after scrolling down the table","labels":{"default":["negative"]}}
{"sentences":"/**\n * This class tests cacheArchive option of streaming\n * The test case creates 2 archive files, ships it with hadoop\n * streaming and compares the output with expected output\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n   * The identify function. Input key/value pair is written directly to output.\n   */","labels":{"default":["positive"]}}
{"sentences":"Here is an example: \"4,3,0,1:6,5,1-3,7-\". It specifies to use fields 4,3,0 and 1 for keys,\n * and use fields 6,5,1,2,3,7 and above for values.","labels":{"default":["negative"]}}
{"sentences":"This class implements a mapper/reducer class that can be used to perform\n * field selections in a manner similar to unix cut. The input data is treated\n * as fields separated by a user specified separator (the default value is\n * \"\\t\"). The user can specify a list of fields that form the map output keys,\n * and a list of fields that form the map output values. If the inputformat is\n * TextInputFormat, the mapper will ignore the key to the map function. and the\n * fields are from the value only. Otherwise, the fields are the union of those\n * from the key and those from the value.","labels":{"default":["positive"]}}
{"sentences":"The field separator is under attribute \"mapreduce.fieldsel.data.field.separator\"","labels":{"default":["negative"]}}
{"sentences":"The map output field list spec is under attribute \n * \"mapreduce.fieldsel.map.output.key.value.fields.spec\".\n * The value is expected to be like \"keyFieldsSpec:valueFieldsSpec\"\n * key/valueFieldsSpec are comma (,) separated field spec: fieldSpec,fieldSpec,fieldSpec ...\n * Each field spec can be a simple number (e.g. 5) specifying a specific field, or a range\n * (like 2-5) to specify a range of fields, or an open range (like 3-) specifying all \n * the fields starting from field 3. The open range field spec applies value fields only.\n * They have no effect on the key fields.","labels":{"default":["negative"]}}
{"sentences":"The reduce output field list spec is under attribute \n * \"mapreduce.fieldsel.reduce.output.key.value.fields.spec\".\n * \n * The reducer extracts output key/value pairs in a similar manner, except that\n * the key is never ignored.","labels":{"default":["negative"]}}
{"sentences":"@link CheckedProviderMethodsModule","labels":{"default":["negative"]}}
{"sentences":"/**\n * Test methods for {@link CheckedProviderMethodsModule}.\n */","labels":{"default":["positive"]}}
{"sentences":"// no rules applied, these should pass","labels":{"default":["negative"]}}
{"sentences":"/** An implementation of the core algorithm of MergeSort. */","labels":{"default":["positive"]}}
{"sentences":"//Reusable IntWritables","labels":{"default":["positive"]}}
{"sentences":"//the comparator that the algo should use","labels":{"default":["positive"]}}
{"sentences":"// Insertion sort on smallest arrays","labels":{"default":["positive"]}}
{"sentences":"// Recursively sort halves of dest into src","labels":{"default":["positive"]}}
{"sentences":"// If list is already sorted, just copy from src to dest.  This is an\n    // optimization that results in faster sorts for nearly ordered lists.","labels":{"default":["negative"]}}
{"sentences":"// Merge sorted halves (now in src) into dest","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * IBM Rational Software - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"/* (non-Javadoc)\n\t * Method declared on ISelectionChangedListener.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/* (non-Javadoc)\n\t * Method declared on IAction.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Executes this actions with the given selection. This default implementation\n\t * does nothing.\n\t */","labels":{"default":["positive"]}}
{"sentences":"@param selection the new selection","labels":{"default":["negative"]}}
{"sentences":"/**\n\t * Notifies this action that the given selection has changed.  This default\n\t * implementation sets the action's enablement state to <code>false</code>.\n\t *\n\t * @param selection the new selection\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Executes this actions with the given text selection. This default implementation\n\t * calls <code>run(ISelection selection)</code>.\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Executes this actions with the given structured selection. This default implementation\n\t * calls <code>run(ISelection selection)</code>.\n\t */","labels":{"default":["positive"]}}
{"sentences":"@param selection the new selection","labels":{"default":["negative"]}}
{"sentences":"\t * @param selection the new selection","labels":{"default":["negative"]}}
{"sentences":"\t * @param selection the selection this action is working on","labels":{"default":["negative"]}}
{"sentences":"\t * @return the site's selection provider","labels":{"default":["negative"]}}
{"sentences":"\t * @return the site's shell","labels":{"default":["negative"]}}
{"sentences":"\t * @return the site's selection","labels":{"default":["negative"]}}
{"sentences":"\t * @return the site owning this action","labels":{"default":["negative"]}}
{"sentences":"\t * @param site the site this action is working on","labels":{"default":["negative"]}}
{"sentences":" * @since 2.0","labels":{"default":["negative"]}}
{"sentences":" * @noextend This class is not intended to be subclassed by clients.","labels":{"default":["negative"]}}
{"sentences":"\t * Notifies this action that the given text selection has changed.  This default\n\t * implementation calls <code>selectionChanged(ISelection selection)</code>.","labels":{"default":["positive"]}}
{"sentences":"\t * Notifies this action that the given structured selection has changed. This default\n\t * implementation calls <code>selectionChanged(ISelection selection)</code>","labels":{"default":["positive"]}}
{"sentences":" * Updates the action's enablement state according to the given selection. This\n\t * default implementation calls one of the <code>selectionChanged</code>\n\t * methods depending on the type of the passed selection.","labels":{"default":["positive"]}}
{"sentences":"\t * Returns the selection provider managed by the site owning this action.","labels":{"default":["positive"]}}
{"sentences":"\t * Returns the shell provided by the site owning this action.","labels":{"default":["positive"]}}
{"sentences":"\t * Returns the selection provided by the site owning this action.","labels":{"default":["positive"]}}
{"sentences":"\t * Returns the site owning this action.","labels":{"default":["positive"]}}
{"sentences":"\t * Creates a new action with no text and no image.\n\t * <p>\n\t * Configure the action later using the set methods.\n\t * </p>","labels":{"default":["positive"]}}
{"sentences":"Action that dispatches the <code>IAction#run()</code> and the\n * <code>ISelectionChangedListener#selectionChanged</code>\n * according to the type of the selection.","labels":{"default":["positive"]}}
{"sentences":"* <ul>\n * \t<li>if selection is of type <code>ITextSelection</code> then\n * \t<code>run(ITextSelection)</code> and <code>selectionChanged(ITextSelection)</code>\n * \tis called.</li>\n * \t<li>if selection is of type <code>IStructuredSelection</code> then\n * \t<code>run(IStructuredSelection)</code> and <code>\n * \tselectionChanged(IStructuredSelection)</code> is called.</li>\n * \t<li>default is to call <code>run(ISelection)</code> and <code>\n * \tselectionChanged(ISelection)</code>.</li>\n * </ul>\n *\n * <p>\n * Note: This class is not intended to be subclassed outside the CDT UI plugin.\n * </p>","labels":{"default":["negative"]}}
{"sentences":"/**\n * Test manually requesting that the DataNode send a block report.\n */","labels":{"default":["positive"]}}
{"sentences":"// Set a really long value for dfs.blockreport.intervalMsec and\n    // dfs.heartbeat.interval, so that incremental block reports and heartbeats\n    // won't be sent during this test unless they're triggered\n    // manually.","labels":{"default":["negative"]}}
{"sentences":"// We should get 1 incremental block report.","labels":{"default":["negative"]}}
{"sentences":"// We should not receive any more incremental or incremental block reports,\n    // since the interval we configured is so long.","labels":{"default":["negative"]}}
{"sentences":"// Create a fake block deletion notification on the DataNode.\n    // This will be sent with the next incremental block report.","labels":{"default":["positive"]}}
{"sentences":"// Manually trigger a block report.","labels":{"default":["positive"]}}
{"sentences":"// triggerBlockReport returns before the block report is\n    // actually sent.  Wait for it to be sent here.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * Intel Corporation - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n * \t   Sergey Prigogin (Google) - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n * QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"/**\n * A JavaScript variable declaration from the\n * <a href=\"https://github.com/estree/estree/blob/master/spec.md#variabledeclaration\">ESTree Specification</a>\n */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     IBM Corporation - initial API and implementation\n *     Anton Leherbauer (Wind River Systems) - Adapted for CDT","labels":{"default":["negative"]}}
{"sentences":"@noextend This class is not intended to be subclassed by clients.","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"\t * @param editor the C editor","labels":{"default":["negative"]}}
{"sentences":"\t * @param groupName the group name to add the action to","labels":{"default":["negative"]}}
{"sentences":"\t * @noreference This constructor is not intended to be referenced by clients.","labels":{"default":["negative"]}}
{"sentences":"\t * @param page the page that owns this action group","labels":{"default":["negative"]}}
{"sentences":"\t * @param part the view part that owns this action group","labels":{"default":["negative"]}}
{"sentences":"\t * @param site the site that will own the action group.","labels":{"default":["negative"]}}
{"sentences":" @param selectionProvider the selection provider used instead of the\n\t *  page selection provider.","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.4","labels":{"default":["negative"]}}
{"sentences":"@link IStructuredSelection","labels":{"default":["negative"]}}
{"sentences":"\t * @noreference This method is not intended to be referenced by clients.","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"\t\t\t// editor provides its own implementation of these actions.","labels":{"default":["positive"]}}
{"sentences":"/*\n\t * Method declared in ActionGroup\n\t */","labels":{"default":["positive"]}}
{"sentences":"/*\n\t * Method declared in ActionGroup\n\t */","labels":{"default":["positive"]}}
{"sentences":"\t * Method declared in ActionGroup","labels":{"default":["positive"]}}
{"sentences":"The state of the editor owning this action group has changed.\n\t * This method does nothing if the group's owner isn't an\n\t * editor.\n\t */","labels":{"default":["positive"]}}
{"sentences":"\t * Note: This method is for internal use only. Clients should not call this method.","labels":{"default":["negative"]}}
{"sentences":"\n\t/**\n\t * Creates a new <code>GenerateActionGroup</code>. The group\n\t * requires that the selection provided by the part's selection provider\n\t * is of type <code>org.eclipse.jface.viewers.IStructuredSelection</code>.\n\t *\n\t * @param part the view part that owns this action group\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Creates a new <code>GenerateActionGroup</code>. The group requires\n\t * that the selection provided by the given selection provider is of type\n\t * {@link IStructuredSelection}.","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Creates a new <code>GenerateActionGroup</code>. The group\n\t * requires that the selection provided by the page's selection provider\n\t * is of type <code>org.eclipse.jface.viewers.IStructuredSelection</code>.\n\t *","labels":{"default":["positive"]}}
{"sentences":"/**\n * Action group that adds the source and generate actions to a part's context\n * menu and installs handlers for the corresponding global menu actions.\n *\n * <p>\n * This class may be instantiated; it is not intended to be subclassed.\n * </p>\n *\n * @noextend This class is not intended to be subclassed by clients.\n * @since 4.0\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Pop-up menu: id of the source sub menu (value <code>org.eclipse.cdt.ui.source.menu</code>).\n\t */","labels":{"default":["positive"]}}
{"sentences":"\n\t/**\n\t * Pop-up menu: id of the organize group of the source sub menu (value\n\t * <code>organizeGroup</code>).\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Pop-up menu: id of the generate group of the source sub menu (value\n\t * <code>generateGroup</code>).\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Pop-up menu: id of the code group of the source sub menu (value\n\t * <code>codeGroup</code>).\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Pop-up menu: id of the externalize group of the source sub menu (value\n\t * <code>externalizeGroup</code>).\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Pop-up menu: id of the comment group of the source sub menu (value\n\t * <code>commentGroup</code>).\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Pop-up menu: id of the edit group of the source sub menu (value\n\t * <code>editGroup</code>).\n\t */","labels":{"default":["positive"]}}
{"sentences":"\t * Note: This constructor is for internal use only. Clients should not call this constructor.","labels":{"default":["positive"]}}
{"sentences":" * Header data for each packet that goes through the read/write pipelines.\n * Includes all of the information about the packet, excluding checksums and\n * actual data.\n *\n * This data includes:\n *  - the offset in bytes into the HDFS block of the data in this packet\n *  - the sequence number of this packet in the pipeline\n *  - whether or not this is the last packet in the pipeline\n *  - the length of the data in this packet\n *  - whether or not this packet should be synced by the DNs.","labels":{"default":["positive"]}}
{"sentences":" * When serialized, this header is written out as a protocol buffer, preceded\n * by a 4-byte integer representing the full packet length, and a 2-byte short\n * representing the header length.","labels":{"default":["negative"]}}
{"sentences":"// Only set syncBlock if it is specified.","labels":{"default":["negative"]}}
{"sentences":"// This is wire-incompatible with Hadoop 2.0.0-alpha due to HDFS-3721\n      // because it changes the length of the packet header, and BlockReceiver\n      // in that version did not support variable-length headers.","labels":{"default":["negative"]}}
{"sentences":"@return the number of bytes necessary to write out this header,\n   * including the length-prefixing of the payload and header","labels":{"default":["negative"]}}
{"sentences":"Write the header into the buffer.\n   * This requires that PKT_HEADER_LEN bytes are available.","labels":{"default":["positive"]}}
{"sentences":"@param lastSeqNo the previous sequence number received - we expect the\n   *                  current sequence number to be larger by 1.","labels":{"default":["negative"]}}
{"sentences":"Perform a sanity check on the packet, returning true if it is sane.","labels":{"default":["positive"]}}
{"sentences":"// We should only have a non-positive data length for the last packet","labels":{"default":["negative"]}}
{"sentences":"// The last packet should not contain data","labels":{"default":["negative"]}}
{"sentences":"// Seqnos should always increase by 1 with each packet received","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n * \t   Sergey Prigogin (Google) - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"Platform's SpellingService uses a spelling engine that is independent\n * of the content type (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=185695).\n * We are providing our own SpellingService to be able to use the C/C++ specific\n * spelling engine even when it is not selected in\n * Preferences/General/Editors/Text Editors/Spelling.","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Ericsson\tAB\t\t- Initial Implementation\n *     Alvaro Sanchez-Leon (Ericsson AB) - [Memory] Support 16 bit addressable size (Bug 426730)\n *     Alvaro Sanchez-Leon (Ericsson AB) - [Memory] Make tests run with different values of addressable size (Bug 460241)\n *     Simon Marchi (Ericsson) - Refactoring, remove usage of AsyncCompletionWaitor","labels":{"default":["negative"]}}
{"sentences":"\t\t// Ensure no MemoryChangedEvent event was received","labels":{"default":["positive"]}}
{"sentences":"\t\t// Get the whole block","labels":{"default":["positive"]}}
{"sentences":"\t\t// Get a block that involves multiple cached blocks","labels":{"default":["positive"]}}
{"sentences":"\t\t// Get a block that will require 2 reads (for the gaps between blocks 1-2 and 2-3)","labels":{"default":["positive"]}}
{"sentences":"\t\t// Get a block that ends beyond an existing block","labels":{"default":["positive"]}}
{"sentences":"\t\t// Get a block that is contiguous to the end of an existing block","labels":{"default":["positive"]}}
{"sentences":"\t\t// Get a third block between the first 2","labels":{"default":["positive"]}}
{"sentences":"\t\t// Get a second block","labels":{"default":["positive"]}}
{"sentences":"\t\t// Get a first block","labels":{"default":["positive"]}}
{"sentences":"\t\t// Clear the cache","labels":{"default":["positive"]}}
{"sentences":"\t\t// Setup call parameters","labels":{"default":["positive"]}}
{"sentences":"// ------------------------------------------------------------------------\n\t// memoryCacheRead\n\t// Get a bunch of blocks to exercise the memory cache\n\t// ------------------------------------------------------------------------","labels":{"default":["positive"]}}
{"sentences":"\t\t// Run to the point where the variable is initialized","labels":{"default":["positive"]}}
{"sentences":"\t\t// Verify that all bytes are correctly set","labels":{"default":["positive"]}}
{"sentences":"\t\t// Wait for all the queries to finish","labels":{"default":["positive"]}}
{"sentences":"// Verify asynchronously that all bytes are set\n\t\t// Send many read queries","labels":{"default":["positive"]}}
{"sentences":"\t\t// Expect BLOCK_SIZE \"memory changed\" events","labels":{"default":["positive"]}}
{"sentences":"\t\t// Wait for all the queries to finish","labels":{"default":["positive"]}}
{"sentences":"\t\t// Write asynchronously","labels":{"default":["positive"]}}
{"sentences":"\t\t// Wait for all the queries to finish","labels":{"default":["positive"]}}
{"sentences":"\t\t// Send many read queries","labels":{"default":["positive"]}}
{"sentences":"\t\t// Verify asynchronously that all bytes are '0'","labels":{"default":["positive"]}}
{"sentences":"\t\t// Setup call parameters","labels":{"default":["positive"]}}
{"sentences":"\t\t// Run to the point where the array is zeroed","labels":{"default":["positive"]}}
{"sentences":"// ------------------------------------------------------------------------\n\t// asynchronousReadWrite\n\t// Test the asynchronous reading/writing of individual bytes (varying offset)\n\t// ------------------------------------------------------------------------","labels":{"default":["positive"]}}
{"sentences":"/*\n * This is the Memory Service test suite.\n * \n * It is meant to be a regression suite to be executed automatically against\n * the DSF nightly builds.\n * \n * It is also meant to be augmented with a proper test case(s) every time a\n * feature is added or in the event (unlikely :-) that a bug is found in the\n * Memory Service.\n * \n * Refer to the JUnit4 documentation for an explanation of the annotations.\n */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Wind River Systems, Inc. - initial implementation","labels":{"default":["negative"]}}
{"sentences":"Enum of address types -as integers.","labels":{"default":["positive"]}}
{"sentences":"Why integers and not enums? Cross platform serialization as JSON","labels":{"default":["negative"]}}
{"sentences":"The host/domain name and port are set as separate strings in the address\n   * list","labels":{"default":["negative"]}}
{"sentences":"e.g.\n   * <pre>\n   *   [\"namenode.example.org\", \"9870\"]\n   * </pre>","labels":{"default":["negative"]}}
{"sentences":"hostname/FQDN and port pair: {@value}.","labels":{"default":["positive"]}}
{"sentences":"Any other address: {@value}.","labels":{"default":["positive"]}}
{"sentences":"<pre>\n   *   [\"http://example.org\"]\n   * </pre>","labels":{"default":["negative"]}}
{"sentences":"<pre>\n   *   [\"/users/example/dataset\"]\n   * </pre>","labels":{"default":["negative"]}}
{"sentences":" A single element would be\n   * <pre>\n   *   [\"zk1\",\"2181\",\"/registry\"]\n   * </pre>\n   *  An endpoint with multiple elements would list them as\n   * <pre>\n   *   [\n   *    [\"zk1\",\"2181\",\"/registry\"]\n   *    [\"zk2\",\"1600\",\"/registry\"]\n   *   ]\n   * </pre>","labels":{"default":["negative"]}}
{"sentences":"These are provide as a 3 element tuple of: hostname, port\n   * and optionally path (depending on the application)","labels":{"default":["negative"]}}
{"sentences":"the third element in each entry , the path, MUST be the same in each entry.\n   * A client reading the addresses of an endpoint is free to pick any\n   * of the set, so they must be the same.","labels":{"default":["negative"]}}
{"sentences":"URI entries: {@value}.","labels":{"default":["positive"]}}
{"sentences":"Path <code>/a/b/c</code> style: {@value}.\n   * The entire path is encoded in a single entry","labels":{"default":["positive"]}}
{"sentences":"@value","labels":{"default":["negative"]}}
{"sentences":"@value","labels":{"default":["negative"]}}
{"sentences":"@value","labels":{"default":["negative"]}}
{"sentences":"@value","labels":{"default":["negative"]}}
{"sentences":"@value","labels":{"default":["negative"]}}
{"sentences":"/** For internal use only. May be removed or replaced in the future. */","labels":{"default":["negative"]}}
{"sentences":"/** For internal use only. May be removed or replaced in the future. */","labels":{"default":["negative"]}}
{"sentences":"/** For internal use only. May be removed or replaced in the future. */","labels":{"default":["negative"]}}
{"sentences":"    /** For internal use only. May be removed or replaced in the future. */","labels":{"default":["negative"]}}
{"sentences":"/**\n     * The current position of the split handle in either percentages or pixels\n     * <p>\n     * For internal use only. May be removed or replaced in the future.\n     */","labels":{"default":["negative"]}}
{"sentences":"    /** For internal use only. May be removed or replaced in the future. */","labels":{"default":["negative"]}}
{"sentences":"    /** For internal use only. May be removed or replaced in the future. */","labels":{"default":["negative"]}}
{"sentences":"// size below will be overridden in update from uidl, initial size\n        // needed to keep IE alive","labels":{"default":["negative"]}}
{"sentences":"// for styling","labels":{"default":["positive"]}}
{"sentences":"    /** For internal use only. May be removed or replaced in the future. */","labels":{"default":["negative"]}}
{"sentences":"    /** For internal use only. May be removed or replaced in the future. */","labels":{"default":["negative"]}}
{"sentences":"@param pos","labels":{"default":["negative"]}}
{"sentences":"@param pos","labels":{"default":["negative"]}}
{"sentences":"@param pos\n     *            Position of the splitter as a CSS string, either pixels or a\n     *            percentage.","labels":{"default":["negative"]}}
{"sentences":"@return minimumPosition if pos is less than minimumPosition;\n     *         maximumPosition if pos is greater than maximumPosition; pos\n     *         otherwise.","labels":{"default":["negative"]}}
{"sentences":"@param pos\n     *            position to be converted","labels":{"default":["negative"]}}
{"sentences":"@return converted position string","labels":{"default":["negative"]}}
{"sentences":"@return the firstContainer","labels":{"default":["negative"]}}
{"sentences":"@return the secondContainer","labels":{"default":["negative"]}}
{"sentences":"@return true if the browser requires a dragging curtain","labels":{"default":["negative"]}}
{"sentences":"Converts given split position string (in pixels or percentage) to a\n     * floating point pixel value.","labels":{"default":["positive"]}}
{"sentences":"Converts given split position string (in pixels or percentage) to a float\n     * percentage value.","labels":{"default":["positive"]}}
{"sentences":"Returns the given position clamped to the range between current minimum\n     * and maximum positions.","labels":{"default":["positive"]}}
{"sentences":"Converts given string to the same units as the split position is.","labels":{"default":["positive"]}}
{"sentences":"// position is in percentage, pos in pixels","labels":{"default":["positive"]}}
{"sentences":"// position is in pixels and pos in percentage","labels":{"default":["positive"]}}
{"sentences":"// Convert percentage values to pixels","labels":{"default":["positive"]}}
{"sentences":"// reposition splitter in case it is out of box","labels":{"default":["positive"]}}
{"sentences":"// Move splitter within bounds, but don't remember the new value","labels":{"default":["positive"]}}
{"sentences":"// Move splitter within bounds, but don't remember the new value","labels":{"default":["positive"]}}
{"sentences":"// reposition splitter in case it is out of box","labels":{"default":["positive"]}}
{"sentences":"// previous layout pass may have changed the position already, needs to\n        // be reset before calculating which positioning should be used","labels":{"default":["negative"]}}
{"sentences":"// Dragging curtain interferes with click events if added in\n            // mousedown so we add it only when needed i.e., if the mouse moves\n            // outside the splitter.","labels":{"default":["negative"]}}
{"sentences":"// Reset the resized flag after a mouseup has occured so the next\n            // mousedown/mouseup can be interpreted as a click.","labels":{"default":["negative"]}}
{"sentences":"     * @since 7.5.1","labels":{"default":["negative"]}}
{"sentences":"     * @since 7.5.1","labels":{"default":["negative"]}}
{"sentences":"     * @since 7.5.1","labels":{"default":["negative"]}}
{"sentences":"     * @since 7.5.1","labels":{"default":["negative"]}}
{"sentences":"@return","labels":{"default":["negative"]}}
{"sentences":"@return","labels":{"default":["negative"]}}
{"sentences":"/**\n * Full outer join.\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n   * Emit everything from the collector.\n   */","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     QNX Software Systems - Initial API and implementation\n *     Markus Schorn (Wind River Systems)","labels":{"default":["negative"]}}
{"sentences":"\t * @return String","labels":{"default":["negative"]}}
{"sentences":" @return the created project resource, or <code>null</code> if the project\n\t *    was not created","labels":{"default":["negative"]}}
{"sentences":"\t * @see IExecutableExtension#setInitializationData","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.jface.wizard.IWizard#performFinish()","labels":{"default":["negative"]}}
{"sentences":"\t * @returns the C project","labels":{"default":["negative"]}}
{"sentences":"\t * @return IStatus","labels":{"default":["negative"]}}
{"sentences":"\t * @param projectFieldContents","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.jface.wizard.IWizard#addPages()","labels":{"default":["negative"]}}
{"sentences":"/**\n * C Project wizard that creates a new project resource in\n * a location of the user's choice.\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Method isValidLocation.\n\t * @param projectFieldContents\n\t * @return IStatus\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Gets the project location path from the main page\n\t * Overwrite this method if you do not have a main page\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Gets the project handle from the main page.\n\t * Overwrite this method if you do not have a main page\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Returns the C project handle corresponding to the project defined in\n\t * in the main page.\n\t *\n\t * @returns the C project\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Stores the configuration element for the wizard.  The config element will be used\n\t * in <code>performFinish</code> to set the result perspective.\n\t *\n\t * @see IExecutableExtension#setInitializationData\n\t */","labels":{"default":["positive"]}}
{"sentences":"/*\n\t * Reimplemented method from superclass\n\t */","labels":{"default":["positive"]}}
{"sentences":"/* (non-Javadoc)\n\t * Method declared on IWorkbenchWizard.\n\t */","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t// ugly, need to make the wizard page run in a non ui thread so that this can go away!!!","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Utility method: call a runnable in a WorkbenchModifyDelegatingOperation\n\t */","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Creates a new project resource with the selected name.\n\t * <p>\n\t * In normal usage, this method is invoked after the user has pressed Finish on\n\t * the wizard; the enablement of the Finish button implies that all controls\n\t * on the pages currently contain valid values.\n\t * </p>\n\t * <p>\n\t * Note that this wizard caches the new project once it has been successfully\n\t * created; subsequent invocations of this method will answer the same\n\t * project resource without attempting to create it again.\n\t * </p>\n\t *","labels":{"default":["positive"]}}
{"sentences":"// get a project handle","labels":{"default":["positive"]}}
{"sentences":"\t\t// get a project descriptor","labels":{"default":["positive"]}}
{"sentences":"/**\n\t * Method getID.\n\t * @return String\n\t */","labels":{"default":["positive"]}}
{"sentences":"    // You can inject the app in views if needed.","labels":{"default":["negative"]}}
{"sentences":"    // The app injection is optional","labels":{"default":["positive"]}}
{"sentences":"\n/**\n * The embedded UI serves two pages at:\n * <br>http://localhost:8888/my and\n * <br>http://localhost:8888/my/anythingYouWant\n */","labels":{"default":["positive"]}}
{"sentences":"  // This is an app API","labels":{"default":["positive"]}}
{"sentences":"@since 6.3","labels":{"default":["negative"]}}
{"sentences":"@author Chris Povirk","labels":{"default":["negative"]}}
{"sentences":"/**\n * This class implements the GWT serialization of {@link SparseImmutableTable}.\n *\n * @author Chris Povirk\n */","labels":{"default":["positive"]}}
{"sentences":"@link SparseImmutableTable","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":".POSIX\n * The application shall ensure that this special target is specified without\n * prerequisites or commands.","labels":{"default":["positive"]}}
{"sentences":"@noextend This class is not intended to be subclassed by clients.","labels":{"default":["negative"]}}
{"sentences":"@noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"@link UnsignedBytes","labels":{"default":["negative"]}}
{"sentences":"This is borrowed and slightly modified from Guava's {@link UnsignedBytes}\n * class to be able to compare arrays that start at non-zero offsets.","labels":{"default":["negative"]}}
{"sentences":"Utility code to do optimized byte-array comparison.","labels":{"default":["positive"]}}
{"sentences":"Lexicographically compare two byte arrays.","labels":{"default":["positive"]}}
{"sentences":"@link Unsafe","labels":{"default":["negative"]}}
{"sentences":"Provides a lexicographical comparer implementation; either a Java\n   * implementation or a faster implementation based on","labels":{"default":["positive"]}}
{"sentences":"@code Unsafe","labels":{"default":["negative"]}}
{"sentences":"Uses reflection to gracefully fall back to the Java implementation if\n   * {@code Unsafe} isn't available.","labels":{"default":["negative"]}}
{"sentences":"Returns the Unsafe-using Comparer, or falls back to the pure-Java\n     * implementation if unable to do so.","labels":{"default":["positive"]}}
{"sentences":"// yes, UnsafeComparer does implement Comparer<byte[]>","labels":{"default":["negative"]}}
{"sentences":"// ensure we really catch *everything*","labels":{"default":["negative"]}}
{"sentences":"// Short circuit equal case","labels":{"default":["positive"]}}
{"sentences":"// Bring WritableComparator code local","labels":{"default":["positive"]}}
{"sentences":"// used via reflection","labels":{"default":["negative"]}}
{"sentences":"The offset to the first element in a byte array.","labels":{"default":["negative"]}}
{"sentences":"// It doesn't matter what we throw;\n                  // it's swallowed in getBestComparer().","labels":{"default":["negative"]}}
{"sentences":"sanity check - this should never fail","labels":{"default":["negative"]}}
{"sentences":"Returns true if x1 is less than x2, when both values are treated as\n       * unsigned","labels":{"default":["positive"]}}
{"sentences":"Lexicographically compare two arrays.","labels":{"default":["positive"]}}
{"sentences":"@param buffer1 left operand","labels":{"default":["negative"]}}
{"sentences":"@param buffer2 right operand","labels":{"default":["negative"]}}
{"sentences":"@param offset1 Where to start comparing in the left buffer","labels":{"default":["negative"]}}
{"sentences":"@param offset2 Where to start comparing in the right buffer","labels":{"default":["negative"]}}
{"sentences":"@param length1 How much to compare from the left buffer","labels":{"default":["negative"]}}
{"sentences":"@param length2 How much to compare from the right buffer","labels":{"default":["negative"]}}
{"sentences":"@return 0 if equal, < 0 if left is less than right, etc.","labels":{"default":["negative"]}}
{"sentences":"// Short circuit equal case","labels":{"default":["positive"]}}
{"sentences":"Compare 8 bytes at a time. Benchmarking shows comparing 8 bytes at a\n         * time is no slower than comparing 4 bytes at a time even on 32-bit.\n         * On the other hand, it is substantially faster on 64-bit.","labels":{"default":["positive"]}}
{"sentences":"Use binary search","labels":{"default":["positive"]}}
{"sentences":"The epilogue to cover the last (minLength % 8) elements.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Wind River Systems - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"Permission parameter, use a Short to represent a FsPermission.","labels":{"default":["positive"]}}
{"sentences":"Parameter name.","labels":{"default":["positive"]}}
{"sentences":"Default parameter value.","labels":{"default":["positive"]}}
{"sentences":"@return the default FsPermission.","labels":{"default":["negative"]}}
{"sentences":"@param value the parameter value.","labels":{"default":["negative"]}}
{"sentences":"@param str a string representation of the parameter value.","labels":{"default":["negative"]}}
{"sentences":"Constructor.","labels":{"default":["positive"]}}
{"sentences":"Constructor","labels":{"default":["positive"]}}
{"sentences":"@return the represented FsPermission.","labels":{"default":["negative"]}}
{"sentences":"// Get our added instance or another instance that was added by\n                // another thread between previous get and putIfAbsent","labels":{"default":["negative"]}}
{"sentences":"    // No cleanup -> will leak, but shouldn't matter for tests","labels":{"default":["positive"]}}
{"sentences":"/**\n * An abstract counter class to provide common implementation of\n * the counter interface in both mapred and mapreduce packages.\n */","labels":{"default":["positive"]}}
{"sentences":"// verify that setting, adding, subtracting capacity works","labels":{"default":["positive"]}}
{"sentences":"setup a context / conf","labels":{"default":["positive"]}}
{"sentences":"create a queue","labels":{"default":["positive"]}}
{"sentences":" Contributors:\n *     Anton Gorenkov - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"// initialize resource bundle","labels":{"default":["positive"]}}
{"sentences":"@link #leave(IPDOMNode)","labels":{"default":["negative"]}}
{"sentences":"@link #visit(IPDOMNode)","labels":{"default":["negative"]}}
{"sentences":"A Qt-specific specialization of the generic PDOMVisitor.  This class provides\n * an empty implementation of {@link #leave(IPDOMNode)}, but required implementations to\n * provide {@link #visit(IPDOMNode)}.  The class also provides a few commonly required\n * implementations.","labels":{"default":["positive"]}}
{"sentences":"Collects all nodes that match the given type.  This could be used, for example, to get\n\t * all QtPDOMQObject's from the index.","labels":{"default":["positive"]}}
{"sentences":"A simple interface that is used to select node's from the index based on specific\n\t * criteria.","labels":{"default":["positive"]}}
{"sentences":"A filter that selects nodes based on their name.","labels":{"default":["positive"]}}
{"sentences":"A utility class that searches the index for all nodes that match the given filter.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     IBM Corporation - initial API and implementation\n *     Sergey Prigogin, Google\n *     Anton Leherbauer (Wind River Systems)","labels":{"default":["negative"]}}
{"sentences":"/*\n\t * Convenience method to create a CheckboxPreference. The widget is registered as \n\t * a potential focus holder, and the default updater is added.\n\t */","labels":{"default":["positive"]}}
{"sentences":"Convenience method to create a ComboPreference. The widget is registered as \n\t * a potential focus holder, and the default updater is added.","labels":{"default":["positive"]}}
{"sentences":"Convenience method to create a NumberPreference. The widget is registered as \n\t * a potential focus holder, and the default updater is added.","labels":{"default":["positive"]}}
{"sentences":" Convenience method to create a group","labels":{"default":["positive"]}}
{"sentences":"Convenience method to create a label","labels":{"default":["positive"]}}
{"sentences":"Convenience method to create a label.","labels":{"default":["positive"]}}
{"sentences":"Convenience method to create a GridData.","labels":{"default":["positive"]}}
{"sentences":"Create a GridLayout with the default margin and spacing settings, as\n\t * well as the specified number of columns.","labels":{"default":["positive"]}}
{"sentences":"@param status Status describing the current page error state","labels":{"default":["negative"]}}
{"sentences":"Set the status field on the dialog. This can be used by tab pages to report \n     * inconsistent input. The OK button is disabled if the kind is IStatus.ERROR.","labels":{"default":["positive"]}}
{"sentences":"Update the preview.","labels":{"default":["positive"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"@param parent Parent composite","labels":{"default":["negative"]}}
{"sentences":"@return Created preview","labels":{"default":["negative"]}}
{"sentences":"@param composite Composite to create in","labels":{"default":["negative"]}}
{"sentences":"@param numColumns Number of columns to use","labels":{"default":["negative"]}}
{"sentences":"@return Created composite","labels":{"default":["negative"]}}
{"sentences":"@param composite Composite to create in","labels":{"default":["negative"]}}
{"sentences":"@param numColumns Number of columns to use","labels":{"default":["negative"]}}
{"sentences":"@param parent The parent composite","labels":{"default":["negative"]}}
{"sentences":"@return Created content control","labels":{"default":["negative"]}}
{"sentences":"@param composite The composite on which the SWT widgets are added.\n\t\t * @param numColumns The number of columns in the composite's GridLayout.\n\t\t * @param preferences The map to store the values.\n\t\t * @param key The key to store the values.\n\t\t * @param minValue The minimum value which is valid input.\n\t\t * @param maxValue The maximum value which is valid input.\n\t\t * @param text The label text for this Preference.","labels":{"default":["negative"]}}
{"sentences":"@param composite The composite on which the SWT widgets are added.\n\t\t * @param numColumns The number of columns in the composite's GridLayout.\n\t\t * @param preferences The map to store the values.\n\t\t * @param key The key to store the values.\n\t\t * @param values An array of n elements indicating the values to store for each selection.\n\t\t * @param text The label text for this Preference.\n\t\t * @param items An array of n elements indicating the text to be written in the combo box.","labels":{"default":["negative"]}}
{"sentences":" @param composite The composite on which the SWT widgets are added.\n\t\t * @param numColumns The number of columns in the composite's GridLayout.\n\t\t * @param preferences The map to store the values.\n\t\t * @param key The key to store the values.\n\t\t * @param values An array of two elements indicating the values to store on unchecked/checked.\n\t\t * @param text The label text for this Preference.\n\t\t * @param style SWT style flag for the button","labels":{"default":["negative"]}}
{"sentences":"@return The main control","labels":{"default":["negative"]}}
{"sentences":"@return Gets the currently used key which is used to store the value.","labels":{"default":["negative"]}}
{"sentences":" @param key New value","labels":{"default":["negative"]}}
{"sentences":"@param enabled new value","labels":{"default":["negative"]}}
{"sentences":"@return Gets the enabled state of all SWT widgets of this Preference.","labels":{"default":["negative"]}}
{"sentences":" @return Gets the map of this Preference.","labels":{"default":["negative"]}}
{"sentences":"@param preferences The map where the value is written.\n\t     * @param key The key for which a value is managed.","labels":{"default":["negative"]}}
{"sentences":"This is the default listener for any of the Preference\n\t * classes. It is added by the respective factory methods and\n\t * updates the page's preview on each change.","labels":{"default":["positive"]}}
{"sentences":"The base class of all Preference classes. A preference class provides a wrapper\n\t * around one or more SWT widgets and handles the input of values for some key.\n\t * On each change, the new value is written to the map and the listeners are notified.","labels":{"default":["positive"]}}
{"sentences":"Create a new Preference.","labels":{"default":["positive"]}}
{"sentences":"Set the enabled state of all SWT widgets of this preference.","labels":{"default":["positive"]}}
{"sentences":"Set the key which is used to store the value.","labels":{"default":["positive"]}}
{"sentences":"Returns the main control of a preference, which is mainly used to \n\t     * manage the focus. This may be <code>null</code> if the preference doesn't\n\t     * have a control which is able to have the focus.","labels":{"default":["positive"]}}
{"sentences":"To be implemented in subclasses. Update the SWT widgets when the state \n\t     * of this object has changed (enabled, key, ...).","labels":{"default":["positive"]}}
{"sentences":"Wrapper around a checkbox and a label.","labels":{"default":["positive"]}}
{"sentences":"Create a new CheckboxPreference.","labels":{"default":["positive"]}}
{"sentences":"Wrapper around a Combo box.","labels":{"default":["positive"]}}
{"sentences":"Create a new ComboPreference.","labels":{"default":["positive"]}}
{"sentences":"Wrapper around a textfied which requests an integer input of a given range.","labels":{"default":["positive"]}}
{"sentences":"Create a new NumberPreference.","labels":{"default":["positive"]}}
{"sentences":"Layout used for the settings part. Makes sure to show scrollbars\n\t * if necessary. The settings part needs to be layouted on resize.","labels":{"default":["positive"]}}
{"sentences":" This class provides the default way to preserve and re-establish the focus\n\t * over multiple modify sessions.","labels":{"default":["positive"]}}
{"sentences":"Each ModifyDialogTabPage has its own instance,\n\t * and it should add all relevant controls upon creation, always in the same sequence.\n\t * This established a mapping of controls to indexes, which allows to restore the focus\n\t * in a later session. \n\t * The index is saved in the dialog settings, and there is only one common preference for \n\t * all tab pages. It is always the currently active tab page which stores its focus\n\t * index.","labels":{"default":["negative"]}}
{"sentences":"// make sure the value is within the range","labels":{"default":["negative"]}}
{"sentences":"The default focus manager. This widget knows all widgets which can have the focus\n\t * and listens for focusGained events, on which it stores the index of the current\n\t * focus holder. When the dialog is restarted, <code>restoreFocus()</code> sets the \n\t * focus to the last control which had it.","labels":{"default":["positive"]}}
{"sentences":"The standard Preference object are managed by this focus manager if they are created\n\t * using the respective factory methods. Other SWT widgets can be added in subclasses \n\t * when they are created.","labels":{"default":["negative"]}}
{"sentences":"A pixel converter for layout calculations","labels":{"default":["positive"]}}
{"sentences":"The map where the current settings are stored.","labels":{"default":["positive"]}}
{"sentences":"The modify dialog where we can display status messages.","labels":{"default":["positive"]}}
{"sentences":"Create a new <code>ModifyDialogTabPage</code>","labels":{"default":["positive"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"Create the contents of this tab page. Subclasses cannot override this, \n\t * instead they must implement <code>doCreatePreferences</code>. <code>doCreatePreview</code> may also\n\t * be overridden as necessary.","labels":{"default":["positive"]}}
{"sentences":"This method is called after all controls have been allocated, including the preview. \n\t * It can be used to set the preview text and to create listeners.","labels":{"default":["positive"]}}
{"sentences":"Create the left side of the modify dialog. This is meant to be implemented by subclasses.","labels":{"default":["positive"]}}
{"sentences":"Create the right side of the modify dialog. By default, the preview is displayed there.\n\t * Subclasses can override this method in order to customize the right-hand side of the \n\t * dialog.","labels":{"default":["positive"]}}
{"sentences":"To be implemented by subclasses. This method should return an instance of CPreview.\n\t * Currently, the choice is between CompilationUnitPreview which contains a valid compilation\n\t * unit, or a SnippetPreview which formats several independent code snippets and displays them \n\t * in the same window.","labels":{"default":["positive"]}}
{"sentences":"Create a nice javadoc comment for some string.","labels":{"default":["positive"]}}
{"sentences":"@author Kevin Bourrillion","labels":{"default":["negative"]}}
{"sentences":"@since 2.0","labels":{"default":["negative"]}}
{"sentences":"See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/NewCollectionTypesExplained#bimap\">","labels":{"default":["negative"]}}
{"sentences":"@code BiMap","labels":{"default":["negative"]}}
{"sentences":"A bimap (or \"bidirectional map\") is a map that preserves the uniqueness of\n * its values as well as that of its keys. This constraint enables bimaps to\n * support an \"inverse view\", which is another bimap containing the same entries\n * as this bimap but with reversed keys and values.","labels":{"default":["positive"]}}
{"sentences":"@code put","labels":{"default":["negative"]}}
{"sentences":"@link #put","labels":{"default":["negative"]}}
{"sentences":"@code value","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code null","labels":{"default":["negative"]}}
{"sentences":"@code map","labels":{"default":["negative"]}}
{"sentences":"@code put","labels":{"default":["negative"]}}
{"sentences":"@link java.util.Collection","labels":{"default":["negative"]}}
{"sentences":"@link Set","labels":{"default":["negative"]}}
{"sentences":"@link Map","labels":{"default":["negative"]}}
{"sentences":"@return the inverse view of this bimap","labels":{"default":["negative"]}}
{"sentences":"@param key the key with which the specified value is to be associated\n   * @param value the value to be associated with the specified key\n   * @return the value which was previously associated with the key, which may","labels":{"default":["negative"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"@link #forcePut","labels":{"default":["negative"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"<p>Because a bimap has unique values, this method returns a {@link Set},\n   * instead of the {@link java.util.Collection} specified in the {@link Map}\n   * interface.","labels":{"default":["negative"]}}
{"sentences":"<p><b>Warning:</b> the results of calling this method may vary depending on\n   * the iteration order of {@code map}.","labels":{"default":["negative"]}}
{"sentences":"An alternate form of {@code put} that silently removes any existing entry\n   * with the value {@code value} before proceeding with the {@link #put}\n   * operation. If the bimap previously contained the provided key-value\n   * mapping, this method has no effect.","labels":{"default":["positive"]}}
{"sentences":"<p>Note that a successful call to this method could cause the size of the\n   * bimap to increase by one, stay the same, or even decrease by one.","labels":{"default":["negative"]}}
{"sentences":" <p><b>Warning:</b> If an existing entry with this value is removed, the key\n   * for that entry is discarded and not returned.","labels":{"default":["negative"]}}
{"sentences":"Returns the inverse view of this bimap, which maps each of this bimap's\n   * values to its associated key. The two bimaps are backed by the same data;\n   * any changes to one will appear in the other.","labels":{"default":["positive"]}}
{"sentences":"<p><b>Note:</b>There is no guaranteed correspondence between the iteration\n   * order of a bimap and that of its inverse.","labels":{"default":["negative"]}}
{"sentences":"@code\n * guice-multibindings.jar","labels":{"default":["negative"]}}
{"sentences":"Extension for binding multiple instances in a collection; this extension requires","labels":{"default":["positive"]}}
{"sentences":"A base class that implements interface Node","labels":{"default":["positive"]}}
{"sentences":"@param path \n   *   a concatenation of this node's location, the path seperator, and its name","labels":{"default":["negative"]}}
{"sentences":"@param name this node's name (can be null, must not contain {@link #PATH_SEPARATOR})\n   * @param location this node's location","labels":{"default":["negative"]}}
{"sentences":"@param name this node's name (can be null, must not contain {@link #PATH_SEPARATOR})\n   * @param location this node's location \n   * @param parent this node's parent node\n   * @param level this node's level in the tree","labels":{"default":["negative"]}}
{"sentences":"@param name the (nullable) name -which cannot contain the {@link #PATH_SEPARATOR}\n   * @param location the location","labels":{"default":["negative"]}}
{"sentences":"@return this node's name","labels":{"default":["negative"]}}
{"sentences":"@return this node's network location","labels":{"default":["negative"]}}
{"sentences":"@param location the location","labels":{"default":["negative"]}}
{"sentences":" @param node a non-null node\n   * @return the path of a node","labels":{"default":["negative"]}}
{"sentences":"@return this node's path as its string representation","labels":{"default":["negative"]}}
{"sentences":"@param path path to normalize.\n   * @return the normalised path","labels":{"default":["negative"]}}
{"sentences":"@return this node's parent","labels":{"default":["negative"]}}
{"sentences":"@param parent the parent","labels":{"default":["negative"]}}
{"sentences":"@return this node's level in the tree.","labels":{"default":["negative"]}}
{"sentences":"@param level the level","labels":{"default":["negative"]}}
{"sentences":" Set this node's level in the tree","labels":{"default":["positive"]}}
{"sentences":"E.g. the root of a tree returns 0 and its children return 1","labels":{"default":["negative"]}}
{"sentences":" Set this node's parent","labels":{"default":["positive"]}}
{"sentences":"Normalize a path by stripping off any trailing","labels":{"default":["positive"]}}
{"sentences":"@link #PATH_SEPARATOR","labels":{"default":["negative"]}}
{"sentences":"@link #ROOT","labels":{"default":["negative"]}}
{"sentences":"Get the path of a node","labels":{"default":["positive"]}}
{"sentences":"Set this node's network location","labels":{"default":["positive"]}}
{"sentences":"set this node's name and location","labels":{"default":["positive"]}}
{"sentences":"Construct a node from its name and its location","labels":{"default":["positive"]}}
{"sentences":"Construct a node from its name and its location","labels":{"default":["positive"]}}
{"sentences":"Construct a node from its path","labels":{"default":["positive"]}}
{"sentences":" Default constructor","labels":{"default":["positive"]}}
{"sentences":"//host:port#","labels":{"default":["positive"]}}
{"sentences":"//string representation of this node's location","labels":{"default":["positive"]}}
{"sentences":"//which level of the tree the node resides","labels":{"default":["positive"]}}
{"sentences":"//its parent","labels":{"default":["positive"]}}
{"sentences":" /** Path separator {@value} */","labels":{"default":["positive"]}}
{"sentences":"/** Path separator as a string {@value} */","labels":{"default":["positive"]}}
{"sentences":"/** string representation of root {@value} */","labels":{"default":["positive"]}}
{"sentences":"@value","labels":{"default":["negative"]}}
{"sentences":"@value","labels":{"default":["negative"]}}
{"sentences":"@value","labels":{"default":["negative"]}}
{"sentences":"@link #PATH_SEPARATOR","labels":{"default":["negative"]}}
{"sentences":"@link Float","labels":{"default":["negative"]}}
{"sentences":"@link #setMinValueIncluded(boolean)","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd.","labels":{"default":["negative"]}}
{"sentences":"@since 7.4","labels":{"default":["negative"]}}
{"sentences":"@link #setMaxValueIncluded(boolean)","labels":{"default":["negative"]}}
{"sentences":"Validator for validating that a {@link Float} is inside a given range.","labels":{"default":["positive"]}}
{"sentences":"Creates a validator for checking that an Float is within a given range.","labels":{"default":["positive"]}}
{"sentences":"By default the range is inclusive i.e. both minValue and maxValue are\n     * valid values. Use {@link #setMinValueIncluded(boolean)} or\n     * {@link #setMaxValueIncluded(boolean)} to change it.","labels":{"default":["negative"]}}
{"sentences":"@param errorMessage\n     *            the message to display in case the value does not validate.","labels":{"default":["negative"]}}
{"sentences":"@param minValue\n     *            The minimum value to accept or null for no limit","labels":{"default":["negative"]}}
{"sentences":"@param maxValue\n     *            The maximum value to accept or null for no limit","labels":{"default":["negative"]}}
{"sentences":"Adding description for initial padding\n                                    // measurements","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *    Markus Schorn - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"// the index manager has reported a change to an index","labels":{"default":["positive"]}}
{"sentences":"ICProject cproject= e.getAffectedProject();\n\t\tif (cproject == null) {\n\t\t\treturn;\n\t\t}","labels":{"default":["positive"]}}
{"sentences":"// request from a label provider","labels":{"default":["positive"]}}
{"sentences":"// in case the display is no longer valid","labels":{"default":["positive"]}}
{"sentences":"Benchmarks","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":"@noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"@return boolean","labels":{"default":["negative"]}}
{"sentences":"@return boolean","labels":{"default":["negative"]}}
{"sentences":"@return boolean","labels":{"default":["negative"]}}
{"sentences":"@deprecated use isUnion(), isClass(), isStruct()","labels":{"default":["negative"]}}
{"sentences":"Return \"class\", \"struct\", \"union\"","labels":{"default":["positive"]}}
{"sentences":"Checks if the structure is a struct","labels":{"default":["positive"]}}
{"sentences":"Checks if the structure is a class","labels":{"default":["positive"]}}
{"sentences":"Checks if the structure is a Union","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Markus Schorn - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"Interface that allows to implement a class-scope.","labels":{"default":["positive"]}}
{"sentences":"Visits the children of the class type without using the cache. This method is\n\t * used to populate the cache.","labels":{"default":["positive"]}}
{"sentences":"Returns the scope name, for use in","labels":{"default":["positive"]}}
{"sentences":"Sets the visibility specifier of a given member.","labels":{"default":["positive"]}}
{"sentences":"@link IScope#getScopeName()","labels":{"default":["negative"]}}
{"sentences":"@param member The binding specifying the member.","labels":{"default":["negative"]}}
{"sentences":"@param visibility The visibility of the <code>member</code>.","labels":{"default":["negative"]}}
{"sentences":"An API for representing graph (node and edge) data. It is analogous to the Java Collections\n * Framework APIs for lists, maps, sets, etc.","labels":{"default":["positive"]}}
{"sentences":"This package is a part of the open-source <a href=\"https://github.com/google/guava\">Guava</a>\n * library.","labels":{"default":["negative"]}}
{"sentences":" Contributors:\n *     Andrew Niefer (IBM Corporation) - initial API and implementation\n *     Markus Schorn (Wind River Systems)","labels":{"default":["negative"]}}
{"sentences":"@noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":" @noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"Interface used to qualify types.","labels":{"default":["positive"]}}
{"sentences":"Returns whether this is a const type","labels":{"default":["positive"]}}
{"sentences":"Returns whether this is a volatile type","labels":{"default":["positive"]}}
{"sentences":"Returns the type that this is qualifying","labels":{"default":["positive"]}}
{"sentences":"The protocol between clients and the <code>SharedCacheManager</code> to claim\n * and release resources in the shared cache.","labels":{"default":["positive"]}}
{"sentences":"@param request request to release a resource in the shared cache\n   * @return (empty) response on releasing the resource","labels":{"default":["negative"]}}
{"sentences":"@param request request to claim a resource in the shared cache\n   * @return response indicating if the resource is already in the cache","labels":{"default":["negative"]}}
{"sentences":"The interface used by clients to release a resource with the\n   * <code>SharedCacheManager.","labels":{"default":["positive"]}}
{"sentences":"The interface used by clients to claim a resource with the\n   * <code>SharedCacheManager.","labels":{"default":["positive"]}}
{"sentences":" The client uses a checksum to identify the\n   * resource and an {@link ApplicationId} to identify which application will be\n   * using the resource.\n   * </p>\n   *\n   * <p>\n   * The <code>SharedCacheManager</code> responds with whether or not the\n   * resource exists in the cache. If the resource exists, a <code>Path</code>\n   * to the resource in the shared cache is returned. If the resource does not\n   * exist, the response is empty.","labels":{"default":["negative"]}}
{"sentences":" This method is called once an application\n   * is no longer using a claimed resource in the shared cache. The client uses\n   * a checksum to identify the resource and an {@link ApplicationId} to\n   * identify which application is releasing the resource.\n   * </p>","labels":{"default":["negative"]}}
{"sentences":" Note: This method is an optimization and the client is not required to call\n   * it for correctness.","labels":{"default":["negative"]}}
{"sentences":"Currently the <code>SharedCacheManager</code> sends an empty response.","labels":{"default":["negative"]}}
{"sentences":"@author Charles Fry","labels":{"default":["negative"]}}
{"sentences":"@link ForwardingLoadingCache","labels":{"default":["negative"]}}
{"sentences":"Make sure that all methods are forwarded.","labels":{"default":["positive"]}}
{"sentences":"createMock","labels":{"default":["positive"]}}
{"sentences":"Class parameters must be raw, so we can't create a proxy with generic\n     * type arguments. The created proxy only records calls and returns null, so\n     * the type is irrelevant at runtime.","labels":{"default":["negative"]}}
{"sentences":"Unit test for","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Markus Schorn - initial API and implementation\n *     Andrew Ferguson (Symbian)\n *     Bryan Wilkinson (QNX)","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"Can be subclassed and used for queries in the index.","labels":{"default":["negative"]}}
{"sentences":"@since 5.1","labels":{"default":["negative"]}}
{"sentences":"@since 5.1","labels":{"default":["negative"]}}
{"sentences":"Get an IndexFilter that filters out bindings without declarations and those from linkages\n\t * other than that specified.","labels":{"default":["positive"]}}
{"sentences":"Returns whether or not to include objects of the given linkage in the query.","labels":{"default":["positive"]}}
{"sentences":"Determines whether or not a binding is valid.","labels":{"default":["positive"]}}
{"sentences":"@see IIndex#findBindings(java.util.regex.Pattern, boolean, IndexFilter, org.eclipse.core.runtime.IProgressMonitor)","labels":{"default":["negative"]}}
{"sentences":"Get an IndexFilter that filters out bindings without declarations and those\n\t * from linkages other than that specified.","labels":{"default":["positive"]}}
{"sentences":"Get an IndexFilter that filters out bindings from linkages other than that specified.","labels":{"default":["positive"]}}
{"sentences":"@param linkageID the id of the linkage whose bindings should be retained\n\t * @return an IndexFilter instance","labels":{"default":["negative"]}}
{"sentences":"\t * @param linkage a linkage to be tested","labels":{"default":["negative"]}}
{"sentences":"\t * @return whether to include objects of the given linkage in the query.","labels":{"default":["negative"]}}
{"sentences":"@param linkageID the id of the linkage whose bindings should be retained, or -1\n\t *     to accept all linkages.","labels":{"default":["negative"]}}
{"sentences":"\t * @return an IndexFilter instance","labels":{"default":["negative"]}}
{"sentences":" @param linkageID the id of the linkage whose bindings should be retained, or -1\n\t *     to accept all linkages.","labels":{"default":["negative"]}}
{"sentences":"\t * @return an IndexFilter instance","labels":{"default":["negative"]}}
{"sentences":"\t * @param binding the binding being checked for validity","labels":{"default":["negative"]}}
{"sentences":"\t * @return whether or not the binding is valid","labels":{"default":["negative"]}}
{"sentences":"Indicates whether an endpoint of some range is contained in the range itself (\"closed\") or not\n * (\"open\"). If a range is unbounded on a side, it is neither open nor closed on that side; the\n * bound simply does not exist.","labels":{"default":["positive"]}}
{"sentences":"The endpoint value <i>is not</i> considered part of the set (\"exclusive\").","labels":{"default":["positive"]}}
{"sentences":"The endpoint value <i>is</i> considered part of the set (\"inclusive\").","labels":{"default":["positive"]}}
{"sentences":"Returns the bound type corresponding to a boolean value for inclusivity.","labels":{"default":["positive"]}}
{"sentences":"@since 10.0","labels":{"default":["negative"]}}
{"sentences":"@link org.apache.spark.sql.DataFrame","labels":{"default":["negative"]}}
{"sentences":"@link org.apache.spark.ml.attribute.Attribute","labels":{"default":["negative"]}}
{"sentences":"@link org.apache.spark.ml.attribute.AttributeGroup","labels":{"default":["negative"]}}
{"sentences":"<h2>ML attributes</h2>\n *\n * The ML pipeline API uses {@link org.apache.spark.sql.DataFrame}s as ML datasets.\n * Each dataset consists of typed columns, e.g., string, double, vector, etc.","labels":{"default":["positive"]}}
{"sentences":" <h3>ML columns</h3>\n *\n * A column with ML attributes attached is called an ML column.\n * The data in ML columns are stored as double values, i.e., an ML column is either a scalar column\n * of double values or a vector column.\n * Columns of other types must be encoded into ML columns using transformers.\n * We use {@link org.apache.spark.ml.attribute.Attribute} to describe a scalar ML column, and\n * {@link org.apache.spark.ml.attribute.AttributeGroup} to describe a vector ML column.\n * ML attributes are stored in the metadata field of the column schema.","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n * Intel Corporation - Initial API and implementation\n * IBM Corporation","labels":{"default":["negative"]}}
{"sentences":"This dependency calculator uses the GCC -MMD -MF -MP -MT options in order to\n * generate .d files as a side effect of compilation.","labels":{"default":["positive"]}}
{"sentences":"See bugzilla 108715 for the discussion of dependency management that led to\n * the creation of this dependency calculator.  Note also that this technique\n * exhibits the failure modes discussed in comment #5.","labels":{"default":["negative"]}}
{"sentences":"This dependency calculator uses the class DefaultGCCDependencyCalculator2Commands\n * which implements the per-source command information","labels":{"default":["negative"]}}
{"sentences":"@since 3.1","labels":{"default":["negative"]}}
{"sentences":"@noextend This class is not intended to be subclassed by clients.\n * @noinstantiate This class is not intended to be instantiated by clients.","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.cdt.managedbuilder.makegen.IManagedDependencyGeneratorType#getCalculatorType()","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.cdt.managedbuilder.makegen.IManagedDependencyGenerator2#getDependencyFileExtension(org.eclipse.cdt.managedbuilder.core.IConfiguration, org.eclipse.cdt.managedbuilder.core.ITool)","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.cdt.managedbuilder.makegen.IManagedDependencyGenerator2#getDependencySourceInfo(org.eclipse.core.runtime.IPath, org.eclipse.cdt.managedbuilder.core.IBuildObject, org.eclipse.cdt.managedbuilder.core.ITool, org.eclipse.core.runtime.IPath)","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.cdt.managedbuilder.makegen.IManagedDependencyGenerator2#getDependencySourceInfo(org.eclipse.core.runtime.IPath, org.eclipse.cdt.managedbuilder.core.IBuildObject, org.eclipse.cdt.managedbuilder.core.ITool, org.eclipse.core.runtime.IPath)","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.cdt.managedbuilder.makegen.IManagedDependencyGenerator2#postProcessDependencyFile(org.eclipse.core.runtime.IPath, org.eclipse.cdt.managedbuilder.core.IConfiguration, org.eclipse.cdt.managedbuilder.core.ITool, org.eclipse.core.runtime.IPath)","labels":{"default":["negative"]}}
{"sentences":"// Source: SchedulerApp","labels":{"default":["positive"]}}
{"sentences":"// Also from Node on NodeRemoval","labels":{"default":["positive"]}}
{"sentences":"// when a container acquired by AM after\n  // it increased/decreased","labels":{"default":["negative"]}}
{"sentences":"// Source: ApplicationMasterService->Scheduler","labels":{"default":["positive"]}}
{"sentences":"// Source: ContainerAllocationExpirer","labels":{"default":["positive"]}}
{"sentences":"// Source: Scheduler\n  // Resource change approved by scheduler","labels":{"default":["positive"]}}
{"sentences":"  // NM reported resource change is done","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     IBM Corporation - initial API and implementation\n *     QNX Software System\n *     Anton Leherbauer (Wind River Systems)","labels":{"default":["negative"]}}
{"sentences":"\t * @see ITokenScanner#getTokenOffset()","labels":{"default":["negative"]}}
{"sentences":"\t * @see ITokenScanner#getTokenLength()","labels":{"default":["negative"]}}
{"sentences":"\t * @see ITokenScanner#setRange(IDocument, int, int)","labels":{"default":["negative"]}}
{"sentences":"// restart at beginning of partition","labels":{"default":["positive"]}}
{"sentences":"\t * @see IPartitionTokenScanner#setPartialRange(IDocument, int, int, String, int)","labels":{"default":["negative"]}}
{"sentences":"// ignore fLast","labels":{"default":["positive"]}}
{"sentences":"// ignore fLast","labels":{"default":["positive"]}}
{"sentences":"// supported by gnu preprocessor","labels":{"default":["positive"]}}
{"sentences":"// states","labels":{"default":["positive"]}}
{"sentences":"// ignore fLast","labels":{"default":["positive"]}}
{"sentences":"// ignore fLast","labels":{"default":["positive"]}}
{"sentences":"// if last char was a backslash then we have an escaped line","labels":{"default":["positive"]}}
{"sentences":"// fLast == CARRIAGE_RETURN","labels":{"default":["positive"]}}
{"sentences":"characters","labels":{"default":["positive"]}}
{"sentences":" @see org.eclipse.jface.text.rules.ITokenScanner#nextToken()","labels":{"default":["negative"]}}
{"sentences":"@param detectPreprocessor","labels":{"default":["negative"]}}
{"sentences":"@param chars","labels":{"default":["negative"]}}
{"sentences":"@param chars","labels":{"default":["negative"]}}
{"sentences":"@param chars","labels":{"default":["negative"]}}
{"sentences":"\t * Configure whether preprocessor directives should be detected.","labels":{"default":["positive"]}}
{"sentences":"Configure the set of default line end comment characters.\n\t * <p>\n\t * These characters are considered line comment introducers at the end of a\n\t * instruction line.\n\t * </p>","labels":{"default":["positive"]}}
{"sentences":"Configure the set of default line start comment characters.\n\t * <p>\n\t * These characters are considered line comment introducers only as first\n\t * non-whitespace character on the line.\n\t * </p>","labels":{"default":["positive"]}}
{"sentences":"Configure the set of default line comment characters.\n\t * <p>\n\t * These characters are considered line comment introducers at any position\n\t * in the code.\n\t * </p>","labels":{"default":["positive"]}}
{"sentences":"\t/** Indicate whether current char is first non-whitespace char on the line*/","labels":{"default":["positive"]}}
{"sentences":"\t/** The amount of characters already read on first call to nextToken(). */","labels":{"default":["positive"]}}
{"sentences":"\t/** The last significant character read. */","labels":{"default":["positive"]}}
{"sentences":"\t/** The state of the scanner. */","labels":{"default":["positive"]}}
{"sentences":"\t/** The length of the last returned token. */","labels":{"default":["positive"]}}
{"sentences":"\t/** The offset of the last returned token. */","labels":{"default":["positive"]}}
{"sentences":"\t/** The scanner. */","labels":{"default":["positive"]}}
{"sentences":"// postfix for STRING, CHARACTER and SINGLE_LINE_COMMENT","labels":{"default":["positive"]}}
{"sentences":"// prefix for SINGLE_LINE or MULTI_LINE","labels":{"default":["positive"]}}
{"sentences":"// prefix for MULTI_LINE_COMMENT","labels":{"default":["positive"]}}
{"sentences":"// postfix for MULTI_LINE_COMMENT","labels":{"default":["positive"]}}
{"sentences":"// postfix for STRING, CHARACTER and SINGLE_LINE_COMMENT","labels":{"default":["positive"]}}
{"sentences":"// postfix for STRING, CHARACTER and SINGLE_LINE_COMMENT","labels":{"default":["positive"]}}
{"sentences":"// postfix for STRING, CHARACTER","labels":{"default":["positive"]}}
{"sentences":"\t// beginning of prefixes and postfixes","labels":{"default":["positive"]}}
{"sentences":"\t// states","labels":{"default":["positive"]}}
{"sentences":"\t * Characters known to be used as line end comments.","labels":{"default":["positive"]}}
{"sentences":"\t * Characters not applicable for line start comments.","labels":{"default":["positive"]}}
{"sentences":"This scanner recognizes\n * <ul>\n * <li>C multi line comments</li>\n * <li>Assembly line comments</li>\n * <li>C++ line comments</li>\n * <li>C string literals</li>\n * <li>Assembly character literals</li>\n * <li>C preprocessor directives</li>\n * </ul>\n * Default supported line start comment characters are ';', '!', '|' and '@'.\n * <p>","labels":{"default":["positive"]}}
{"sentences":"A simple heuristic is used to detect valid line end comment characters: If a\n * character known to be a potential line end comment character is used as a\n * line start comment char, this character is considered a valid line end\n * comment character, too. If e.g. a '@' is used to introduce a line start\n * comment it is also recognized as a line end comment introducer afterwards.\n * </p>","labels":{"default":["negative"]}}
{"sentences":"Prevent no-parameters instantiation of FreeformQuery","labels":{"default":["positive"]}}
{"sentences":"Creates a new freeform query delegate to be used with the","labels":{"default":["positive"]}}
{"sentences":"@link SQLContainer","labels":{"default":["negative"]}}
{"sentences":"@link SQLContainer","labels":{"default":["negative"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"@see FreeformQueryDelegate#getQueryString(int, int)","labels":{"default":["negative"]}}
{"sentences":"@see\n     * com.vaadin.data.util.sqlcontainer.query.QueryDelegate#setFilters(java\n     * .util.List)","labels":{"default":["negative"]}}
{"sentences":"@see\n     * com.vaadin.data.util.sqlcontainer.query.QueryDelegate#storeRow(com.vaadin\n     * .data.util.sqlcontainer.RowItem)","labels":{"default":["negative"]}}
{"sentences":"@see\n     * com.vaadin.data.util.sqlcontainer.query.QueryDelegate#removeRow(com.vaadin\n     * .data.util.sqlcontainer.RowItem)","labels":{"default":["negative"]}}
{"sentences":"@see FreeformQueryDelegate#getContainsRowQueryString(Object...)","labels":{"default":["negative"]}}
{"sentences":"// Append a where clause","labels":{"default":["positive"]}}
{"sentences":"// Rewrite the where clause","labels":{"default":["positive"]}}
{"sentences":"// Is there already a WHERE clause in the query string?","labels":{"default":["positive"]}}
{"sentences":"// Build the where rules for the provided keys","labels":{"default":["positive"]}}
{"sentences":"// Statement generation not supported, continue...","labels":{"default":["positive"]}}
{"sentences":"This implementation of the containsRowWithKey method rewrites existing\n     * WHERE clauses in the query string. The logic is, however, not very\n     * complex and some times can do the Wrong Thing<sup>TM</sup>. For the\n     * situations where this logic is not enough, you can implement the\n     * getContainsRowQueryString method in FreeformQueryDelegate and this will\n     * be used instead of the logic.","labels":{"default":["positive"]}}
{"sentences":"@see\n     * com.vaadin.data.util.sqlcontainer.query.QueryDelegate#getPrimaryKeyColumns\n     * ()","labels":{"default":["negative"]}}
{"sentences":"@see\n     * com.vaadin.data.util.sqlcontainer.query.QueryDelegate#setOrderBy(java\n     * .util.List)","labels":{"default":["negative"]}}
{"sentences":"// Statement generation not supported, continue...","labels":{"default":["positive"]}}
{"sentences":"/* First try using prepared statement */","labels":{"default":["positive"]}}
{"sentences":"// throw the original exception even if closing the statement\n                // fails","labels":{"default":["positive"]}}
{"sentences":" // This is fine, we'll just use the default queryString.","labels":{"default":["positive"]}}
{"sentences":"// Statement generation not supported, continue...","labels":{"default":["positive"]}}
{"sentences":"/* First try using prepared statement */","labels":{"default":["positive"]}}
{"sentences":" @param queryString\n     *            The actual query to perform.\n     * @param connectionPool\n     *            the JDBCConnectionPool to use to open connections to the SQL\n     *            database.\n     * @param primaryKeyColumns\n     *            The primary key columns. Read-only mode is forced if none are\n     *            provided. (optional)","labels":{"default":["negative"]}}
{"sentences":"Creates a new freeform query delegate to be used with the","labels":{"default":["positive"]}}
{"sentences":"This implementation of getCount() actually fetches all records from the\n     * database, which might be a performance issue. Override this method with a\n     * SELECT COUNT(*) ... query if this is too slow for your needs.","labels":{"default":["positive"]}}
{"sentences":"First try the delegate","labels":{"default":["positive"]}}
{"sentences":"// Couldn't use the delegate, use the bad way.","labels":{"default":["positive"]}}
{"sentences":"/* First try using prepared statement */","labels":{"default":["positive"]}}
{"sentences":"// Count statement generation not supported","labels":{"default":["positive"]}}
{"sentences":"/* Try using regular statement */","labels":{"default":["positive"]}}
{"sentences":"// Count query generation not supported","labels":{"default":["positive"]}}
{"sentences":"Fetches the results for the query. This implementation always fetches the\n     * entire record set, ignoring the offset and page length parameters. In\n     * order to support lazy loading of records, you must supply a\n     * FreeformQueryDelegate that implements the\n     * FreeformQueryDelegate.getQueryString(int,int) method.","labels":{"default":["positive"]}}
{"sentences":"@link FreeformQuery#FreeformQuery(String, JDBCConnectionPool, String...)","labels":{"default":["negative"]}}
{"sentences":"@see\n     *             {@link FreeformQuery#FreeformQuery(String, JDBCConnectionPool, String...)}","labels":{"default":["negative"]}}
{"sentences":"@deprecated As of 6.7,","labels":{"default":["negative"]}}
{"sentences":"@param queryString\n     *            The actual query to perform.","labels":{"default":["negative"]}}
{"sentences":"@param primaryKeyColumns\n     *            The primary key columns. Read-only mode is forced if this\n     *            parameter is null or empty.","labels":{"default":["negative"]}}
{"sentences":"@param connectionPool\n     *            the JDBCConnectionPool to use to open connections to the SQL\n     *            database.","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Marc Khouzam (Ericsson) - Initial implementation of Test cases","labels":{"default":["negative"]}}
{"sentences":"// Root and Intermediate","labels":{"default":["positive"]}}
{"sentences":"@link SchedulingPolicy","labels":{"default":["negative"]}}
{"sentences":"@link SchedulingPolicy","labels":{"default":["negative"]}}
{"sentences":"@link SchedulingPolicy","labels":{"default":["negative"]}}
{"sentences":"@link SchedulingPolicy","labels":{"default":["negative"]}}
{"sentences":"@link ResourceCalculator","labels":{"default":["negative"]}}
{"sentences":"@link SchedulingPolicy","labels":{"default":["negative"]}}
{"sentences":"@link SchedulingPolicy","labels":{"default":["negative"]}}
{"sentences":"@link SchedulingPolicy","labels":{"default":["negative"]}}
{"sentences":"@link SchedulingPolicy","labels":{"default":["negative"]}}
{"sentences":"@link Schedulable","labels":{"default":["negative"]}}
{"sentences":"@link Schedulable","labels":{"default":["negative"]}}
{"sentences":"@link SchedulingPolicy","labels":{"default":["negative"]}}
{"sentences":"@link Schedulable","labels":{"default":["negative"]}}
{"sentences":"@link Resource","labels":{"default":["negative"]}}
{"sentences":"@link FSQueue","labels":{"default":["negative"]}}
{"sentences":"@link FSQueue","labels":{"default":["negative"]}}
{"sentences":"@link Resource","labels":{"default":["negative"]}}
{"sentences":"@link Resource","labels":{"default":["negative"]}}
{"sentences":"@link Resource","labels":{"default":["negative"]}}
{"sentences":"@link Resource","labels":{"default":["negative"]}}
{"sentences":"@link Resource","labels":{"default":["negative"]}}
{"sentences":"@param queueFairShare fairshare in the queue\n   * @param queueUsage resources used in the queue\n   * @param maxAvailable available resource in cluster for this queue\n   * @return calculated headroom","labels":{"default":["negative"]}}
{"sentences":"@param usage {@link Resource} the resource used by application masters\n   * @param maxAMResource {@link Resource} the maximum allowed resource for\n   *                                      application masters","labels":{"default":["negative"]}}
{"sentences":"@return true if AM resource usage is over the limit","labels":{"default":["negative"]}}
{"sentences":"@param usage {@link Resource} the resource usage\n   * @param fairShare {@link Resource} the fair share","labels":{"default":["negative"]}}
{"sentences":"@return true if check passes (is over) or false otherwise","labels":{"default":["negative"]}}
{"sentences":"@param queues {@link FSQueue}s whose shares are to be updated","labels":{"default":["negative"]}}
{"sentences":"@param totalResources Total {@link Resource}s in the cluster","labels":{"default":["negative"]}}
{"sentences":"@link SchedulingPolicy","labels":{"default":["negative"]}}
{"sentences":"Check if a leaf queue's AM resource usage over its limit under this policy","labels":{"default":["positive"]}}
{"sentences":"Get headroom by calculating the min of <code>clusterAvailable</code> and\n   * (<code>queueFairShare</code> - <code>queueUsage</code>) resources that are\n   * applicable to this policy. For eg if only memory then leave other\n   * resources such as CPU to same as clusterAvailable.","labels":{"default":["positive"]}}
{"sentences":"Check if the resource usage is over the fair share under this policy","labels":{"default":["positive"]}}
{"sentences":"Computes and updates the steady shares of {@link FSQueue}s as per the\n   * {@link SchedulingPolicy}. The steady share does not differentiate\n   * between queues with and without running applications under them. The\n   * steady share is not used for scheduling, it is displayed on the Web UI\n   * for better visibility.","labels":{"default":["positive"]}}
{"sentences":"Computes and updates the shares of {@link Schedulable}s as per\n   * the {@link SchedulingPolicy}, to be used later for scheduling decisions.\n   * The shares computed are instantaneous and only consider queues with\n   * running applications.","labels":{"default":["positive"]}}
{"sentences":"The comparator returned by this method is to be used for sorting the\n   * {@link Schedulable}s in that queue.","labels":{"default":["positive"]}}
{"sentences":"Checks if the specified {@link SchedulingPolicy} can be used for a queue at\n   * the specified depth in the hierarchy","labels":{"default":["positive"]}}
{"sentences":"Specifies the depths in the hierarchy, this {@link SchedulingPolicy}\n   * applies to","labels":{"default":["positive"]}}
{"sentences":"The {@link ResourceCalculator} returned by this method should be used\n   * for any calculations involving resources.","labels":{"default":["positive"]}}
{"sentences":"Returns {@link SchedulingPolicy} instance corresponding to the\n   * {@link SchedulingPolicy} passed as a string. The policy can be \"fair\" for\n   * FairSharePolicy, \"fifo\" for FifoPolicy, or \"drf\" for\n   * DominantResourceFairnessPolicy. For a custom\n   * {@link SchedulingPolicy}s in the RM classpath, the policy should be\n   * canonical class name of the {@link SchedulingPolicy}.","labels":{"default":["positive"]}}
{"sentences":"Returns a {@link SchedulingPolicy} instance corresponding to the passed clazz","labels":{"default":["positive"]}}
{"sentences":"@param policy canonical class name or \"drf\" or \"fair\" or \"fifo\"","labels":{"default":["negative"]}}
{"sentences":"@return ResourceCalculator instance to use","labels":{"default":["negative"]}}
{"sentences":"@return returns the name of {@link SchedulingPolicy}","labels":{"default":["negative"]}}
{"sentences":"@return depth equal to one of fields","labels":{"default":["negative"]}}
{"sentences":"@param policy {@link SchedulingPolicy} we are checking the\n   *          depth-applicability for\n   * @param depth queue's depth in the hierarchy","labels":{"default":["negative"]}}
{"sentences":"@return true if policy is applicable to passed depth, false otherwise","labels":{"default":["negative"]}}
{"sentences":" @return the comparator to sort by","labels":{"default":["negative"]}}
{"sentences":"@param schedulables {@link Schedulable}s whose shares are to be updated\n   * @param totalResources Total {@link Resource}s in the cluster","labels":{"default":["negative"]}}
{"sentences":"@link SchedulingPolicy","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n * Bala Torati (Symbian) - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"@param element","labels":{"default":["negative"]}}
{"sentences":"@return UIElement","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"This interface has methods which returns a UIElement, given an Element.\n * Method to return a List of Elements, given an Element.","labels":{"default":["positive"]}}
{"sentences":"Returns the UIElement.","labels":{"default":["positive"]}}
{"sentences":"@since 7.4","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":"@param <T>\n *            Property data type","labels":{"default":["negative"]}}
{"sentences":"@param item\n     *            currently handled item\n     * @param itemId\n     *            item id for currently handled item\n     * @param propertyId\n     *            id for this property","labels":{"default":["negative"]}}
{"sentences":"@return generated value","labels":{"default":["negative"]}}
{"sentences":"@return type of generated property","labels":{"default":["negative"]}}
{"sentences":"@param order\n     *            a sort order for this property","labels":{"default":["negative"]}}
{"sentences":"@return an array of sort orders describing how this property is sorted","labels":{"default":["negative"]}}
{"sentences":"@param filter\n     *            original filter for this property","labels":{"default":["negative"]}}
{"sentences":"@return modified filter that is compatible with the underlying container","labels":{"default":["negative"]}}
{"sentences":" Return an updated filter that should be compatible with the underlying\n     * container.","labels":{"default":["positive"]}}
{"sentences":"This function is called when setting a filter for this generated\n     * property. Returning null from this function causes\n     * GeneratedPropertyContainer to discard the filter and not use it.\n     * \n     * By default this function throws UnsupportedFilterException.","labels":{"default":["negative"]}}
{"sentences":" SortOrder is similar to (or the same as) the SortOrder already defined\n     * for Grid.\n     * \n     * The default implementation of this method returns an empty array, which\n     * means that the property will not be included in\n     * getSortableContainerPropertyIds(). Attempting to sort by that column\n     * throws UnsupportedOperationException.\n     * \n     * Returning null is not allowed.","labels":{"default":["negative"]}}
{"sentences":" Translates sorting of the generated property in a specific direction to a\n     * set of property ids and directions in the underlying container.","labels":{"default":["positive"]}}
{"sentences":"Return Property type for this generator. This function is called when\n     * {@link Property#getType()} is called for generated property.","labels":{"default":["positive"]}}
{"sentences":" Returns value for given Item. Used by GeneratedPropertyContainer when\n     * generating new properties.","labels":{"default":["positive"]}}
{"sentences":"@link Property#getType()","labels":{"default":["negative"]}}
{"sentences":"PropertyValueGenerator for GeneratedPropertyContainer.","labels":{"default":["positive"]}}
{"sentences":"// 2^70 > 2^63 - 1","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     John Camelon (IBM) - Initial API and implementation\n *     Bryan Wilkinson (QNX)\n *     Sergey Prigogin (Google)\n *     Thomas Corbat (IFS)","labels":{"default":["negative"]}}
{"sentences":" @since 5.8","labels":{"default":["negative"]}}
{"sentences":"@return the value","labels":{"default":["negative"]}}
{"sentences":"Set the checkbox selection and enablement of the other controls as specified.","labels":{"default":["positive"]}}
{"sentences":"The checkbox selection will normally be propagated to the label and text controls in the\n    \t// checkbox selection listener.  However, the callback is only invoked when the selection changes,\n    \t// which means that an initial value of false will not be properly propagated.  The state is\n    \t// directly updated here.","labels":{"default":["negative"]}}
{"sentences":"Returns this field editor's current boolean value.","labels":{"default":["positive"]}}
{"sentences":"// create and hide label from base class","labels":{"default":["positive"]}}
{"sentences":"// validate on focus gain","labels":{"default":["positive"]}}
{"sentences":"A field editor that combines an integer value preference with a boolean enablement\n * preference.","labels":{"default":["positive"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":"Dummy connector to test our Vaadin/GWT RPC bug. In a Vaadin environment with\n * DevMode enabled, a pure GWT RPC call would throw an exception.","labels":{"default":["positive"]}}
{"sentences":"The ID of the label in case the test is successful.","labels":{"default":["positive"]}}
{"sentences":"The ID of the label in case the test failed.","labels":{"default":["positive"]}}
{"sentences":"Make an RPC to test our bug.","labels":{"default":["positive"]}}
{"sentences":"Show the result box.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * Bala Torati (Symbian) - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"ITemplatesListProvider","labels":{"default":["positive"]}}
{"sentences":" Contributors:\n *     QNX Software Systems - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"// make builder enabled","labels":{"default":["positive"]}}
{"sentences":"@code\n * guice-throwingproviders.jar","labels":{"default":["negative"]}}
{"sentences":"Extension for injecting objects that may throw at provision time; this extension requires","labels":{"default":["positive"]}}
{"sentences":"@author Louis Wasserman","labels":{"default":["negative"]}}
{"sentences":"@since 14.0","labels":{"default":["negative"]}}
{"sentences":"@deprecated Unsupported operation.","labels":{"default":["negative"]}}
{"sentences":"@deprecated Unsupported operation.","labels":{"default":["negative"]}}
{"sentences":"@deprecated Unsupported operation.","labels":{"default":["negative"]}}
{"sentences":"@deprecated Unsupported operation.","labels":{"default":["negative"]}}
{"sentences":"A {@link RangeSet} whose contents will never change, with many other important properties\n * detailed at {@link ImmutableCollection}.","labels":{"default":["positive"]}}
{"sentences":"Returns an empty immutable range set.","labels":{"default":["positive"]}}
{"sentences":"Returns an immutable range set containing the single range {@link Range#all()}.","labels":{"default":["positive"]}}
{"sentences":"Returns an immutable range set containing the specified single range. If {@link Range#isEmpty()\n   * range.isEmpty()}, this is equivalent to {@link ImmutableRangeSet#of()}.","labels":{"default":["positive"]}}
{"sentences":"Returns an immutable copy of the specified {@code RangeSet}.","labels":{"default":["positive"]}}
{"sentences":"@code RangeSet","labels":{"default":["negative"]}}
{"sentences":"Guaranteed to throw an exception and leave the {@code RangeSet} unmodified.","labels":{"default":["positive"]}}
{"sentences":"Guaranteed to throw an exception and leave the {@code RangeSet} unmodified.","labels":{"default":["positive"]}}
{"sentences":"Guaranteed to throw an exception and leave the {@code RangeSet} unmodified.","labels":{"default":["positive"]}}
{"sentences":"Guaranteed to throw an exception and leave the {@code RangeSet} unmodified.","labels":{"default":["positive"]}}
{"sentences":"// True if the \"positive\" range set is empty or bounded below.","labels":{"default":["negative"]}}
{"sentences":"// True if the \"positive\" range set is empty or bounded above.","labels":{"default":["negative"]}}
{"sentences":"Returns a list containing the nonempty intersections of {@code range}\n   * with the ranges in this range set.","labels":{"default":["positive"]}}
{"sentences":"Returns a view of the intersection of this range set with the given range.","labels":{"default":["positive"]}}
{"sentences":"Returns an {@link ImmutableSortedSet} containing the same values in the given domain\n   * {@linkplain RangeSet#contains contained} by this range set.","labels":{"default":["positive"]}}
{"sentences":"<p><b>Note:</b> {@code a.asSet(d).equals(b.asSet(d))} does not imply {@code a.equals(b)}! For\n   * example, {@code a} and {@code b} could be {@code [2..4]} and {@code (1..5)}, or the empty\n   * ranges {@code [3..3)} and {@code [4..4)}.","labels":{"default":["negative"]}}
{"sentences":"<p><b>Warning:</b> Be extremely careful what you do with the {@code asSet} view of a large\n   * range set (such as {@code ImmutableRangeSet.of(Range.greaterThan(0))}). Certain operations on\n   * such a set can be performed efficiently, but others (such as {@link Set#hashCode} or\n   * {@link Collections#frequency}) can cause major performance problems.","labels":{"default":["negative"]}}
{"sentences":" <p>The returned set's {@link Object#toString} method returns a short-hand form of the set's\n   * contents, such as {@code \"[1..100]}\"}.","labels":{"default":["negative"]}}
{"sentences":" // according to the spec of canonical, neither this ImmutableRangeSet nor\n      // the range have a lower bound","labels":{"default":["positive"]}}
{"sentences":"// racy single-check idiom","labels":{"default":["positive"]}}
{"sentences":"// we catch CCE's","labels":{"default":["negative"]}}
{"sentences":"// if it's contained, it's definitely a C","labels":{"default":["negative"]}}
{"sentences":"Returns {@code true} if this immutable range set's implementation contains references to\n   * user-created objects that aren't accessible via this range set's methods. This is generally\n   * used to determine whether {@code copyOf} implementations should make an explicit copy to avoid\n   * memory leaks.","labels":{"default":["positive"]}}
{"sentences":"Returns a new builder for an immutable range set.","labels":{"default":["positive"]}}
{"sentences":"A builder for immutable range sets.","labels":{"default":["positive"]}}
{"sentences":"Add the specified range to this builder.  Adjacent/abutting ranges are permitted, but\n     * empty ranges, or ranges with nonempty overlap, are forbidden.","labels":{"default":["positive"]}}
{"sentences":" Add all ranges from the specified range set to this builder. Duplicate or connected ranges\n     * are permitted, and will be merged in the resulting immutable range set.","labels":{"default":["positive"]}}
{"sentences":"Returns an {@code ImmutableRangeSet} containing the ranges added to this builder.","labels":{"default":["positive"]}}
{"sentences":"@code ImmutableRangeSet","labels":{"default":["negative"]}}
{"sentences":"@code range","labels":{"default":["negative"]}}
{"sentences":"@code copyOf","labels":{"default":["negative"]}}
{"sentences":"@code true","labels":{"default":["negative"]}}
{"sentences":"@code \"[1..100]}\"","labels":{"default":["negative"]}}
{"sentences":"@link Object#toString","labels":{"default":["negative"]}}
{"sentences":"@link Set#hashCode","labels":{"default":["negative"]}}
{"sentences":"@code asSet","labels":{"default":["negative"]}}
{"sentences":"@code (1..5)","labels":{"default":["negative"]}}
{"sentences":"@code a.equals(b)","labels":{"default":["negative"]}}
{"sentences":"@code [4..4)","labels":{"default":["negative"]}}
{"sentences":"@code [2..4]","labels":{"default":["negative"]}}
{"sentences":"code ImmutableRangeSet.of(Range.greaterThan(0))","labels":{"default":["negative"]}}
{"sentences":"code [3..3)","labels":{"default":["negative"]}}
{"sentences":"@code [4..4)","labels":{"default":["negative"]}}
{"sentences":"@code b","labels":{"default":["negative"]}}
{"sentences":"@code a.asSet(d).equals(b.asSet(d))","labels":{"default":["negative"]}}
{"sentences":"@code a","labels":{"default":["negative"]}}
{"sentences":"@link Collections#frequency","labels":{"default":["negative"]}}
{"sentences":"@link ImmutableSortedSet","labels":{"default":["negative"]}}
{"sentences":"@code range","labels":{"default":["negative"]}}
{"sentences":"@code RangeSet","labels":{"default":["negative"]}}
{"sentences":"@code RangeSet","labels":{"default":["negative"]}}
{"sentences":"@code RangeSet","labels":{"default":["negative"]}}
{"sentences":"@link Range#isEmpty()","labels":{"default":["negative"]}}
{"sentences":"@link ImmutableRangeSet#of()","labels":{"default":["negative"]}}
{"sentences":"@link Range#all()","labels":{"default":["negative"]}}
{"sentences":"@code RangeSet","labels":{"default":["negative"]}}
{"sentences":"@author Louis Wasserman","labels":{"default":["negative"]}}
{"sentences":"Tests for {@code Count}.","labels":{"default":["positive"]}}
{"sentences":"@code Count","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Ericsson - initial API and implementation\n *     Vladimir Prus (CodeSourcery) - Support for -data-read-memory-bytes (bug 322658)     \n *     Jens Elmenthaler (Verigy) - Added Full GDB pretty-printing support (bug 302121)","labels":{"default":["negative"]}}
{"sentences":"@param rm The requestMonitor indicating that GDB has been terminated.","labels":{"default":["negative"]}}
{"sentences":"@param rm The requestMonitor indicating that the final steps if \n\t *           initialization are completed.","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"@since 2.0","labels":{"default":["negative"]}}
{"sentences":"@since 3.0","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"@param rm","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"@param enabled\n\t *            If <code>true</code>, printing errors is turned on.","labels":{"default":["negative"]}}
{"sentences":"@param rm","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"Request to terminate GDB.","labels":{"default":["positive"]}}
{"sentences":"This method should be called once and only once, during the launch,\n\t * to complete the initialization.  It will perform the final steps\n\t * to configure GDB for the type of debugging session chosen by the\n\t * user.","labels":{"default":["positive"]}}
{"sentences":" \n\t * Sets any user-defined environment variables for the inferior.\n\t * \n\t * If the 'clear' flag is true, all existing environment variables\n\t * will be removed and replaced with the new specified ones. \n\t * If 'clear' is false, the new variables are added to the existing\n\t * environment.","labels":{"default":["positive"]}}
{"sentences":"Returns a list of all the target-independent MI features\n\t * supported by the GDB that is being used. Consult the GDB MI documentation\n\t * for the MI -list-features command for the possible names of features.\n\t * \n\t * The return value is never null but may be an empty list.","labels":{"default":["positive"]}}
{"sentences":"Enable the pretty printers also for MI variable objects. This basically\n\t * sends -enable-pretty-printing.","labels":{"default":["positive"]}}
{"sentences":"Turns the printing of python errors on or off.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * ARM Limited - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.ui.progress.UIJob#runInUIThread(org.eclipse.core.runtime.IProgressMonitor)","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Anton Leherbauer (Wind River Systems) - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"@param viewer the text viewer","labels":{"default":["negative"]}}
{"sentences":"@param viewer the text viewer","labels":{"default":["negative"]}}
{"sentences":"@param x\n\t *            screen X-coordinate\n\t * @param y\n\t *            screen Y-coordinate\n\t * @param absolute\n\t *            if <code>true</code>, coordinates are expected to be\n\t *            absolute screen coordinates","labels":{"default":["negative"]}}
{"sentences":"@return text offset","labels":{"default":["negative"]}}
{"sentences":"@param widgetOffset","labels":{"default":["negative"]}}
{"sentences":"@return document offset","labels":{"default":["negative"]}}
{"sentences":"@return true if the document may be changed by the drag.","labels":{"default":["negative"]}}
{"sentences":"@param enabled","labels":{"default":["negative"]}}
{"sentences":"Enable or disable this drag listener.","labels":{"default":["positive"]}}
{"sentences":"Convert a widget offset to the corresponding document offset.","labels":{"default":["positive"]}}
{"sentences":"// we are expecting this","labels":{"default":["negative"]}}
{"sentences":"@see StyledText#getOffsetAtLocation()","labels":{"default":["negative"]}}
{"sentences":"Convert mouse screen coordinates to a <code>StyledText</code> offset.","labels":{"default":["positive"]}}
{"sentences":"// this has no effect?","labels":{"default":["negative"]}}
{"sentences":"// should not happen","labels":{"default":["positive"]}}
{"sentences":"// cannot happen","labels":{"default":["positive"]}}
{"sentences":"/ add the drag selection position\n\t\t\t\t// the position is used to delete the selection on a DROP_MOVE\n\t\t\t\t// and it can be used by the drop target to determine if it should\n\t\t\t\t// allow the drop (e.g. if drop location overlaps selection)","labels":{"default":["negative"]}}
{"sentences":"// convert further to a document offset","labels":{"default":["positive"]}}
{"sentences":"// convert screen coordinates to widget offest","labels":{"default":["positive"]}}
{"sentences":"@see org.eclipse.swt.dnd.DragSourceListener#dragStart(org.eclipse.swt.dnd.DragSourceEvent)","labels":{"default":["negative"]}}
{"sentences":" @see org.eclipse.swt.dnd.DragSourceListener#dragSetData(org.eclipse.swt.dnd.DragSourceEvent)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.swt.dnd.DragSourceListener#dragFinished(org.eclipse.swt.dnd.DragSourceEvent)","labels":{"default":["negative"]}}
{"sentences":"// cannot happen","labels":{"default":["positive"]}}
{"sentences":"// ignore","labels":{"default":["positive"]}}
{"sentences":"Create a new TextViewerDragAdapter.","labels":{"default":["positive"]}}
{"sentences":"Create a new TextViewerDragAdapter.","labels":{"default":["positive"]}}
{"sentences":"Drag source adapter for text selections in ITextViewers.","labels":{"default":["positive"]}}
{"sentences":"/** The position category to be used to indicate a drag source selection */","labels":{"default":["positive"]}}
{"sentences":"\t/** The position updater for the drag selection position */","labels":{"default":["positive"]}}
{"sentences":"\t/** The drag selection position */","labels":{"default":["positive"]}}
{"sentences":"\t/** The drag selection position */","labels":{"default":["positive"]}}
{"sentences":"\t/** The text viewer allowing drag */","labels":{"default":["positive"]}}
{"sentences":"\t/** The editor of the viewer (may be null) */","labels":{"default":["positive"]}}
{"sentences":"\t/** Flag whether this drag source listener allows to drag */","labels":{"default":["positive"]}}
{"sentences":"Test WebHDFS with multiple NameNodes","labels":{"default":["positive"]}}
{"sentences":"//The suffix is to make sure the strings have different lengths.","labels":{"default":["positive"]}}
{"sentences":"//test create: create a file for each namenode","labels":{"default":["positive"]}}
{"sentences":"      //check file length","labels":{"default":["positive"]}}
{"sentences":"    //test read: check file content for each namenode","labels":{"default":["positive"]}}
{"sentences":"    //test append: append to the file for each namenode","labels":{"default":["positive"]}}
{"sentences":"      //check file length","labels":{"default":["positive"]}}
{"sentences":"    //test read: check file content for each namenode","labels":{"default":["positive"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":"@since 6.8.0","labels":{"default":["negative"]}}
{"sentences":"A base class for generating an unique object that is serializable.\n * <p>\n * This class is abstract but has no abstract methods to force users to create\n * an anonymous inner class. Otherwise each instance will not be unique.","labels":{"default":["positive"]}}
{"sentences":"/**\n * This policy works in combination with an implementation of task\n * checkpointing. It computes the tasks to be preempted in response to the RM\n * request for preemption. For strict requests, it maps containers to\n * corresponding tasks; for fungible requests, it attempts to pick the best\n * containers to preempt (reducers in reverse allocation order). The\n * TaskAttemptListener will interrogate this policy when handling a task\n * heartbeat to check whether the task should be preempted or not. When handling\n * fungible requests, the policy discount the RM ask by the amount of currently\n * in-flight preemptions (i.e., tasks that are checkpointing).\n *\n * This class it is also used to maintain the list of checkpoints for existing\n * tasks. Centralizing this functionality here, allows us to have visibility on\n * preemption and checkpoints in a single location, thus coordinating preemption\n * and checkpoint management decisions in a single policy.\n */","labels":{"default":["positive"]}}
{"sentences":"  // task attempts flagged for preemption","labels":{"default":["positive"]}}
{"sentences":"      // handling non-negotiable preemption","labels":{"default":["positive"]}}
{"sentences":"        // handle strict preemptions. These containers are non-negotiable","labels":{"default":["positive"]}}
{"sentences":"            // ignore requests for preempting containers running maps","labels":{"default":["positive"]}}
{"sentences":"      // handling negotiable preemption","labels":{"default":["positive"]}}
{"sentences":"// handle fungible preemption. Here we only look at the total amount of\n        // resources to be preempted and pick enough of our containers to\n        // satisfy that. We only support checkpointing for reducers for now.","labels":{"default":["positive"]}}
{"sentences":"// compute the total amount of pending preemptions (to be discounted\n        // from current request)","labels":{"default":["positive"]}}
{"sentences":"        // discount preemption request based on currently pending preemption","labels":{"default":["positive"]}}
{"sentences":"// For now, only respond to aggregate requests and ignore locality","labels":{"default":["positive"]}}
{"sentences":"// remove","labels":{"default":["positive"]}}
{"sentences":"// if goes negative we simply exit","labels":{"default":["positive"]}}
{"sentences":"// decrement pending resources if zero or negatve we will\n            // ignore it while processing next PreemptionResourceRequest","labels":{"default":["positive"]}}
{"sentences":"// reverse order of allocation (for now)","labels":{"default":["positive"]}}
{"sentences":" // preempt reducers first","labels":{"default":["positive"]}}
{"sentences":"// if map was preemptable we would do add them to toBePreempted here","labels":{"default":["positive"]}}
{"sentences":"@author Dimitris Andreou","labels":{"default":["negative"]}}
{"sentences":" @since 11.0","labels":{"default":["negative"]}}
{"sentences":"@since 15.0 (since 11.0 as {@code Funnels.stringFunnel()}.","labels":{"default":["negative"]}}
{"sentences":"@since 15.0","labels":{"default":["negative"]}}
{"sentences":"@since 13.0","labels":{"default":["negative"]}}
{"sentences":" @since 15.0","labels":{"default":["negative"]}}
{"sentences":"@since 13.0","labels":{"default":["negative"]}}
{"sentences":"@since 13.0","labels":{"default":["negative"]}}
{"sentences":"@code flush","labels":{"default":["negative"]}}
{"sentences":"@link OutputStream","labels":{"default":["negative"]}}
{"sentences":"@link Funnel#funnel\n   * funnel","labels":{"default":["negative"]}}
{"sentences":"@link Funnels#stringFunnel(Charset)","labels":{"default":["negative"]}}
{"sentences":"Funnels for common types. All implementations are serializable.","labels":{"default":["positive"]}}
{"sentences":"Returns a funnel that extracts the bytes from a {@code byte} array.","labels":{"default":["positive"]}}
{"sentences":"Returns a funnel that extracts the characters from a {@code CharSequence}, a character at a\n   * time, without performing any encoding. If you need to use a specific encoding, use\n   * {@link Funnels#stringFunnel(Charset)} instead.","labels":{"default":["positive"]}}
{"sentences":"@code Charset","labels":{"default":["negative"]}}
{"sentences":"Returns a funnel that encodes the characters of a {@code CharSequence} with the specified","labels":{"default":["positive"]}}
{"sentences":"Returns a funnel for integers.","labels":{"default":["positive"]}}
{"sentences":"Returns a funnel that processes an {@code Iterable} by funneling its elements in iteration\n   * order with the specified funnel. No separators are added between the elements.","labels":{"default":["positive"]}}
{"sentences":"Returns a funnel for longs.","labels":{"default":["positive"]}}
{"sentences":"Wraps a {@code PrimitiveSink} as an {@link OutputStream}, so it is easy to {@link Funnel#funnel\n   * funnel} an object to a {@code PrimitiveSink} if there is already a way to write the contents of\n   * the object to an {@code OutputStream}.","labels":{"default":["positive"]}}
{"sentences":"<p>The {@code close} and {@code flush} methods of the returned {@code OutputStream} do nothing,\n   * and no method throws {@code IOException}.","labels":{"default":["positive"]}}
{"sentences":"@code PrimitiveSink","labels":{"default":["negative"]}}
{"sentences":"@code PrimitiveSink","labels":{"default":["negative"]}}
{"sentences":"@code OutputStream","labels":{"default":["negative"]}}
{"sentences":"@code close","labels":{"default":["negative"]}}
{"sentences":"@code flush","labels":{"default":["negative"]}}
{"sentences":"@code OutputStream","labels":{"default":["negative"]}}
{"sentences":"@code IOException","labels":{"default":["negative"]}}
{"sentences":"@code Iterable","labels":{"default":["negative"]}}
{"sentences":"@code CharSequence","labels":{"default":["negative"]}}
{"sentences":"@code CharSequence","labels":{"default":["negative"]}}
{"sentences":"@code byte","labels":{"default":["negative"]}}
{"sentences":"Test that the exit code of the script determines\n   * whether the fencer succeeded or failed","labels":{"default":["positive"]}}
{"sentences":"// bad path should also fail","labels":{"default":["negative"]}}
{"sentences":"Test that lines on stdout get passed as INFO\n   * level messages","labels":{"default":["positive"]}}
{"sentences":"Test that lines on stderr get passed as\n   * WARN level log messages","labels":{"default":["positive"]}}
{"sentences":"Verify that the Configuration gets passed as\n   * environment variables to the fencer.","labels":{"default":["positive"]}}
{"sentences":" Verify that information about the fencing target gets passed as\n   * environment variables to the fencer.","labels":{"default":["positive"]}}
{"sentences":"Test that we properly close off our input to the subprocess\n   * such that it knows there's no tty connected. This is important\n   * so that, if we use 'ssh', it won't try to prompt for a password\n   * and block forever, for example.","labels":{"default":["positive"]}}
{"sentences":"// This event can be triggered by one of the following flows\n// WebUI -> Container\n// CLI -> RM -> NM","labels":{"default":["positive"]}}
{"sentences":"@since 2.0","labels":{"default":["negative"]}}
{"sentences":"@param <V> any type to be returned by the visit method. Use {@link Void} with\n *     {@code return null} if no return type is needed.","labels":{"default":["negative"]}}
{"sentences":"@link Void","labels":{"default":["negative"]}}
{"sentences":"Visits each of the strategies used to scope an injection.","labels":{"default":["positive"]}}
{"sentences":"Visit an eager singleton or single instance. This scope strategy is found on both module and\n   * injector bindings.","labels":{"default":["positive"]}}
{"sentences":"Visit a scope instance. This scope strategy is found on both module and injector bindings.","labels":{"default":["positive"]}}
{"sentences":"Visit a scope annotation. This scope strategy is found only on module bindings. The instance\n   * that implements this scope is registered by {@link com.google.inject.Binder#bindScope(Class,\n   * Scope) Binder.bindScope()}.","labels":{"default":["positive"]}}
{"sentences":"Visit an unspecified or unscoped strategy. On a module, this strategy indicates that the\n   * injector should use scoping annotations to find a scope. On an injector, it indicates that\n   * no scope is applied to the binding. An unscoped binding will behave like a scoped one when it\n   * is linked to a scoped binding.","labels":{"default":["positive"]}}
{"sentences":"@code return null","labels":{"default":["negative"]}}
{"sentences":"@link com.google.inject.Binder#bindScope(Class,\n   * Scope) Binder.bindScope()","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Ericsson - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@since 3.0","labels":{"default":["negative"]}}
{"sentences":"Breakpoint service for GDB 7.0.\n * It also supports tracepoints","labels":{"default":["positive"]}}
{"sentences":"@see org.eclipse.cdt.dsf.service.AbstractDsfService#initialize(org.eclipse.cdt.dsf.concurrent.RequestMonitor)","labels":{"default":["negative"]}}
{"sentences":"// Get the services references","labels":{"default":["positive"]}}
{"sentences":"// Register this service","labels":{"default":["positive"]}}
{"sentences":"@param context\n\t * @param breakpoint\n\t * @param finalRm","labels":{"default":["negative"]}}
{"sentences":"Add a breakpoint of type BREAKPOINT.","labels":{"default":["positive"]}}
{"sentences":"With GDB 7.0, we can create a breakpoint that is disabled.  This avoids having to disable it as\n\t * a separate command.  It is also much better because in non-stop, we don't risk habing a thread\n\t * hitting the breakpoint between creation and disablement.","labels":{"default":["negative"]}}
{"sentences":"// Select the context breakpoints map","labels":{"default":["positive"]}}
{"sentences":"\t\t// Extract the relevant parameters (providing default values to avoid potential NPEs)","labels":{"default":["positive"]}}
{"sentences":"    \t\t\t// Execute the command","labels":{"default":["positive"]}}
{"sentences":"    \t\t\t\t\t\t\t// With MI, an invalid location won't generate an error","labels":{"default":["positive"]}}
{"sentences":"    \t\t\t\t\t\t\t// Create a breakpoint object and store it in the map","labels":{"default":["positive"]}}
{"sentences":"    \t\t\t\t\t\t\t// Format the return value","labels":{"default":["positive"]}}
{"sentences":"    \t\t\t\t\t\t\t// Flag the event","labels":{"default":["positive"]}}
{"sentences":"\t * Add a tracepoint","labels":{"default":["positive"]}}
{"sentences":"@param context\n\t * @param breakpoint\n\t * @param drm","labels":{"default":["negative"]}}
{"sentences":"// Select the context breakpoints map","labels":{"default":["positive"]}}
{"sentences":"// Extract the relevant parameters (providing default values to avoid potential NPEs)","labels":{"default":["positive"]}}
{"sentences":"// The simplest way to convert from the CLITraceInfo to a MIBreakInsertInfo\n\t\t\t\t\t\t// is to list the breakpoints and take the proper output","labels":{"default":["negative"]}}
{"sentences":"\t\t\t\t\t\t\t\t\t\t\t\t// Create a breakpoint object and store it in the map","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t\t\t\t\t\t\t// Format the return value","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t\t\t\t\t\t\t// Flag the event","labels":{"default":["positive"]}}
{"sentences":"// By default the tracepoint is enabled at creation\n\t\t\t\t\t\t\t\t\t\t\t\t// If it wasn't supposed to be, then disable it right away\n\t\t\t\t\t\t\t\t\t\t\t\t// Also, tracepoints are created with no passcount.\n\t\t\t\t\t\t\t\t\t\t\t\t// We have to set the passcount manually now.\n\t\t\t\t\t\t\t\t\t\t\t\t// Same for commands.","labels":{"default":["negative"]}}
{"sentences":"@param dmc\n\t * @param properties\n\t * @param rm\n\t * @param generateUpdateEvent","labels":{"default":["negative"]}}
{"sentences":"// Retrieve the breakpoint parameters","labels":{"default":["positive"]}}
{"sentences":"\t\t// At this point, we know their are OK so there is no need to re-validate","labels":{"default":["negative"]}}
{"sentences":"\t\t// Track the number of change requests","labels":{"default":["positive"]}}
{"sentences":"        // Determine if the tracepoint pass count changed","labels":{"default":["positive"]}}
{"sentences":"// Determine if tracepoint commands changed","labels":{"default":["positive"]}}
{"sentences":"// Note that breakpoint commands (actions) are not handled by the backend \n\t\t// which is why we don't check for changes here","labels":{"default":["negative"]}}
{"sentences":"\t\t// Set the number of completions required","labels":{"default":["positive"]}}
{"sentences":"\t\t// Pick the context breakpoints map","labels":{"default":["positive"]}}
{"sentences":"Update the breakpoint ignoreCount.","labels":{"default":["positive"]}}
{"sentences":"IgnoreCount is not supported by tracepoints","labels":{"default":["negative"]}}
{"sentences":"\t\t// Pick the context breakpoints map","labels":{"default":["positive"]}}
{"sentences":"// Ignorecount is not supported for tracepoints","labels":{"default":["positive"]}}
{"sentences":"Update the tracepoint passCount","labels":{"default":["positive"]}}
{"sentences":"@param context\n\t * @param reference\n\t * @param ignoreCount\n\t * @param rm","labels":{"default":["negative"]}}
{"sentences":"\t\t// Pick the context breakpoints map","labels":{"default":["positive"]}}
{"sentences":"\t\t\t// Passcount is just for tracepoints","labels":{"default":["positive"]}}
{"sentences":"\t\t// Queue the command","labels":{"default":["positive"]}}
{"sentences":"@link FSDataOutputStream","labels":{"default":["negative"]}}
{"sentences":"@see FSDataOutputStream#hsync()","labels":{"default":["negative"]}}
{"sentences":" /**\n     * Sync the data to DataNode, close the current block, and allocate a new\n     * block\n     */","labels":{"default":["positive"]}}
{"sentences":"\n    /**\n     * When doing sync to DataNodes, also update the metadata (block length) in\n     * the NameNode.\n     */","labels":{"default":["positive"]}}
{"sentences":"@param syncFlags\n   *          Indicate the detailed semantic and actions of the hsync.","labels":{"default":["negative"]}}
{"sentences":"@return the number of valid replicas of the current block","labels":{"default":["negative"]}}
{"sentences":"Sync buffered data to DataNodes (flush to disk devices).","labels":{"default":["positive"]}}
{"sentences":"   * Get the actual number of replicas of the current block.","labels":{"default":["positive"]}}
{"sentences":"This can be different from the designated replication factor of the file\n   * because the namenode does not maintain replication for the blocks which are\n   * currently being written to. Depending on the configuration, the client may\n   * continue to write to a block even if a few datanodes in the write pipeline\n   * have failed, or the client may add a new datanodes once a datanode has\n   * failed.","labels":{"default":["negative"]}}
{"sentences":" * The Hdfs implementation of {@link FSDataOutputStream}.","labels":{"default":["positive"]}}
{"sentences":" Contributors:\n *     IBM Corporation - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"\t * Forces the termination the launched process","labels":{"default":["positive"]}}
{"sentences":"The same functionality as \"isAlive()\"\n\t * but does not affect out streams,\n\t * because they can be shared among processes","labels":{"default":["positive"]}}
{"sentences":"// it seems that thread termination and stream closing is working\n\t\t// without\n\t\t// any help","labels":{"default":["negative"]}}
{"sentences":" Live links the launched process with the configured in/out streams using\n\t * reader threads.","labels":{"default":["positive"]}}
{"sentences":"@param outputStream\n\t *            prcess stdout is written to this stream. Cannot be <code>null</code>.\n\t * @param errorStream\n\t *            prcess stderr is written to this stream. Cannot be <code>null</code>.","labels":{"default":["negative"]}}
{"sentences":"Creates a process closure and connects the launched process with a\n\t * console document.","labels":{"default":["positive"]}}
{"sentences":"Thread which continuously reads from a input stream and pushes the read\n\t * data to an output stream which is immediately flushed afterwards.","labels":{"default":["positive"]}}
{"sentences":"Bundled state of a launched process including the threads linking the process\n * in/output to console documents.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     IBM Corporation - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"/**\n     * Maps connector class -> state property name -> hander method data\n     */","labels":{"default":["positive"]}}
{"sentences":"this is a very inefficient implementation for getting all the identifiers\n    // for a class","labels":{"default":["negative"]}}
{"sentences":"@param type","labels":{"default":["negative"]}}
{"sentences":" @return","labels":{"default":["negative"]}}
{"sentences":"@deprecated As of 7.0.1, use {@link #getPropertiesAsArray(Type)} instead\n     *             for improved performance","labels":{"default":["negative"]}}
{"sentences":"@link #getPropertiesAsArray(Type)","labels":{"default":["negative"]}}
{"sentences":"        // Create Property instances for each property name","labels":{"default":["positive"]}}
{"sentences":"This method sets up prototypes chain for <code>baseClassName</code>.\n     * Precondition is : <code>superClassName</code> had to be handled before\n     * its child <code>baseClassName</code>.","labels":{"default":["positive"]}}
{"sentences":" It makes all properties defined in the <code>superClassName</code>\n     * available for <code>baseClassName</code> as well.","labels":{"default":["negative"]}}
{"sentences":"Gets data for all methods annotated with {@link OnStateChange} in the\n     * given connector type.","labels":{"default":["positive"]}}
{"sentences":"Adds data about a method annotated with {@link OnStateChange} for the\n     * given connector type.","labels":{"default":["positive"]}}
{"sentences":"     * Checks whether the provided method is annotated with {@link NoLayout}.","labels":{"default":["positive"]}}
{"sentences":"     * Checks whether the provided property is annotated with {@link NoLayout}.","labels":{"default":["positive"]}}
{"sentences":"@link NoLayout","labels":{"default":["negative"]}}
{"sentences":"@link NoLayout","labels":{"default":["negative"]}}
{"sentences":"@param property\n     *            the property to check","labels":{"default":["negative"]}}
{"sentences":"@since 7.4","labels":{"default":["negative"]}}
{"sentences":"@return <code>true</code> if the property has a NoLayout annotation;\n     *         otherwise <code>false</code>","labels":{"default":["negative"]}}
{"sentences":" @param method\n     *            the rpc method to check","labels":{"default":["negative"]}}
{"sentences":"@since 7.4","labels":{"default":["negative"]}}
{"sentences":"@return <code>true</code> if the method has a NoLayout annotation;\n     *         otherwise <code>false</code>","labels":{"default":["negative"]}}
{"sentences":" @since 7.2","labels":{"default":["negative"]}}
{"sentences":"@param clazz\n     *            the connector type","labels":{"default":["negative"]}}
{"sentences":"@param method\n     *            the state change method data","labels":{"default":["negative"]}}
{"sentences":" @since 7.2","labels":{"default":["negative"]}}
{"sentences":"@param type\n     *            the connector type","labels":{"default":["negative"]}}
{"sentences":"@return a map of state property names to handler method data","labels":{"default":["negative"]}}
{"sentences":"@author Hayward Chan","labels":{"default":["negative"]}}
{"sentences":"@link RegularImmutableSet","labels":{"default":["negative"]}}
{"sentences":" GWT emulation of {@link RegularImmutableSet}.","labels":{"default":["positive"]}}
{"sentences":"This policy enforce a simple physical cluster capacity constraints, by\n * validating that the allocation proposed fits in the current plan. This\n * validation is compatible with \"updates\" and in verifying the capacity\n * constraints it conceptually remove the prior version of the reservation.","labels":{"default":["positive"]}}
{"sentences":"    // check updates are using same name","labels":{"default":["positive"]}}
{"sentences":"    // for every instant in time, check we are respecting cluster capacity","labels":{"default":["positive"]}}
{"sentences":"      // check the cluster is never over committed","labels":{"default":["positive"]}}
{"sentences":"    // this policy has no \"memory\" so the valid window is set to zero","labels":{"default":["positive"]}}
{"sentences":"    // nothing to do for this policy","labels":{"default":["positive"]}}
{"sentences":"/**\n * This class tests hadoopStreaming in MapReduce local mode.\n * This testcase looks at different cases of tab position in input. \n */","labels":{"default":["positive"]}}
{"sentences":"// First line of input has 'key' 'tab' 'value'\n  // Second line of input starts with a tab character. \n  // So, it has empty key and the whole line as value.\n  // Third line of input does not have any tab character.\n  // So, the whole line is the key and value is empty.","labels":{"default":["negative"]}}
{"sentences":"// During tests, the default Configuration will use a local mapred\n      // So don't specify -config or -cluster","labels":{"default":["negative"]}}
{"sentences":"   * Run the job with the indicating the input format key should be emitted.","labels":{"default":["positive"]}}
{"sentences":"   * Run the job the default way (the input format key is not emitted).","labels":{"default":["positive"]}}
{"sentences":" @since 7.5.6","labels":{"default":["negative"]}}
{"sentences":"@param indicator\n     * @param string","labels":{"default":["negative"]}}
{"sentences":"@return","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Doug Schaefer (IBM) - Initial API and implementation\n *     Markus Schorn (Wind River Systems)\n *\t   Sergey Prigogin (Google)","labels":{"default":["negative"]}}
{"sentences":" * This represents a declaration specifier for a built-in type.","labels":{"default":["positive"]}}
{"sentences":"@noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":" * @noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"Used for omitted declaration specifiers. E.g. for declaration of constructors,\n\t * or in plain c, where this defaults to an integer.","labels":{"default":["positive"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.5","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.5","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.10","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.10","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.10","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.1","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.2","labels":{"default":["negative"]}}
{"sentences":"\t * @deprecated all constants must be defined in this interface","labels":{"default":["negative"]}}
{"sentences":" // used only in subclasses","labels":{"default":["positive"]}}
{"sentences":"\t * Not allowed on frozen ast.","labels":{"default":["positive"]}}
{"sentences":"\t * Not allowed on frozen ast.","labels":{"default":["positive"]}}
{"sentences":"\t * Not allowed on frozen ast.","labels":{"default":["positive"]}}
{"sentences":"\t * Not allowed on frozen ast.","labels":{"default":["positive"]}}
{"sentences":"\t * Not allowed on frozen ast.","labels":{"default":["positive"]}}
{"sentences":"\t * Not allowed on frozen ast.","labels":{"default":["positive"]}}
{"sentences":"@link IASTSimpleDeclSpecifier#t_decltype","labels":{"default":["negative"]}}
{"sentences":"@link IASTSimpleDeclSpecifier#t_typeof","labels":{"default":["negative"]}}
{"sentences":"@see #getType()","labels":{"default":["negative"]}}
{"sentences":"@link IBasicType.Kind","labels":{"default":["negative"]}}
{"sentences":"@see #isSigned()","labels":{"default":["negative"]}}
{"sentences":" @see #isUnsigned()","labels":{"default":["negative"]}}
{"sentences":"@see #isShort()","labels":{"default":["negative"]}}
{"sentences":"@see #isLong()","labels":{"default":["negative"]}}
{"sentences":"@see #isLongLong()","labels":{"default":["negative"]}}
{"sentences":"@see #isComplex()","labels":{"default":["negative"]}}
{"sentences":" @see #isImaginary()","labels":{"default":["negative"]}}
{"sentences":"@see #getDeclTypeExpression()","labels":{"default":["negative"]}}
{"sentences":"/** Unit tests for UTF8. */","labels":{"default":["positive"]}}
{"sentences":"      // generate a random string","labels":{"default":["positive"]}}
{"sentences":"// Check that the bytes are stored correctly in Modified-UTF8 format.\n      // Note that the DataInput and DataOutput interfaces convert between\n      // bytes and Strings using the Modified-UTF8 format.","labels":{"default":["negative"]}}
{"sentences":"      // generate a random string","labels":{"default":["positive"]}}
{"sentences":"      // write it","labels":{"default":["positive"]}}
{"sentences":"      // test that it reads correctly","labels":{"default":["positive"]}}
{"sentences":"      // test that it reads correctly with DataInput","labels":{"default":["positive"]}}
{"sentences":"   * Test encoding and decoding of UTF8 outside the basic multilingual plane.","labels":{"default":["positive"]}}
{"sentences":"   * This is a regression test for HADOOP-9103.","labels":{"default":["negative"]}}
{"sentences":"See http://www.fileformat.info/info/unicode/char/1f431/index.htm","labels":{"default":["negative"]}}
{"sentences":"    // Test using the \"CAT FACE\" character (U+1F431)","labels":{"default":["negative"]}}
{"sentences":"    // This encodes to 4 bytes in UTF-8:","labels":{"default":["positive"]}}
{"sentences":"    // Decode back to String using our own decoder","labels":{"default":["positive"]}}
{"sentences":"   * Test that decoding invalid UTF8 throws an appropriate error message.","labels":{"default":["positive"]}}
{"sentences":"   * Test for a 5-byte UTF8 sequence, which is now considered illegal.","labels":{"default":["positive"]}}
{"sentences":"Test that decoding invalid UTF8 due to truncation yields the correct\n   * exception type.","labels":{"default":["positive"]}}
{"sentences":"// Truncated CAT FACE character -- this is a 4-byte sequence, but we\n    // only have the first three bytes.","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     IBM Corporation - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":" @author Mike Kucera","labels":{"default":["negative"]}}
{"sentences":" Used to compute binding resolution during the parse.\n * \n * Imperative style symbol table with destructive update.","labels":{"default":["positive"]}}
{"sentences":"Consists of two data structures, a hash table for fast lookup\n * of bindings given their names, and a stack used to keep track\n * of scopes.","labels":{"default":["negative"]}}
{"sentences":"\t * Represents a scope in the C language.","labels":{"default":["positive"]}}
{"sentences":"List of buckets that have been modified in the current scope.\n\t\t * When the scope is closed these buckets are popped, returning the \n\t\t * symbol table to the state it was in before the scope was opened.","labels":{"default":["positive"]}}
{"sentences":"\t * A bucket object used to hold elements in the hash table.","labels":{"default":["positive"]}}
{"sentences":" open the global scope","labels":{"default":["positive"]}}
{"sentences":"\t * Hashes a key into an index in the hash table.","labels":{"default":["positive"]}}
{"sentences":"\t * Adds a binding to the symbol table in the current scope.","labels":{"default":["positive"]}}
{"sentences":"Returns the binding associated with the given identifier, or\n\t * null if there is none.","labels":{"default":["positive"]}}
{"sentences":"Opens a new inner scope for identifiers.","labels":{"default":["positive"]}}
{"sentences":"@param mask A bit mask used to identify the namespace of the identifier.","labels":{"default":["negative"]}}
{"sentences":"@param mask A bit mask used to identify the namespace of the identifier.","labels":{"default":["negative"]}}
{"sentences":"If an identifier is added that already exists in an outer scope \n\t * then it will be shadowed.","labels":{"default":["negative"]}}
{"sentences":"\t * Remove all the symbols defined in the scope that is being closed.","labels":{"default":["positive"]}}
{"sentences":"// pop each bucket that was modified in the scope","labels":{"default":["positive"]}}
{"sentences":"// pop the scopeStack","labels":{"default":["positive"]}}
{"sentences":"@param scope An IScope object that will be used to represent this scope.","labels":{"default":["negative"]}}
{"sentences":"@author jessewilson@google.com (Jesse Wilson)","labels":{"default":["negative"]}}
{"sentences":" // A reporter that does nothing","labels":{"default":["positive"]}}
{"sentences":"    // for a variety of lengths","labels":{"default":["positive"]}}
{"sentences":"      // create a file with length entries","labels":{"default":["positive"]}}
{"sentences":"      // try splitting the file in a variety of sizes","labels":{"default":["positive"]}}
{"sentences":"        // check each split","labels":{"default":["positive"]}}
{"sentences":"    // Create the codec","labels":{"default":["positive"]}}
{"sentences":"    // A reporter that does nothing","labels":{"default":["positive"]}}
{"sentences":"    // for a variety of lengths","labels":{"default":["positive"]}}
{"sentences":"      // create a file with length entries","labels":{"default":["positive"]}}
{"sentences":"      // try splitting the file in a variety of sizes","labels":{"default":["positive"]}}
{"sentences":"        // check each split","labels":{"default":["positive"]}}
{"sentences":"Test readLine for various kinds of line termination sequneces.\n   * Varies buffer size to stress test.  Also check that returned\n   * value matches the string length.","labels":{"default":["positive"]}}
{"sentences":"//\"a\"\\n","labels":{"default":["negative"]}}
{"sentences":"//\"bb\"\\n","labels":{"default":["negative"]}}
{"sentences":" //\"\"\\n","labels":{"default":["negative"]}}
{"sentences":"//\"ccc\"\\r","labels":{"default":["negative"]}}
{"sentences":"//dddd\\r","labels":{"default":["negative"]}}
{"sentences":"//\"\"\\r","labels":{"default":["negative"]}}
{"sentences":"//\"\"\\r\\n","labels":{"default":["negative"]}}
{"sentences":"//\"\"\\r\\n","labels":{"default":["negative"]}}
{"sentences":"//\"eeeee\"EOF","labels":{"default":["negative"]}}
{"sentences":"Test readLine for correct interpretation of maxLineLength\n   * (returned string should be clipped at maxLineLength, and the\n   * remaining bytes on the same line should be thrown out).\n   * Also check that returned value matches the string length.\n   * Varies buffer size to stress test.","labels":{"default":["positive"]}}
{"sentences":"// max LRR pos + LineReader buf","labels":{"default":["positive"]}}
{"sentences":"/**\n *","labels":{"default":["positive"]}}
{"sentences":"   * @param args","labels":{"default":["negative"]}}
{"sentences":"   * Parse the command line arguments into lines and display the result.","labels":{"default":["positive"]}}
{"sentences":"   * Test using the gzip codec and an empty input file","labels":{"default":["positive"]}}
{"sentences":"   * Test using the gzip codec for reading","labels":{"default":["positive"]}}
{"sentences":"    // test another constructor","labels":{"default":["positive"]}}
{"sentences":"// used by LRR","labels":{"default":["positive"]}}
{"sentences":"// max LRR pos + LineReader buf","labels":{"default":["positive"]}}
{"sentences":"OrderBy represents a sorting rule to be applied to a query made by the\n * SQLContainer's QueryDelegate.\n * \n * The sorting rule is simple and contains only the affected column's name and\n * the direction of the sort.","labels":{"default":["positive"]}}
{"sentences":"     * Prevent instantiation without required parameters.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.ui.texteditor.IAnnotationImageProvider#getManagedImage(org.eclipse.jface.text.source.Annotation)","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.ui.texteditor.IAnnotationImageProvider#getImageDescriptorId(org.eclipse.jface.text.source.Annotation)","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.ui.texteditor.IAnnotationImageProvider#getImageDescriptor(java.lang.String)","labels":{"default":["negative"]}}
{"sentences":" * Provides breakpoint's image information.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"// Try the current directory.","labels":{"default":["positive"]}}
{"sentences":"@link ReferenceCounter","labels":{"default":["negative"]}}
{"sentences":"@param key Key to put in reference map","labels":{"default":["negative"]}}
{"sentences":"   * @return Referenced instance","labels":{"default":["negative"]}}
{"sentences":"   * @param key Key to remove the reference.","labels":{"default":["negative"]}}
{"sentences":"   * @return","labels":{"default":["negative"]}}
{"sentences":"   * Interface for the reference count holder","labels":{"default":["positive"]}}
{"sentences":"   * Clear the contents","labels":{"default":["positive"]}}
{"sentences":"   * Get the number of unique elements","labels":{"default":["positive"]}}
{"sentences":"   * Get the reference count for the key","labels":{"default":["positive"]}}
{"sentences":"   * Get entries in the reference Map.","labels":{"default":["positive"]}}
{"sentences":"*\n   * Delete the reference. Decrease the reference count for the instance, if\n   * any. On all references removal delete the instance from the map.","labels":{"default":["positive"]}}
{"sentences":"Add the reference. If the instance already present, just increase the\n   * reference count.","labels":{"default":["positive"]}}
{"sentences":"Class for de-duplication of instances. <br>\n * Hold the references count to a single instance. If there are no references\n * then the entry will be removed.<br>","labels":{"default":["positive"]}}
{"sentences":"Type E should implement {@link ReferenceCounter}<br>","labels":{"default":["negative"]}}
{"sentences":" * Note: This class is NOT thread-safe.","labels":{"default":["negative"]}}
{"sentences":" Contributors:\n *     IBM Rational Software - Initial API and implementation\n *     Yuan Zhang / Beth Tibbitts (IBM Research)\n *     Sergey Prigogin (Google)","labels":{"default":["negative"]}}
{"sentences":"@author jcamelon","labels":{"default":["negative"]}}
{"sentences":"// Contributions By Racks are\n    // Rack1   175       \n    // Rack2   275       \n    // Rack3   150       \n    // So, Rack2 hosts, host4 and host 3 should be returned\n    // even if their individual contribution is not the highest","labels":{"default":["negative"]}}
{"sentences":"    // Now Create the blocks without topology information","labels":{"default":["positive"]}}
{"sentences":"  // host1 makes the highest contribution among all hosts\n    // So, that should be returned before others","labels":{"default":["negative"]}}
{"sentences":"@link IdMappingServiceProvider","labels":{"default":["negative"]}}
{"sentences":"\n * A simple shell-based implementation of {@link IdMappingServiceProvider} \n * Map id to user name or group name. It does update every 15 minutes. Only a\n * single instance of this class is expected to be on the server.","labels":{"default":["positive"]}}
{"sentences":"The maps are incrementally updated as described below:\n *   1. Initialize the maps as empty. \n *   2. Incrementally update the maps\n *      - When ShellBasedIdMapping is requested for user or group name given \n *        an ID, or for ID given a user or group name, do look up in the map\n *        first, if it doesn't exist, find the corresponding entry with shell\n *        command, and insert the entry to the maps.\n *      - When group ID is requested for a given group name, and if the\n *        group name is numerical, the full group map is loaded. Because we\n *        don't have a good way to find the entry for a numerical group name,\n *        loading the full map helps to get in all entries.\n *   3. Periodically refresh the maps for both user and group, e.g,\n *      do step 1.","labels":{"default":["negative"]}}
{"sentences":"Note: for testing purpose, step 1 may initial the maps with full mapping\n *   when using constructor","labels":{"default":["negative"]}}
{"sentences":"@link ShellBasedIdMapping#ShellBasedIdMapping(Configuration, boolean)","labels":{"default":["negative"]}}
{"sentences":"  /** Shell commands to get users and groups */","labels":{"default":["positive"]}}
{"sentences":"// Last time the static map was modified, measured time difference in\n  // milliseconds since midnight, January 1, 1970 UTC","labels":{"default":["positive"]}}
{"sentences":"  // Used for parsing the static mapping file.","labels":{"default":["positive"]}}
{"sentences":"  // Maps for id to name map. Guarded by this object monitor lock","labels":{"default":["positive"]}}
{"sentences":"Last time maps were updated","labels":{"default":["positive"]}}
{"sentences":"Constructor","labels":{"default":["positive"]}}
{"sentences":"@param conf the configuration","labels":{"default":["negative"]}}
{"sentences":" @param constructFullMapAtInit initialize the maps with full mapping when\n   *        true, otherwise initialize the maps to empty. This parameter is\n   *        intended for testing only, its default is false.","labels":{"default":["negative"]}}
{"sentences":"    // Minimal interval is 1 minute","labels":{"default":["positive"]}}
{"sentences":" Constructor\n   * initialize user and group maps to empty","labels":{"default":["positive"]}}
{"sentences":"   * @param conf the configuration","labels":{"default":["negative"]}}
{"sentences":"  // If can't update the maps, will keep using the old ones","labels":{"default":["negative"]}}
{"sentences":"uid and gid are defined as uint32 in linux. Some systems create\n   * (intended or unintended) <nfsnobody, 4294967294> kind of <name,Id>\n   * mapping, where 4294967294 is 2**32-2 as unsigned int32. As an example,\n   *   https://bugzilla.redhat.com/show_bug.cgi?id=511876.","labels":{"default":["positive"]}}
{"sentences":"Because user or group id are treated as Integer (signed integer or int32)\n   * here, the number 4294967294 is out of range. The solution is to convert\n   * uint32 to int32, so to map the out-of-range ID to the negative side of\n   * Integer, e.g. 4294967294 maps to -2 and 4294967295 maps to -1.","labels":{"default":["negative"]}}
{"sentences":"Get the list of users or groups returned by the specified command,\n   * and save them in the corresponding map.","labels":{"default":["positive"]}}
{"sentences":"        // HDFS can't differentiate duplicate names with simple authentication","labels":{"default":["positive"]}}
{"sentences":"            // silently ignore equivalent entries","labels":{"default":["positive"]}}
{"sentences":"    // only got here if we didn't return false","labels":{"default":["positive"]}}
{"sentences":"\n    // if the static mapping file\n    //   - was modified after last update, load the map again;\n    //   - did not exist but was added since last update, load the map;\n    //   - existed before but deleted since last update, clear the map\n    //","labels":{"default":["negative"]}}
{"sentences":"// check modification time, reload the file if the last modification\n      // time changed since prior load.","labels":{"default":["positive"]}}
{"sentences":"// print the following log at initialization or when the static\n        // mapping file was deleted after prior load","labels":{"default":["positive"]}}
{"sentences":"Refresh static map, and reset the other maps to empty.\n   * For testing code, a full map may be re-constructed here when the object\n   * was created with constructFullMapAtInit being set to true.","labels":{"default":["positive"]}}
{"sentences":"// set constructFullMapAtInit to false to allow testing code to\n      // do incremental update to maps after initial construction","labels":{"default":["positive"]}}
{"sentences":"search for id with given name, return \"<name>:<id>\"\n  // return\n  //     getent group <name> | cut -d: -f1,3\n  // OR\n  //     id -u <name> | awk '{print \"<name>:\"$1 }'","labels":{"default":["positive"]}}
{"sentences":"  // search for name with given id, return \"<name>:<id>\"","labels":{"default":["positive"]}}
{"sentences":"\"dscl . -read /Users/<name> | grep UniqueID\" returns \"UniqueId: <id>\",\n  // \"dscl . -read /Groups/<name> | grep PrimaryGroupID\" returns \"PrimaryGoupID: <id>\"\n  // The following method returns a command that uses awk to process the result,\n  // of these commands, and returns \"<name> <id>\", to simulate one entry returned by \n  // MAC_GET_ALL_USERS_CMD or MAC_GET_ALL_GROUPS_CMD.\n  // Specificially, this method returns:\n  // id -u <name> | awk '{print \"<name>:\"$1 }'\n  // OR\n  // dscl . -read /Groups/<name> | grep PrimaryGroupID | awk '($1 == \"PrimaryGroupID:\") { print \"<name> \" $2 }'","labels":{"default":["positive"]}}
{"sentences":" \"dscl . -search /Users UniqueID <id>\" returns \n  //    <name> UniqueID = (\n  //      <id>\n  //    )\n  // \"dscl . -search /Groups PrimaryGroupID <id>\" returns\n  //    <name> PrimaryGroupID = (\n  //      <id>\n  //    )\n  // The following method returns a command that uses sed to process the\n  // the result and returns \"<name> <id>\" to simulate one entry returned\n  // by MAC_GET_ALL_USERS_CMD or MAC_GET_ALL_GROUPS_CMD.\n  // For certain negative id case like nfsnobody, the <id> is quoted as\n  // \"<id>\", added one sed section to remove the quote.\n  // Specifically, the method returns:\n  // dscl . -search /Users UniqueID <id> | sed 'N;s/\\\\n//g;N;s/\\\\n//g' | sed 's/UniqueID =//g' | sed 's/)//g' | sed 's/\\\"//g'\n  // OR\n  // dscl . -search /Groups PrimaryGroupID <id> | sed 'N;s/\\\\n//g;N;s/\\\\n//g' | sed 's/PrimaryGroupID =//g' | sed 's/)//g' | sed 's/\\\"//g'","labels":{"default":["positive"]}}
{"sentences":"        // Skip entirely empty and comment lines.","labels":{"default":["positive"]}}
{"sentences":"\n        // We know the line is fine to parse without error checking like this\n        // since it matched the regex above.","labels":{"default":["positive"]}}
{"sentences":"  // When can't map user, return user name's string hashcode","labels":{"default":["positive"]}}
{"sentences":"  // When can't map group, return group name's string hashcode","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Wind River Systems - initial API and implementation\n *     Winnie Lai (Texas Instruments) - Individual Element Number Format in editing","labels":{"default":["negative"]}}
{"sentences":" @since 2.0","labels":{"default":["negative"]}}
{"sentences":"     *  Used to make sure we are dealing with a valid register.","labels":{"default":["positive"]}}
{"sentences":"If we're in the column value, modify the register data.\n         * Otherwise, call the super-class to edit the watch expression.","labels":{"default":["negative"]}}
{"sentences":"             *  Make sure we are are dealing with a valid set of information.","labels":{"default":["positive"]}}
{"sentences":"             *  We need to read the register in order to get the attributes.","labels":{"default":["positive"]}}
{"sentences":"If we're in the column value, modify the register data.\n         * Otherwise, call the super-class to edit the watch expression.","labels":{"default":["negative"]}}
{"sentences":"             *  Make sure we are working on the editable areas.","labels":{"default":["positive"]}}
{"sentences":"                 *  We let the Model provider supply the current format.","labels":{"default":["positive"]}}
{"sentences":"This is a COMBO BOX. So we need to take the value of the bitfield and\n                 *  compare it to the associated mnemonic values to see which mnemonic is\n                 *  representing the current value. At this point the Bitfield Model data\n                 *  has already been established since the \"canModify()\" method is called\n                 *  first by the flexible hierarchy proxies.","labels":{"default":["positive"]}}
{"sentences":"If we're in the column value, modify the register data.\n         * Otherwise, call the super-class to edit the watch expression.","labels":{"default":["negative"]}}
{"sentences":"                     *  We let the Model provider supply the current format.","labels":{"default":["positive"]}}
{"sentences":"                     *  Get the integer value corresponding to the selected entry.","labels":{"default":["positive"]}}
{"sentences":"                     *  Write the bit field using the selected mnemonic.","labels":{"default":["positive"]}}
{"sentences":"Basic sanity tests for the entire package.","labels":{"default":["positive"]}}
{"sentences":"@author Ben Yu","labels":{"default":["negative"]}}
{"sentences":"@author Chris Povirk","labels":{"default":["negative"]}}
{"sentences":"@link LinkedListMultimap","labels":{"default":["negative"]}}
{"sentences":" This class implements the GWT serialization of","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     QNX - Initial API and implementation\n *     Andrew Ferguson (Symbian)\n *     Markus Schorn (Wind River Systems)","labels":{"default":["negative"]}}
{"sentences":"@author Doug Schaefer","labels":{"default":["negative"]}}
{"sentences":"This is for strings that take up more than on chunk.\n * The string will need to be broken up into sections and then\n * reassembled when necessary.","labels":{"default":["positive"]}}
{"sentences":"\t// Additional fields of first record.","labels":{"default":["positive"]}}
{"sentences":"// Must be first to match ShortString.","labels":{"default":["negative"]}}
{"sentences":"\t// Additional fields of subsequent records.","labels":{"default":["positive"]}}
{"sentences":"\t\t// Write the first record.","labels":{"default":["positive"]}}
{"sentences":"\t\t// Write the subsequent records.","labels":{"default":["positive"]}}
{"sentences":"\t\t// Write the last record.","labels":{"default":["positive"]}}
{"sentences":"\t\t// First record","labels":{"default":["positive"]}}
{"sentences":"\t\t// Other records","labels":{"default":["positive"]}}
{"sentences":"\t\t// Middle records.","labels":{"default":["positive"]}}
{"sentences":"\t\t// Last record.","labels":{"default":["positive"]}}
{"sentences":"@link String#hashCode()","labels":{"default":["negative"]}}
{"sentences":"Compatible with {@link String#hashCode()}","labels":{"default":["positive"]}}
{"sentences":"Makes sure <code>Configuration.getInstances()</code> returns\n   * instances of the required type.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     QNX Software Systems - initial API and implementation\n *     Andrew Ferguson (Symbian)\n *     Markus Schorn (Wind River Systems)","labels":{"default":["negative"]}}
{"sentences":"@link Database","labels":{"default":["negative"]}}
{"sentences":"Tests for the {@link Database} class.","labels":{"default":["positive"]}}
{"sentences":"// This constant can be used to run the test with very large databases.\n\t// Try, for example, setting it to Integer.MAX_VALUE * 7L;","labels":{"default":["positive"]}}
{"sentences":"\t\t// Allocate all database chunks up to TEST_OFFSET.","labels":{"default":["positive"]}}
{"sentences":"\t\t\t/* check opening a readonly file for rw access fails */","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t// we expect to get a failure here","labels":{"default":["positive"]}}
{"sentences":"\t\t\t/* check opening a readonly file for read access does not fail */","labels":{"default":["positive"]}}
{"sentences":"// this may be pointless on some platforms","labels":{"default":["positive"]}}
{"sentences":"// We only match String.compareToIgnoreCase behavior within this limited range.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     William R. Swanson (Tilera Corporation) - initial API and implementation\n *     Marc Dumais (Ericsson) - Add CPU/core load information to the multicore visualizer (Bug 396268)\n *     Marc Dumais (Ericsson) -  Bug 405390","labels":{"default":["negative"]}}
{"sentences":"Represents single CPU.","labels":{"default":["positive"]}}
{"sentences":"\t/** IVisualizerModelObject version of compareTO() */","labels":{"default":["positive"]}}
{"sentences":"\t/** Compares this item to the specified item. */","labels":{"default":["positive"]}}
{"sentences":"\t/** Sorts cores, cpus, etc. by IDs. */","labels":{"default":["positive"]}}
{"sentences":"\t/** Removes core. */","labels":{"default":["positive"]}}
{"sentences":"\t/** Adds core. */","labels":{"default":["positive"]}}
{"sentences":"\t/** Gets core with specified ID. */","labels":{"default":["positive"]}}
{"sentences":"\t/** Gets cores. */","labels":{"default":["positive"]}}
{"sentences":"\t/** Gets number of cores. */","labels":{"default":["positive"]}}
{"sentences":"\t/** get the highest recorded load value for this CPU*/","labels":{"default":["positive"]}}
{"sentences":"\t/** Gets the load value associated to this CPU */","labels":{"default":["positive"]}}
{"sentences":"\t/** Sets the load object associated to this CPU */","labels":{"default":["positive"]}}
{"sentences":"\t/** CPU has no parent  - always returns null */","labels":{"default":["positive"]}}
{"sentences":"\t/** Gets ID of this CPU. */","labels":{"default":["positive"]}}
{"sentences":"\t/** Returns string representation. */","labels":{"default":["positive"]}}
{"sentences":"\t/** Dispose method */","labels":{"default":["positive"]}}
{"sentences":"Constructor","labels":{"default":["positive"]}}
{"sentences":"\t/** List of cores */","labels":{"default":["positive"]}}
{"sentences":"\t/** Load object associated to this cpu */","labels":{"default":["positive"]}}
{"sentences":"\t/** ID of this core. */","labels":{"default":["positive"]}}
{"sentences":"\t/** Lookup table for cores. */","labels":{"default":["positive"]}}
{"sentences":"    // disallow snapshot on dir","labels":{"default":["positive"]}}
{"sentences":"    // allow snapshot on dir","labels":{"default":["positive"]}}
{"sentences":"   * Test FileStatus of snapshot file before/after rename","labels":{"default":["positive"]}}
{"sentences":"    // Create snapshot for sub1","labels":{"default":["positive"]}}
{"sentences":"    // Rename the snapshot","labels":{"default":["positive"]}}
{"sentences":"    // <sub1>/.snapshot/s1/file1 should no longer exist","labels":{"default":["negative"]}}
{"sentences":"    // Instead, <sub1>/.snapshot/s2/file1 should exist","labels":{"default":["negative"]}}
{"sentences":"    // FileStatus of the snapshot should not change except the path","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Red Hat Incorporated - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"// Look for Automake conditionals which optionally\n\t// activate or disable a Makefile rule command.","labels":{"default":["positive"]}}
{"sentences":"/** That what may be configured. */","labels":{"default":["negative"]}}
{"sentences":"@link JobConf","labels":{"default":["negative"]}}
{"sentences":" @param job the configuration","labels":{"default":["negative"]}}
{"sentences":"  /** Initializes a new instance from a {@link JobConf}.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Wind River Systems - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":" * A Signals view based on flexible hierarchy.","labels":{"default":["positive"]}}
{"sentences":"Viewer input requester used to update the viewer once the viewer input has been\n\t * resolved.","labels":{"default":["positive"]}}
{"sentences":"@return the model presentation to be used for this view","labels":{"default":["negative"]}}
{"sentences":"Sets the input to the viewer","labels":{"default":["positive"]}}
{"sentences":"\t * @param context the object context","labels":{"default":["negative"]}}
{"sentences":"\t * @return context id","labels":{"default":["negative"]}}
{"sentences":"\t * @return SWT style","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.debug.internal.ui.viewers.model.provisional.IViewerUpdateListener#viewerUpdatesBegin()","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.debug.internal.ui.viewers.model.provisional.IViewerUpdateListener#viewerUpdatesComplete()","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.debug.internal.ui.viewers.model.provisional.IViewerUpdateListener#updateStarted(org.eclipse.debug.internal.ui.viewers.model.provisional.IViewerUpdate)","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.debug.internal.ui.viewers.model.provisional.IViewerUpdateListener#updateComplete(org.eclipse.debug.internal.ui.viewers.model.provisional.IViewerUpdate)","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.debug.ui.contexts.IDebugContextListener#debugContextChanged(org.eclipse.debug.ui.contexts.DebugContextEvent)","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.debug.internal.ui.viewers.model.provisional.IModelChangedListener#modelChanged(org.eclipse.debug.internal.ui.viewers.model.provisional.IModelDelta, org.eclipse.debug.internal.ui.viewers.model.provisional.IModelProxy)","labels":{"default":["negative"]}}
{"sentences":"Updates actions and sets the viewer input when a context is activated.","labels":{"default":["positive"]}}
{"sentences":"\t * Returns the style bits for the viewer.","labels":{"default":["positive"]}}
{"sentences":"\t * Returns the presentation context id for this view.","labels":{"default":["positive"]}}
{"sentences":"\t * @param selection","labels":{"default":["negative"]}}
{"sentences":" Contributors:\n * IBM - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":" * This interface represents a C++ conversion member function.","labels":{"default":["positive"]}}
{"sentences":" * @noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":" * @noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"\t * @param typeId","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.1","labels":{"default":["negative"]}}
{"sentences":"\t * @since 5.3","labels":{"default":["negative"]}}
{"sentences":"Returns the IASTTypeId for the ICPPASTConversionName.\n\t * \n\t * i.e. getTypeId() on operator int(); would return the IASTTypeId for \"int\"","labels":{"default":["positive"]}}
{"sentences":"\t * Sets the IASTTypeId for the ICPPASTConversionName.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     IBM Corporation - initial API and implementation\n *     QNX Software System\n *     Anton Leherbauer (Wind River Systems)","labels":{"default":["negative"]}}
{"sentences":" * CDT color manager.","labels":{"default":["positive"]}}
{"sentences":"Flag which tells if the colors are automatically disposed when\n\t * the current display gets disposed.","labels":{"default":["positive"]}}
{"sentences":"Creates a new CDT color manager which automatically\n\t * disposes the allocated colors when the current display\n\t * gets disposed.","labels":{"default":["positive"]}}
{"sentences":"\t * Creates a new CDT color manager.","labels":{"default":["positive"]}}
{"sentences":"@param autoDisposeOnDisplayDispose \tif <code>true</code>  the color manager\n\t * automatically disposes all managed colors when the current display gets disposed\n\t * and all calls to {@link org.eclipse.jface.text.source.ISharedTextColors#dispose()} are\n\t * ignored.\n\t *","labels":{"default":["negative"]}}
{"sentences":"\t * @since 4.0","labels":{"default":["negative"]}}
{"sentences":"@link org.eclipse.jface.text.source.ISharedTextColors#dispose()","labels":{"default":["negative"]}}
{"sentences":"@link INodeDirectory","labels":{"default":["negative"]}}
{"sentences":"  /** Verify if the storagespace quota is violated after applying delta. */","labels":{"default":["positive"]}}
{"sentences":"  /** Verify if the namespace quota is violated after applying delta. */","labels":{"default":["positive"]}}
{"sentences":"  /** @return the namespace and storagespace and typespace consumed. */","labels":{"default":["negative"]}}
{"sentences":"@param namespace size of the directory to be set\n   * @param storagespace storage space take by all the nodes under this directory\n   * @param typespaces counters of storage type usage","labels":{"default":["negative"]}}
{"sentences":"   * @param delta the change of the namespace/space/type usage","labels":{"default":["negative"]}}
{"sentences":"   * @param tsQuotas type space counts for all storage types supporting quota","labels":{"default":["negative"]}}
{"sentences":"   * @param counts counts to be added with current quota usage","labels":{"default":["negative"]}}
{"sentences":"   * @return counts that have been added with the current qutoa usage","labels":{"default":["negative"]}}
{"sentences":"  /** @return the quota set or -1 if it is not set. */","labels":{"default":["negative"]}}
{"sentences":"   * @param nsQuota Namespace quota to be set","labels":{"default":["negative"]}}
{"sentences":"   * @param ssQuota Storagespace quota to be set","labels":{"default":["negative"]}}
{"sentences":"@param type Storage type of the storage space quota to be set.\n   *             To set storagespace/namespace quota, type must be null.","labels":{"default":["negative"]}}
{"sentences":" * Quota feature for {@link INodeDirectory}.","labels":{"default":["positive"]}}
{"sentences":"  /** Set this directory's quota","labels":{"default":["positive"]}}
{"sentences":"  /** Set storage type quota in a batch. (Only used by FSImage load)","labels":{"default":["positive"]}}
{"sentences":"   * Add current quota usage to counts and return the updated counts","labels":{"default":["positive"]}}
{"sentences":"    // Check only when the content has not changed in the middle.","labels":{"default":["negative"]}}
{"sentences":" // The following steps are important:\n      // check quotas in this inode and all ancestors before changing counts\n      // so that no change is made if there is any quota violation.\n      // (1) verify quota in this inode","labels":{"default":["negative"]}}
{"sentences":"      // (2) verify quota and then add count in ancestors","labels":{"default":["positive"]}}
{"sentences":"      // (3) add count in this inode","labels":{"default":["positive"]}}
{"sentences":"  /** Update the space/namespace/type usage of the tree","labels":{"default":["positive"]}}
{"sentences":"Sets namespace and storagespace take by the directory rooted\n   * at this INode. This should be used carefully. It does not check \n   * for quota violations.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Red Hat - Initial Contribution","labels":{"default":["negative"]}}
{"sentences":" @see\n\t * org.eclipse.ui.IWorkbenchPreferencePage#init(org.eclipse.ui.IWorkbench)","labels":{"default":["negative"]}}
{"sentences":"Creates the field editors. Field editors are abstractions of the common\n\t * GUI blocks needed to manipulate various types of preferences. Each field\n\t * editor knows how to save and restore itself.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Alena Laskavaia - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":" * Application to support headless build","labels":{"default":["positive"]}}
{"sentences":" * @noextend This class is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":" * @noinstantiate This class is not intended to be instantiated by clients.","labels":{"default":["negative"]}}
{"sentences":"\t * @param string","labels":{"default":["negative"]}}
{"sentences":"\t * @param args","labels":{"default":["negative"]}}
{"sentences":"    // Killed jobs might not have counters","labels":{"default":["positive"]}}
{"sentences":"@link PrintStream","labels":{"default":["negative"]}}
{"sentences":"@link PrintStream","labels":{"default":["negative"]}}
{"sentences":"   * @param ps the {@link PrintStream} to print to","labels":{"default":["negative"]}}
{"sentences":" Print out the Job History to the given {@link PrintStream} in a\n   * human-readable format.","labels":{"default":["positive"]}}
{"sentences":"@link HistoryViewer","labels":{"default":["negative"]}}
{"sentences":" Used by the {@link HistoryViewer} to print job history in a human-readable\n * format.","labels":{"default":["positive"]}}
{"sentences":"@author crazybob@google.com (Bob Lee)","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Markus Schorn - initial API and implementation\n *     Andrew Ferguson (Symbian)\n *     Sergey Prigogin (Google)","labels":{"default":["negative"]}}
{"sentences":"Indexer timeout used by tests. To avoid this timeout expiring during debugging add\n\t * -Dindexer.timeout=some_large_number to VM arguments of the test launch configuration.","labels":{"default":["positive"]}}
{"sentences":" The GCC version to emulate when running tests.\n\t * We emulate the latest version whose extensions we support.","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t// Logged by the resources plugin.","labels":{"default":["positive"]}}
{"sentences":"// Iff we don't run as a JUnit Plugin Test.","labels":{"default":["negative"]}}
{"sentences":"The last value passed to this method in the body of a testXXX method\n     * will be used to determine whether or not the presence of non-OK status objects\n     * in the log should fail the test.","labels":{"default":["positive"]}}
{"sentences":"If the logged number of non-OK status objects\n     * differs from the last value passed, the test is failed. If this method is not called\n     * at all, the expected number defaults to zero.","labels":{"default":["negative"]}}
{"sentences":"@param count the expected number of logged error and warning messages","labels":{"default":["negative"]}}
{"sentences":" Some test steps need synchronizing against a CModel event. This class\n     * is a very basic means of doing that.","labels":{"default":["positive"]}}
{"sentences":"\t\t\t// Only respond to post change events","labels":{"default":["positive"]}}
{"sentences":"\t// Assertion helpers","labels":{"default":["positive"]}}
{"sentences":" * @author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":"     * @see com.vaadin.tests.components.AbstractTestUI#getTicketNumber()","labels":{"default":["negative"]}}
{"sentences":"     * @see com.vaadin.tests.components.AbstractTestUI#getTestDescription()","labels":{"default":["negative"]}}
{"sentences":"@see com.vaadin.tests.components.AbstractTestUI#setup(com.vaadin.server.\n     * VaadinRequest)","labels":{"default":["negative"]}}
{"sentences":" @since","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"     * An empty array of strings indicating that a project doesn't have any prerequesite projects.","labels":{"default":["positive"]}}
{"sentences":"\t * @see org.eclipse.cdt.internal.core.model.CModelOperation#executeOperation()","labels":{"default":["negative"]}}
{"sentences":"//\tproject reference updated - may throw an exception if unable to write .cdtproject file\n\t\tupdateProjectReferencesIfNecessary();","labels":{"default":["negative"]}}
{"sentences":"// ensure that if changed, the order is consistent","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *   Wind River Systems - Initial API and implementation\n *   James Blackburn (Broadcom Corp.)\n *   Andrew Gvozdev\n *   IBM Corporation","labels":{"default":["negative"]}}
{"sentences":" * @author dschaefer","labels":{"default":["negative"]}}
{"sentences":"@since 8.0","labels":{"default":["negative"]}}
{"sentences":"// now treated as the same!","labels":{"default":["positive"]}}
{"sentences":"// Add variables from build info","labels":{"default":["positive"]}}
{"sentences":"// fallback to CWD","labels":{"default":["positive"]}}
{"sentences":"// populate containing scope, so that it will not be affected by the alternative branches.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Markus Schorn - Initial API and implementation\n *     Sergey Prigogin (Google)\n *     Thomas Corbat (IFS)","labels":{"default":["negative"]}}
{"sentences":"Handles ambiguities when parsing declarators.\n * <br>\n * Example: void f(int (D));  // is D a type?","labels":{"default":["positive"]}}
{"sentences":"@since 5.0.1","labels":{"default":["negative"]}}
{"sentences":"Utilities used across test cases","labels":{"default":["positive"]}}
{"sentences":"Get the test URI","labels":{"default":["positive"]}}
{"sentences":"Assert that a property in the property set matches the expected value","labels":{"default":["positive"]}}
{"sentences":"Write a file and read it in, validating the result. Optional flags control\n   * whether file overwrite operations should be enabled, and whether the\n   * file should be deleted afterwards.","labels":{"default":["positive"]}}
{"sentences":"Write a file.\n   * Optional flags control\n   * whether file overwrite operations should be enabled","labels":{"default":["positive"]}}
{"sentences":"   * Read the file and convert to a byte dataset","labels":{"default":["positive"]}}
{"sentences":"   * Assert that the array src[0..len] and dest[] are equal","labels":{"default":["positive"]}}
{"sentences":" the range either side of the first error to print\n      // this is a purely arbitrary number, to aid user debugging","labels":{"default":["positive"]}}
{"sentences":"Convert a byte to a character for printing. If the\n   * byte value is &lt; 32 -and hence unprintable- the byte is\n   * returned as a two digit hex value","labels":{"default":["positive"]}}
{"sentences":"downgrade a failure to a message and a warning, then an\n   * exception for the Junit test runner to mark as failed","labels":{"default":["positive"]}}
{"sentences":"report an overridden test as unsupported","labels":{"default":["positive"]}}
{"sentences":"report a test has been skipped for some reason","labels":{"default":["positive"]}}
{"sentences":"Make an assertion about the length of a file","labels":{"default":["positive"]}}
{"sentences":"Assert that a path refers to a directory","labels":{"default":["positive"]}}
{"sentences":"Assert that a path refers to a directory","labels":{"default":["positive"]}}
{"sentences":"Write the text to a file, returning the converted byte array\n   * for use in validating the round trip","labels":{"default":["positive"]}}
{"sentences":"Touch a file: fails if it is already there","labels":{"default":["positive"]}}
{"sentences":"Read in \"length\" bytes, convert to an ascii string","labels":{"default":["positive"]}}
{"sentences":"Assert that a file exists and whose {@link FileStatus} entry\n   * declares that this is a file and not a symlink or directory.","labels":{"default":["positive"]}}
{"sentences":"\n   * Create a dataset for use in the tests; all data is in the range\n   * base to (base+modulo-1) inclusive","labels":{"default":["positive"]}}
{"sentences":"Assert that a path exists -but make no assertions as to the\n   * type of that entry","labels":{"default":["positive"]}}
{"sentences":"//failure, report it","labels":{"default":["positive"]}}
{"sentences":"Assert that a path does not exist","labels":{"default":["positive"]}}
{"sentences":"//this is expected","labels":{"default":["positive"]}}
{"sentences":"Assert that a FileSystem.listStatus on a dir finds the subdir/child entry","labels":{"default":["positive"]}}
{"sentences":"   * @param conf configuration","labels":{"default":["negative"]}}
{"sentences":"   * @param props property set","labels":{"default":["negative"]}}
{"sentences":"   * @param key property name","labels":{"default":["negative"]}}
{"sentences":"   * @param expected expected value. If null, the property must not be in the set","labels":{"default":["negative"]}}
{"sentences":"   * @param fs filesystem","labels":{"default":["negative"]}}
{"sentences":"   * @param path path to write to","labels":{"default":["negative"]}}
{"sentences":"   * @param len length of data","labels":{"default":["negative"]}}
{"sentences":"   * @param overwrite should the create option allow overwrites?","labels":{"default":["negative"]}}
{"sentences":"@param delete should the file be deleted afterwards? -with a verification\n   * that it worked. Deletion is not attempted if an assertion has failed\n   * earlier -it is not in a <code>finally{}</code> block.","labels":{"default":["negative"]}}
{"sentences":"   * @param fs filesystem","labels":{"default":["negative"]}}
{"sentences":"   * @param path path to write to","labels":{"default":["negative"]}}
{"sentences":"   * @param len length of data","labels":{"default":["negative"]}}
{"sentences":"   * @param overwrite should the create option allow overwrites?","labels":{"default":["negative"]}}
{"sentences":"   * @param fs filesystem","labels":{"default":["negative"]}}
{"sentences":"   * @param path path to read from","labels":{"default":["negative"]}}
{"sentences":"   * @param len length of data to read","labels":{"default":["negative"]}}
{"sentences":"   * @return the bytes","labels":{"default":["negative"]}}
{"sentences":"   * @param len length of bytes to compare","labels":{"default":["negative"]}}
{"sentences":"   * @param src source data","labels":{"default":["negative"]}}
{"sentences":"   * @param dest actual","labels":{"default":["negative"]}}
{"sentences":"   * @param b byte","labels":{"default":["negative"]}}
{"sentences":"   * @return the printable character string","labels":{"default":["negative"]}}
{"sentences":"   * @param message text message","labels":{"default":["negative"]}}
{"sentences":"   * @param failure what failed","labels":{"default":["negative"]}}
{"sentences":"   * @param message message to use in the text","labels":{"default":["negative"]}}
{"sentences":"   * @param message message to use in the text","labels":{"default":["negative"]}}
{"sentences":"   * @param fs filesystem","labels":{"default":["negative"]}}
{"sentences":"   * @param path path of the file","labels":{"default":["negative"]}}
{"sentences":"   * @param expected expected length","labels":{"default":["negative"]}}
{"sentences":"   * @param fs filesystem","labels":{"default":["negative"]}}
{"sentences":"   * @param path path of the directory","labels":{"default":["negative"]}}
{"sentences":"   * @param fileStatus stats to check","labels":{"default":["negative"]}}
{"sentences":"   * @param fs filesystem","labels":{"default":["negative"]}}
{"sentences":"   * @param path path of file","labels":{"default":["negative"]}}
{"sentences":"   * @param overwrite should the operation overwrite any existing file?","labels":{"default":["negative"]}}
{"sentences":"   * @param text text to write","labels":{"default":["negative"]}}
{"sentences":"   * @return the read bytes","labels":{"default":["negative"]}}
{"sentences":"   * @param fs filesystem","labels":{"default":["negative"]}}
{"sentences":"   * @param path path","labels":{"default":["negative"]}}
{"sentences":"   * @param fs filesystem","labels":{"default":["negative"]}}
{"sentences":"   * @param path path to read","labels":{"default":["negative"]}}
{"sentences":"   * @param length #of bytes to read.","labels":{"default":["negative"]}}
{"sentences":"   * @return the bytes read and converted to a string","labels":{"default":["negative"]}}
{"sentences":"   * @param fileSystem filesystem to resolve path against","labels":{"default":["negative"]}}
{"sentences":"   * @param filename name of the file","labels":{"default":["negative"]}}
{"sentences":"   * @param len length of data","labels":{"default":["negative"]}}
{"sentences":"   * @param base base of the data","labels":{"default":["negative"]}}
{"sentences":"   * @return the newly generated dataset","labels":{"default":["negative"]}}
{"sentences":"   * @param modulo the modulo","labels":{"default":["negative"]}}
{"sentences":"   * @param fileSystem filesystem to examine","labels":{"default":["negative"]}}
{"sentences":"   * @param message message to include in the assertion failure message","labels":{"default":["negative"]}}
{"sentences":"   * @param path path in the filesystem","labels":{"default":["negative"]}}
{"sentences":"   * @param fileSystem filesystem to examine","labels":{"default":["negative"]}}
{"sentences":"   * @param message message to include in the assertion failure message","labels":{"default":["negative"]}}
{"sentences":"   * @param path path in the filesystem","labels":{"default":["negative"]}}
{"sentences":"   * @param fs filesystem","labels":{"default":["negative"]}}
{"sentences":"   * @param dir directory to scan","labels":{"default":["negative"]}}
{"sentences":"   * @param subdir full path to look for","labels":{"default":["negative"]}}
{"sentences":"If there is a mismatch between what was written and what was expected,\n   * a small range of bytes either side of the first error are logged to aid\n   * diagnosing what problem occurred -whether it was a previous file\n   * or a corrupting of the current file. This assumes that two\n   * sequential runs to the same path use datasets with different character\n   * moduli.","labels":{"default":["negative"]}}
{"sentences":"@since 7.4","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":"/**\n * Shared state for Grid headers and footers.\n * \n * @since 7.4\n * @author Vaadin Ltd\n */","labels":{"default":["positive"]}}
{"sentences":"/**\n         * Map from column id set to cell state for merged state.\n         */","labels":{"default":["positive"]}}
{"sentences":"/**\n         * The style name for the row. Null if none.\n         */","labels":{"default":["positive"]}}
{"sentences":"@link AbstractEmbedded","labels":{"default":["negative"]}}
{"sentences":"@link Embedded","labels":{"default":["negative"]}}
{"sentences":"@since 7.4","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":"Tests declarative support for implementations of {@link AbstractEmbedded} and\n * {@link Embedded}.","labels":{"default":["positive"]}}
{"sentences":"The RawLocalFs implementation of AbstractFileSystem.\n *  This impl delegates to the old FileSystem","labels":{"default":["positive"]}}
{"sentences":"/*Evolving for a release,to be changed to Stable */","labels":{"default":["positive"]}}
{"sentences":"This constructor has the signature needed by\n   * {@link AbstractFileSystem#createFileSystem(URI, Configuration)}.","labels":{"default":["positive"]}}
{"sentences":"@link AbstractFileSystem#createFileSystem(URI, Configuration)","labels":{"default":["negative"]}}
{"sentences":"   * @param theUri which must be that of localFs","labels":{"default":["negative"]}}
{"sentences":"   * @param conf","labels":{"default":["negative"]}}
{"sentences":"// No default port for file:///","labels":{"default":["positive"]}}
{"sentences":"// Different local file systems have different validation rules. Skip\n    // validation here and just let the OS handle it. This is consistent with\n    // RawLocalFileSystem.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":" * @noextend This class is not intended to be subclassed by clients.","labels":{"default":["negative"]}}
{"sentences":" * @noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":" * .DELETE_ON_ERROR'\n *  If `.DELETE_ON_ERROR' is mentioned as a target anywhere in the\n *  makefile, then `make' will delete the target of a rule if it has\n *  changed and its commands exit with a nonzero exit status, just as\n *  it does when it receives a signal.","labels":{"default":["negative"]}}
{"sentences":"The exception that happens when you ask to create a file that already\n * is being created, but is not closed yet.","labels":{"default":["positive"]}}
{"sentences":" * Interface that defines how we can grow the size of a hash map when it is over a threshold.","labels":{"default":["positive"]}}
{"sentences":"   * Double the size of the hash map every time.","labels":{"default":["positive"]}}
{"sentences":"      // Guard against overflow","labels":{"default":["positive"]}}
{"sentences":" * Indicates an exception on the RPC server","labels":{"default":["positive"]}}
{"sentences":"   * Constructs exception with the specified detail message.","labels":{"default":["positive"]}}
{"sentences":"   * Constructs exception with the specified detail message and cause.","labels":{"default":["positive"]}}
{"sentences":"   * get the rpc status corresponding to this exception","labels":{"default":["positive"]}}
{"sentences":"   * get the detailed rpc status corresponding to this exception","labels":{"default":["positive"]}}
{"sentences":"   * @param message message.","labels":{"default":["negative"]}}
{"sentences":"   * @param message detailed message.","labels":{"default":["negative"]}}
{"sentences":"@param cause the cause (can be retried by the {@link #getCause()} method).\n   *          (A <tt>null</tt> value is permitted, and indicates that the cause\n   *          is nonexistent or unknown.)","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n * \t   Sergey Prigogin (Google) - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":" * @noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":" * @noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"\t * Returns the marker type associated to this problem, if it gets persisted into a marker.","labels":{"default":["positive"]}}
{"sentences":"\t * @return the type of the marker which would be associated to the problem.","labels":{"default":["negative"]}}
{"sentences":"@link BiMap","labels":{"default":["negative"]}}
{"sentences":"@link ImmutableCollection","labels":{"default":["negative"]}}
{"sentences":"@link #build","labels":{"default":["negative"]}}
{"sentences":"@link ImmutableBiMap#builder","labels":{"default":["negative"]}}
{"sentences":"@code key","labels":{"default":["negative"]}}
{"sentences":"@code value","labels":{"default":["negative"]}}
{"sentences":"@link #build","labels":{"default":["negative"]}}
{"sentences":"@link #build","labels":{"default":["negative"]}}
{"sentences":"@link #build","labels":{"default":["negative"]}}
{"sentences":"@code map","labels":{"default":["negative"]}}
{"sentences":"@link #build","labels":{"default":["negative"]}}
{"sentences":"@code Builder","labels":{"default":["negative"]}}
{"sentences":"@code map","labels":{"default":["negative"]}}
{"sentences":"@code map","labels":{"default":["negative"]}}
{"sentences":"@code SortedMap","labels":{"default":["negative"]}}
{"sentences":"@code map","labels":{"default":["negative"]}}
{"sentences":"@code ImmutableBiMap","labels":{"default":["negative"]}}
{"sentences":"@code ImmutableBiMap","labels":{"default":["negative"]}}
{"sentences":"Serialized type for all ImmutableBiMap instances. It captures the logical\n   * contents and they are reconstructed using public factory methods. This\n   * ensures that the implementation types remain as implementation details.","labels":{"default":["positive"]}}
{"sentences":"Since the bimap is immutable, ImmutableBiMap doesn't require special logic\n   * for keeping the bimap and its inverse in sync during serialization, the way\n   * AbstractBiMap does.","labels":{"default":["negative"]}}
{"sentences":"   * Guaranteed to throw an exception and leave the bimap unmodified.","labels":{"default":["positive"]}}
{"sentences":"Returns an immutable set of the values in this map. The values are in the\n   * same order as the parameters used to build this map.","labels":{"default":["positive"]}}
{"sentences":"<p>The inverse of an {@code ImmutableBiMap} is another\n   * {@code ImmutableBiMap}.","labels":{"default":["positive"]}}
{"sentences":"\n         * The current implementation will end up using entryArray directly, though it will write\n         * over the (arbitrary, potentially mutable) Entry objects actually stored in entryArray.","labels":{"default":["positive"]}}
{"sentences":"we'll only be using getKey and getValue, which are covariant","labels":{"default":["positive"]}}
{"sentences":" Returns an immutable bimap containing the given entries.","labels":{"default":["positive"]}}
{"sentences":"Returns an immutable bimap containing the same entries as {@code map}. If\n   * {@code map} somehow contains entries with duplicate keys (for example, if\n   * it is a {@code SortedMap} whose comparator is not <i>consistent with\n   * equals</i>), the results of this method are undefined.","labels":{"default":["positive"]}}
{"sentences":"copyOf","labels":{"default":["positive"]}}
{"sentences":"Returns a newly-created immutable bimap.","labels":{"default":["positive"]}}
{"sentences":"build","labels":{"default":["positive"]}}
{"sentences":"Configures this {@code Builder} to order entries by value according to the specified\n     * comparator.","labels":{"default":["positive"]}}
{"sentences":"Adds all of the given entries to the built bimap.  Duplicate keys or\n     * values are not allowed, and will cause {@link #build} to fail.","labels":{"default":["positive"]}}
{"sentences":"Associates all of the given map's keys and values in the built bimap.\n     * Duplicate keys or values are not allowed, and will cause {@link #build}\n     * to fail.","labels":{"default":["positive"]}}
{"sentences":" Adds the given {@code entry} to the bimap.  Duplicate keys or values\n     * are not allowed, and will cause {@link #build} to fail.","labels":{"default":["positive"]}}
{"sentences":"Associates {@code key} with {@code value} in the built bimap. Duplicate\n     * keys or values are not allowed, and will cause {@link #build} to fail.","labels":{"default":["positive"]}}
{"sentences":"Creates a new builder. The returned builder is equivalent to the builder\n     * generated by {@link ImmutableBiMap#builder}.","labels":{"default":["positive"]}}
{"sentences":"A builder for creating immutable bimap instances, especially {@code public\n   * static final} bimaps (\"constant bimaps\"). Example: <pre>   {@code\n   *\n   *   static final ImmutableBiMap<String, Integer> WORD_TO_INT =\n   *       new ImmutableBiMap.Builder<String, Integer>()\n   *           .put(\"one\", 1)\n   *           .put(\"two\", 2)\n   *           .put(\"three\", 3)\n   *           .build();}</pre>\n   *\n   * <p>For <i>small</i> immutable bimaps, the {@code ImmutableBiMap.of()} methods\n   * are even more convenient.\n   *\n   * <p>Builder instances can be reused - it is safe to call {@link #build}\n   * multiple times to build multiple bimaps in series. Each bimap is a superset\n   * of the bimaps created before it.","labels":{"default":["positive"]}}
{"sentences":"@link Builder","labels":{"default":["negative"]}}
{"sentences":"Returns a new builder. The generated builder is equivalent to the builder\n   * created by the {@link Builder} constructor.","labels":{"default":["positive"]}}
{"sentences":"Returns an immutable map containing the given entries, in order.","labels":{"default":["positive"]}}
{"sentences":"Returns an immutable map containing the given entries, in order.","labels":{"default":["positive"]}}
{"sentences":"Returns an immutable map containing the given entries, in order.","labels":{"default":["positive"]}}
{"sentences":"Returns an immutable map containing the given entries, in order.","labels":{"default":["positive"]}}
{"sentences":"Returns an immutable bimap containing a single entry.","labels":{"default":["positive"]}}
{"sentences":"Returns the empty bimap.","labels":{"default":["positive"]}}
{"sentences":"A {@link BiMap} whose contents will never change, with many other important properties detailed\n * at {@link ImmutableCollection}.","labels":{"default":["positive"]}}
{"sentences":" @author Jared Levy","labels":{"default":["negative"]}}
{"sentences":" @since 2.0","labels":{"default":["negative"]}}
{"sentences":"Casting to any type is safe because the set will never hold any elements.","labels":{"default":["negative"]}}
{"sentences":"   * @since 2.0","labels":{"default":["negative"]}}
{"sentences":"     * @since 19.0","labels":{"default":["negative"]}}
{"sentences":"     * @since 19.0","labels":{"default":["negative"]}}
{"sentences":"     * @since 19.0","labels":{"default":["negative"]}}
{"sentences":"   * @since 19.0","labels":{"default":["negative"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"@deprecated Unsupported operation.","labels":{"default":["negative"]}}
{"sentences":"looking for of() with > 5 entries? Use the builder instead.","labels":{"default":["negative"]}}
{"sentences":"<p>The sort order is stable, that is, if two entries have values that compare\n     * as equivalent, the entry that was inserted first will be first in the built map's\n     * iteration order.","labels":{"default":["negative"]}}
{"sentences":" If entries is full, then this implementation may end up using the entries array\n           * directly and writing over the entry objects with non-terminal entries, but this is\n           * safe; if this Builder is used further, it will grow the entries array (so it can't\n           * affect the original array), and future build() calls will always copy any entry\n           * objects that cannot be safely reused.","labels":{"default":["negative"]}}
{"sentences":"<p>Despite the method name, this method attempts to avoid actually copying\n   * the data when it is safe to do so. The exact circumstances under which a\n   * copy will or will not be performed are undocumented and subject to change.","labels":{"default":["negative"]}}
{"sentences":"// safe since map is not writable","labels":{"default":["positive"]}}
{"sentences":" Contributors:\n * QNX Software Systems - Initial API and implementation\n * Anton Leherbauer (Wind River Systems) - bug 183397","labels":{"default":["negative"]}}
{"sentences":" * Abstract base implementation of the breakpoint ruler actions.","labels":{"default":["positive"]}}
{"sentences":"@link RulerBreakpointAction","labels":{"default":["negative"]}}
{"sentences":"@see {@link RulerBreakpointAction}","labels":{"default":["negative"]}}
{"sentences":"Constructs an action to work on breakpoints in the specified\n\t * part with the specified vertical ruler information.","labels":{"default":["positive"]}}
{"sentences":"Returns the breakpoint at the last line of mouse activity in the ruler\n\t * or <code>null</code> if none.","labels":{"default":["positive"]}}
{"sentences":"Returns the workbench part this action was created for.","labels":{"default":["positive"]}}
{"sentences":"Returns the vertical ruler information this action was created for.","labels":{"default":["positive"]}}
{"sentences":"@return vertical ruler information","labels":{"default":["negative"]}}
{"sentences":"@return workbench part, a text editor or a DisassemblyView","labels":{"default":["negative"]}}
{"sentences":"@return breakpoint associated with activity in the ruler or <code>null</code>","labels":{"default":["negative"]}}
{"sentences":"@param part  a text editor or DisassemblyView","labels":{"default":["negative"]}}
{"sentences":"@param info  vertical ruler information","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *    lufimtse :  Leo Ufimtsev lufimtse@redhat.com","labels":{"default":["negative"]}}
{"sentences":"@since 8.3","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *    Jonah Graham (Kichwa Coders) - initial API and implementation to Add support for gdb's \"set substitute-path\" (Bug 472765)","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n * QNX Software Systems - Initial API and implementation\n * Freescale Semiconductor - Address watchpoints, https://bugs.eclipse.org/bugs/show_bug.cgi?id=118299\n * Warren Paul (Nokia) - Bug 217485, Bug 218342\n * Oyvind Harboe (oyvind.harboe@zylin.com) - Bug 225099","labels":{"default":["negative"]}}
{"sentences":"Toggles a line breakpoint in a C/C++ editor.","labels":{"default":["positive"]}}
{"sentences":"@since 7.2","labels":{"default":["negative"]}}
{"sentences":" * This class implements a value aggregator that dedupes a sequence of objects.","labels":{"default":["positive"]}}
{"sentences":"   * the default constructor","labels":{"default":["positive"]}}
{"sentences":"constructor","labels":{"default":["positive"]}}
{"sentences":"   * Set the limit on the number of unique values","labels":{"default":["positive"]}}
{"sentences":"   * add a value to the aggregator","labels":{"default":["positive"]}}
{"sentences":"   * reset the aggregator","labels":{"default":["positive"]}}
{"sentences":"@return return an array of the unique objects. The return value is\n   *         expected to be used by the a combiner.","labels":{"default":["negative"]}}
{"sentences":"@return the set of the unique objects","labels":{"default":["negative"]}}
{"sentences":"@return return the number of unique objects aggregated","labels":{"default":["negative"]}}
{"sentences":"@param val\n   *          an object.","labels":{"default":["negative"]}}
{"sentences":"   * @param maxNum the limit in the number of unique values to keep.","labels":{"default":["negative"]}}
{"sentences":"   * @param n the desired limit on the number of unique values","labels":{"default":["negative"]}}
{"sentences":"   * @return the new limit on the number of unique values","labels":{"default":["negative"]}}
{"sentences":"/**\n * Contains the logic to lookup a leveldb by timestamp so that multiple smaller\n * databases can roll according to the configured period and evicted efficiently\n * via operating system directory removal.\n */","labels":{"default":["positive"]}}
{"sentences":"  /** Logger for this class. */","labels":{"default":["positive"]}}
{"sentences":"  /** Factory to open and create new leveldb instances. */","labels":{"default":["positive"]}}
{"sentences":"  /** Thread safe date formatter. */","labels":{"default":["positive"]}}
{"sentences":"  /** Date parser. */","labels":{"default":["positive"]}}
{"sentences":"  /** Calendar to calculate the current and next rolling period. */","labels":{"default":["positive"]}}
{"sentences":"  /** Collection of all active rolling leveldb instances. */","labels":{"default":["positive"]}}
{"sentences":"  /** Collection of all rolling leveldb instances to evict. */","labels":{"default":["positive"]}}
{"sentences":"  /** Name of this rolling level db. */","labels":{"default":["positive"]}}
{"sentences":"  /** Calculated timestamp of when to roll a new leveldb instance. */","labels":{"default":["positive"]}}
{"sentences":"  /** File system instance to find and create new leveldb instances. */","labels":{"default":["positive"]}}
{"sentences":"  /** Directory to store rolling leveldb instances. */","labels":{"default":["positive"]}}
{"sentences":"  /** Configuration for this object. */","labels":{"default":["positive"]}}
{"sentences":"  /** Rolling period. */","labels":{"default":["positive"]}}
{"sentences":"Rolling leveldb instances are evicted when their endtime is earlier than\n   * the current time minus the time to live value.","labels":{"default":["positive"]}}
{"sentences":"  /** Whether time to live is enabled. */","labels":{"default":["positive"]}}
{"sentences":"  /** Encapsulates the rolling period to date format lookup. */","labels":{"default":["positive"]}}
{"sentences":"Convenience class for associating a write batch with its rolling leveldb\n   * instance.","labels":{"default":["positive"]}}
{"sentences":"    /** Leveldb object. */","labels":{"default":["positive"]}}
{"sentences":"    /** Write batch for the db object. */","labels":{"default":["positive"]}}
{"sentences":"    // make sure we sanitize this input","labels":{"default":["positive"]}}
{"sentences":"    // keep at least time to live amount of data","labels":{"default":["positive"]}}
{"sentences":"      // parse this in gmt time","labels":{"default":["positive"]}}
{"sentences":"    // needs to be called synchronously due to shared Calendar","labels":{"default":["positive"]}}
{"sentences":"      // round down to 12 hour interval","labels":{"default":["positive"]}}
{"sentences":"      // round down to 6 hour interval","labels":{"default":["positive"]}}
{"sentences":"      // round down to 5 minute interval","labels":{"default":["positive"]}}
{"sentences":"// Replace content","labels":{"default":["positive"]}}
{"sentences":"@see\n   * org.apache.hadoop.yarn.server.applicationhistoryservice.webapp.AHSView#\n   * preHead(org.apache.hadoop .yarn.webapp.hamlet.Hamlet.HTML)","labels":{"default":["negative"]}}
{"sentences":"   * The content of this page is the AggregatedLogsBlock","labels":{"default":["positive"]}}
{"sentences":"   * @return AggregatedLogsBlock.class","labels":{"default":["negative"]}}
{"sentences":"@link FSNamesystem","labels":{"default":["negative"]}}
{"sentences":"@link FSNamesystem","labels":{"default":["negative"]}}
{"sentences":"@link SnapshotManager","labels":{"default":["negative"]}}
{"sentences":"@link FSDirectory","labels":{"default":["negative"]}}
{"sentences":"@link SnapshotManager","labels":{"default":["negative"]}}
{"sentences":"@link #snapshottables","labels":{"default":["negative"]}}
{"sentences":"@link #snapshottables","labels":{"default":["negative"]}}
{"sentences":"@link #snapshottables","labels":{"default":["negative"]}}
{"sentences":"@link #snapshotCounter","labels":{"default":["negative"]}}
{"sentences":"@link #numSnapshots","labels":{"default":["negative"]}}
{"sentences":"@link #snapshotCounter","labels":{"default":["negative"]}}
{"sentences":"@link #numSnapshots","labels":{"default":["negative"]}}
{"sentences":"@link SnapshottableDirectoryStatus","labels":{"default":["negative"]}}
{"sentences":"@code userName","labels":{"default":["negative"]}}
{"sentences":"// SnapshotStatsMXBean","labels":{"default":["positive"]}}
{"sentences":"// SnapshotStatsMXBean","labels":{"default":["positive"]}}
{"sentences":"Returns the maximum allowable snapshot ID based on the bit width of the\n   * snapshot ID.","labels":{"default":["positive"]}}
{"sentences":"// both fromSnapshot and toSnapshot indicate the current tree","labels":{"default":["positive"]}}
{"sentences":"// Find the source root directory path where the snapshots were taken.\n    // All the check for path has been included in the valueOf method.","labels":{"default":["positive"]}}
{"sentences":"Compute the difference between two snapshots of a directory, or between a\n   * snapshot of the directory and its current tree.","labels":{"default":["positive"]}}
{"sentences":"List all the snapshottable directories that are owned by the current user.","labels":{"default":["positive"]}}
{"sentences":"Read values of {@link #snapshotCounter}, {@link #numSnapshots}, and\n   * all snapshots from the DataInput","labels":{"default":["positive"]}}
{"sentences":"write all snapshots.","labels":{"default":["positive"]}}
{"sentences":"Write {@link #snapshotCounter}, {@link #numSnapshots},\n   * and all snapshots to the DataOutput.","labels":{"default":["positive"]}}
{"sentences":"Rename the given snapshot","labels":{"default":["positive"]}}
{"sentences":"Delete a snapshot for a snapshottable directory","labels":{"default":["positive"]}}
{"sentences":"//create success, update id","labels":{"default":["positive"]}}
{"sentences":"// We have reached the maximum allowable snapshot ID and since we don't\n      // handle rollover we will fail all subsequent snapshot creation\n      // requests.","labels":{"default":["positive"]}}
{"sentences":"Create a snapshot of the given path.\n   * It is assumed that the caller will perform synchronization.","labels":{"default":["positive"]}}
{"sentences":"Find the source root directory where the snapshot will be taken\n  * for a given path.","labels":{"default":["positive"]}}
{"sentences":"// the directory is already non-snapshottable","labels":{"default":["positive"]}}
{"sentences":"Set the given snapshottable directory to non-snapshottable.","labels":{"default":["positive"]}}
{"sentences":"  /** Remove snapshottable directories from {@link #snapshottables} */","labels":{"default":["positive"]}}
{"sentences":"  /** Remove the given snapshottable directory from {@link #snapshottables}. */","labels":{"default":["positive"]}}
{"sentences":"  /** Add the given snapshottable directory to {@link #snapshottables}. */","labels":{"default":["positive"]}}
{"sentences":"      //The directory is already a snapshottable directory.","labels":{"default":["positive"]}}
{"sentences":"Set the given directory as a snapshottable directory.","labels":{"default":["positive"]}}
{"sentences":"  /** Used in tests only */","labels":{"default":["positive"]}}
{"sentences":"  /** All snapshottable directories in the namesystem. */","labels":{"default":["positive"]}}
{"sentences":"Manage snapshottable directories and their snapshots.\n * \n * This class includes operations that create, access, modify snapshots and/or\n * snapshot-related data. In general, the locking structure of snapshot\n * operations is: <br>","labels":{"default":["positive"]}}
{"sentences":" 1. Lock the {@link FSNamesystem} lock in {@link FSNamesystem} before calling\n * into {@link SnapshotManager} methods.<br>\n * 2. Lock the {@link FSDirectory} lock for the {@link SnapshotManager} methods\n * if necessary.","labels":{"default":["negative"]}}
{"sentences":"   * If the path is already a snapshottable directory, update the quota.","labels":{"default":["negative"]}}
{"sentences":"@return Snapshottable directories that are owned by the current user,\n   *         represented as an array of {@link SnapshottableDirectoryStatus}. If\n   *         {@code userName} is null, return all the snapshottable dirs.","labels":{"default":["negative"]}}
{"sentences":"@param userName Current user name.","labels":{"default":["negative"]}}
{"sentences":"// read snapshots","labels":{"default":["positive"]}}
{"sentences":"@param newSnapshotName\n   *          New name of the snapshot","labels":{"default":["negative"]}}
{"sentences":"@param oldSnapshotName\n   *          Old name of the snapshot","labels":{"default":["negative"]}}
{"sentences":"@param reclaimContext Used to collect information to reclaim blocks\n   *                       and inodes","labels":{"default":["negative"]}}
{"sentences":"@param snapshotName Name of the snapshot to be deleted","labels":{"default":["negative"]}}
{"sentences":"@param snapshotName\n   *          The name of the snapshot.","labels":{"default":["negative"]}}
{"sentences":"@param iip the INodes resolved from the snapshottable directory's path","labels":{"default":["negative"]}}
{"sentences":"@return Snapshottable directory.","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n * Intel Corporation - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.cdt.managedbuilder.builddescription.IBuildCommand#getCWD()","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.cdt.managedbuilder.builddescription.IBuildCommand#getEnvironment()","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.cdt.managedbuilder.builddescription.IBuildCommand#getArgs()","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.cdt.managedbuilder.builddescription.IBuildCommand#getCommand()","labels":{"default":["negative"]}}
{"sentences":"@since 16.0","labels":{"default":["negative"]}}
{"sentences":"@param eventBus The {@link EventBus} that handled the event and the subscriber. Useful for\n   *     broadcasting a a new event based on the error.","labels":{"default":["negative"]}}
{"sentences":"@param event The event object that caused the subscriber to throw.","labels":{"default":["negative"]}}
{"sentences":"@param subscriber The source subscriber context.","labels":{"default":["negative"]}}
{"sentences":"@param subscriberMethod the subscribed method.","labels":{"default":["negative"]}}
{"sentences":"@return The {@link EventBus} that handled the event and the subscriber. Useful for broadcasting\n   *     a a new event based on the error.","labels":{"default":["negative"]}}
{"sentences":"@return The event object that caused the subscriber to throw.","labels":{"default":["negative"]}}
{"sentences":"@return The object context that the subscriber was called on.","labels":{"default":["negative"]}}
{"sentences":"@return The subscribed method that threw the exception.","labels":{"default":["negative"]}}
{"sentences":"@link EventBus","labels":{"default":["negative"]}}
{"sentences":"Context for an exception thrown by a subscriber.","labels":{"default":["positive"]}}
{"sentences":"/**\n * This subclass of the Jetty SslSocketConnector exists solely to control\n * the TLS protocol versions allowed.  This is fallout from the POODLE\n * vulnerability (CVE-2014-3566), which requires that SSLv3 be disabled.\n * Only TLS 1.0 and later protocols are allowed.\n */","labels":{"default":["positive"]}}
{"sentences":"Create a new ServerSocket that will not accept SSLv3 connections,\n   * but will accept TLSv1.x connections.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Ericsson - initial API and implementation\n *     Marc Khouzam (Ericsson) - Use new FinalLaunchSequence_7_0 as base class (Bug 365471)\n *     Xavier Raynaud (Kalray) - Avoid duplicating fields in sub-classes (add protected accessors)","labels":{"default":["negative"]}}
{"sentences":"@since 4.0","labels":{"default":["negative"]}}
{"sentences":"Subclass for GDB >= 7.2.","labels":{"default":["positive"]}}
{"sentences":"// Initialize the list with the base class' steps\n\t\t\t// We need to create a list that we can modify, which is why we create our own ArrayList.","labels":{"default":["positive"]}}
{"sentences":"// Now insert our steps right after the initialization of the base class.","labels":{"default":["positive"]}}
{"sentences":"Initialize the members of the FinalLaunchSequence_7_2 class.\n\t * This step is mandatory for the rest of the sequence to complete.","labels":{"default":["positive"]}}
{"sentences":"Tell GDB whether to automatically attach to a forked process or not.","labels":{"default":["positive"]}}
{"sentences":"// Set preemption related configurations","labels":{"default":["positive"]}}
{"sentences":"Note: you must hold the cache lock to call this function.","labels":{"default":["negative"]}}
{"sentences":"@param evictableTimeNs   The evictable time in nanoseconds, or null\n   *                          to set no evictable time.","labels":{"default":["negative"]}}
{"sentences":"@return the evictable time in nanoseconds.","labels":{"default":["negative"]}}
{"sentences":"Note: you must hold the cache lock to call this function.","labels":{"default":["negative"]}}
{"sentences":"@return     True if we successfully added a no-checksum anchor.","labels":{"default":["negative"]}}
{"sentences":"/**\n * A ShortCircuitReplica object contains file descriptors for a block that\n * we are reading via short-circuit local reads.\n *\n * The file descriptors can be shared between multiple threads because\n * all the operations we perform are stateless-- i.e., we use pread\n * instead of read, to avoid using the shared position state.\n */","labels":{"default":["positive"]}}
{"sentences":" /**\n   * Identifies this ShortCircuitReplica object.\n   */","labels":{"default":["positive"]}}
{"sentences":"/**\n   * The block data input stream.\n   */","labels":{"default":["positive"]}}
{"sentences":"/**\n   * The block metadata input stream.\n   *\n   * TODO: make this nullable if the file has no checksums on disk.\n   */","labels":{"default":["positive"]}}
{"sentences":" /**\n   * Block metadata header.\n   */","labels":{"default":["positive"]}}
{"sentences":"/**\n   * The cache we belong to.\n   */","labels":{"default":["positive"]}}
{"sentences":" /**\n   * Monotonic time at which the replica was created.\n   */","labels":{"default":["positive"]}}
{"sentences":" /**\n   * If non-null, the shared memory slot associated with this replica.\n   */","labels":{"default":["positive"]}}
{"sentences":"\n  /**\n   * Current mmap state.\n   *\n   * Protected by the cache lock.\n   */","labels":{"default":["positive"]}}
{"sentences":"  /**\n   * True if this replica has been purged from the cache; false otherwise.\n   *\n   * Protected by the cache lock.\n   */","labels":{"default":["positive"]}}
{"sentences":" /**\n   * Number of external references to this replica.  Replicas are referenced\n   * by the cache, BlockReaderLocal instances, and by ClientMmap instances.\n   * The number starts at 2 because when we create a replica, it is referenced\n   * by both the cache and the requester.\n   *\n   * Protected by the cache lock.\n   */","labels":{"default":["negative"]}}
{"sentences":"/**\n   * The monotonic time in nanoseconds at which the replica became evictable, or\n   * null if it is not evictable.\n   *\n   * Protected by the cache lock.\n   */","labels":{"default":["negative"]}}
{"sentences":"\n  /**\n   * Decrement the reference count.\n   */","labels":{"default":["positive"]}}
{"sentences":" /**\n   * Check if the replica is stale.\n   *\n   * Must be called with the cache lock held.\n   */","labels":{"default":["positive"]}}
{"sentences":"      // Check staleness by looking at the shared memory area we use to","labels":{"default":["positive"]}}
{"sentences":"      // communicate with the DataNode.","labels":{"default":["positive"]}}
{"sentences":"      // Fall back to old, time-based staleness method.","labels":{"default":["positive"]}}
{"sentences":"  /**\n   * Try to add a no-checksum anchor to our shared memory slot.\n   *\n   * It is only possible to add this anchor when the block is mlocked on the Datanode.\n   * The DataNode will not munlock the block until the number of no-checksum anchors\n   * for the block reaches zero.\n   *\n   * This method does not require any synchronization.\n   *\n   * @return     True if we successfully added a no-checksum anchor.\n   */","labels":{"default":["negative"]}}
{"sentences":"/**\n   * Remove a no-checksum anchor for our shared memory slot.\n   *\n   * This method does not require any synchronization.\n   */","labels":{"default":["positive"]}}
{"sentences":" /**\n   * Check if the replica has an associated mmap that has been fully loaded.\n   *\n   * Must be called with the cache lock held.\n   */","labels":{"default":["positive"]}}
{"sentences":" /**\n   * Free the mmap associated with this replica.\n   *\n   * Must be called with the cache lock held.\n   */","labels":{"default":["positive"]}}
{"sentences":"  /**\n   * Close the replica.\n   *\n   * Must be called after there are no more references to the replica in the\n   * cache or elsewhere.\n   */","labels":{"default":["positive"]}}
{"sentences":"   * Get the evictable time in nanoseconds.","labels":{"default":["positive"]}}
{"sentences":"   * Set the evictable time in nanoseconds.","labels":{"default":["positive"]}}
{"sentences":" Convert the replica to a string for debugging purposes.\n   * Note that we can't take the lock here.","labels":{"default":["positive"]}}
{"sentences":"// launch config added will get called below to add it to the\n\t\t\t\t// configs map","labels":{"default":["positive"]}}
{"sentences":"\t\t// Set the project and the connection","labels":{"default":["positive"]}}
{"sentences":"\t\t// nothing to do since the Local connection can't be removed","labels":{"default":["positive"]}}
{"sentences":"@link com.google.inject.Binder","labels":{"default":["negative"]}}
{"sentences":"@link com.google.inject.Binder","labels":{"default":["negative"]}}
{"sentences":"@link com.google.inject.Binder","labels":{"default":["negative"]}}
{"sentences":"@link com.google.inject.Injector","labels":{"default":["negative"]}}
{"sentences":"@link com.google.inject.Binder","labels":{"default":["negative"]}}
{"sentences":"@author crazybob@google.com (Bob Lee)","labels":{"default":["negative"]}}
{"sentences":"See the EDSL examples at {@link com.google.inject.Binder}.","labels":{"default":["positive"]}}
{"sentences":"   * See the EDSL examples at {@link com.google.inject.Binder}.","labels":{"default":["positive"]}}
{"sentences":"   * See the EDSL examples at {@link com.google.inject.Binder}.","labels":{"default":["positive"]}}
{"sentences":"Instructs the {@link com.google.inject.Injector} to eagerly initialize this\n   * singleton-scoped binding upon creation. Useful for application\n   * initialization logic.  See the EDSL examples at","labels":{"default":["positive"]}}
{"sentences":"        // Removing this line causes the tree to show normally in Firefox","labels":{"default":["positive"]}}
{"sentences":"@link RequestInterceptor","labels":{"default":["negative"]}}
{"sentences":"@link Configuration","labels":{"default":["negative"]}}
{"sentences":"@link Configuration","labels":{"default":["negative"]}}
{"sentences":"@link RequestInterceptor","labels":{"default":["negative"]}}
{"sentences":"@link RequestInterceptor","labels":{"default":["negative"]}}
{"sentences":"@link RequestInterceptor","labels":{"default":["negative"]}}
{"sentences":"@link AMRMProxyApplicationContext","labels":{"default":["negative"]}}
{"sentences":"   * @return Distributed Scheduler Register Response","labels":{"default":["negative"]}}
{"sentences":"   * @param request ApplicationMaster registration request","labels":{"default":["negative"]}}
{"sentences":"   * @return Distribtued Scheduler Allocate Response","labels":{"default":["negative"]}}
{"sentences":"   * @param request ApplicationMaster allocate request","labels":{"default":["negative"]}}
{"sentences":"Implements the RequestInterceptor interface and provides common functionality\n * which can can be used and/or extended by other concrete intercepter classes.","labels":{"default":["positive"]}}
{"sentences":"   * Sets the {@link RequestInterceptor} in the chain.","labels":{"default":["positive"]}}
{"sentences":"   * Sets the {@link Configuration}.","labels":{"default":["positive"]}}
{"sentences":"   * Gets the {@link Configuration}.","labels":{"default":["positive"]}}
{"sentences":"   * Initializes the {@link RequestInterceptor}.","labels":{"default":["positive"]}}
{"sentences":"   * Disposes the {@link RequestInterceptor}.","labels":{"default":["positive"]}}
{"sentences":"   * Gets the next {@link RequestInterceptor} in the chain.","labels":{"default":["positive"]}}
{"sentences":" * Default implementation that invokes the distributed scheduling version\n   * of the register method.","labels":{"default":["positive"]}}
{"sentences":"Default implementation that invokes the distributed scheduling version\n   * of the allocate method.","labels":{"default":["positive"]}}
{"sentences":"   * Adds a new row to <i>this</i> dynamic Bloom filter.","labels":{"default":["positive"]}}
{"sentences":"   * Returns the active standard Bloom filter in <i>this</i> dynamic Bloom filter.","labels":{"default":["positive"]}}
{"sentences":"@return BloomFilter The active standard Bloom filter.\n   * \t\t\t <code>Null</code> otherwise.","labels":{"default":["negative"]}}
{"sentences":"  // Writable","labels":{"default":["negative"]}}
{"sentences":"@param nr The threshold for the maximum number of keys to record in a\n   * dynamic Bloom filter row.","labels":{"default":["negative"]}}
{"sentences":" @param hashType type of the hashing function (see\n   * {@link org.apache.hadoop.util.hash.Hash}).","labels":{"default":["negative"]}}
{"sentences":"   * @param nbHash The number of hash function to consider.","labels":{"default":["negative"]}}
{"sentences":"   * @param vectorSize The number of bits in the vector.","labels":{"default":["negative"]}}
{"sentences":"@link org.apache.hadoop.util.hash.Hash}","labels":{"default":["negative"]}}
{"sentences":"Constructor.\n   * <p>\n   * Builds an empty Dynamic Bloom filter.","labels":{"default":["positive"]}}
{"sentences":" Zero-args constructor for the serialization.","labels":{"default":["positive"]}}
{"sentences":"The matrix of Bloom filter.","labels":{"default":["positive"]}}
{"sentences":"   * The number of keys recorded in the current standard active Bloom filter.","labels":{"default":["positive"]}}
{"sentences":"   * Threshold for the maximum number of key to record in a dynamic Bloom filter row.","labels":{"default":["positive"]}}
{"sentences":"Implements a <i>dynamic Bloom filter</i>, as defined in the INFOCOM 2006 paper.\n * <p>\n * A dynamic Bloom filter (DBF) makes use of a <code>s * m</code> bit matrix but\n * each of the <code>s</code> rows is a standard Bloom filter. The creation \n * process of a DBF is iterative. At the start, the DBF is a <code>1 * m</code>\n * bit matrix, i.e., it is composed of a single standard Bloom filter.\n * It assumes that <code>n<sub>r</sub></code> elements are recorded in the \n * initial bit vector, where <code>n<sub>r</sub> <= n</code> (<code>n</code> is\n * the cardinality of the set <code>A</code> to record in the filter).  \n * <p>\n * As the size of <code>A</code> grows during the execution of the application,\n * several keys must be inserted in the DBF.  When inserting a key into the DBF,\n * one must first get an active Bloom filter in the matrix.  A Bloom filter is\n * active when the number of recorded keys, <code>n<sub>r</sub></code>, is \n * strictly less than the current cardinality of <code>A</code>, <code>n</code>.\n * If an active Bloom filter is found, the key is inserted and \n * <code>n<sub>r</sub></code> is incremented by one. On the other hand, if there\n * is no active Bloom filter, a new one is created (i.e., a new row is added to\n * the matrix) according to the current size of <code>A</code> and the element\n * is added in this new Bloom filter and the <code>n<sub>r</sub></code> value of\n * this new Bloom filter is set to one.  A given key is said to belong to the\n * DBF if the <code>k</code> positions are set to one in one of the matrix rows.\n * <p>\n * Originally created by\n * <a href=\"http://www.one-lab.org\">European Commission One-Lab Project 034819</a>.","labels":{"default":["positive"]}}
{"sentences":" * @see Filter The general behavior of a filter","labels":{"default":["negative"]}}
{"sentences":" * @see BloomFilter A Bloom filter","labels":{"default":["negative"]}}
{"sentences":" * @see <a href=\"http://www.cse.fau.edu/~jie/research/publications/Publication_files/infocom2006.pdf\">Theory and Network Applications of Dynamic Bloom Filters</a>","labels":{"default":["negative"]}}
{"sentences":" A simple benchmark to find out the difference in speed between block\n * and page blobs.","labels":{"default":["positive"]}}
{"sentences":"Writes data to the given stream of the given size, flushing every\n   * x bytes.","labels":{"default":["positive"]}}
{"sentences":" Writes data to the given file of the given size, flushing every\n   * x bytes. Measure performance of that and return it.","labels":{"default":["positive"]}}
{"sentences":"Writes data to a block blob of the given size, flushing every\n   * x bytes. Measure performance of that and return it.","labels":{"default":["positive"]}}
{"sentences":"Writes data to a page blob of the given size, flushing every\n   * x bytes. Measure performance of that and return it.","labels":{"default":["positive"]}}
{"sentences":"Runs the benchmark over a small 10 KB file, flushing every 500 bytes.","labels":{"default":["positive"]}}
{"sentences":"Runs the benchmark for the given file size and flush frequency.","labels":{"default":["positive"]}}
{"sentences":"Runs the benchmark for the given file size and flush frequency from the\n   * command line.","labels":{"default":["positive"]}}
{"sentences":"@link HarFileSyste","labels":{"default":["negative"]}}
{"sentences":"// ok, expected.","labels":{"default":["positive"]}}
{"sentences":"// ok, expected.","labels":{"default":["positive"]}}
{"sentences":"      // ok, expected.","labels":{"default":["positive"]}}
{"sentences":"      // ok, expected.","labels":{"default":["positive"]}}
{"sentences":"      // ok, expected.","labels":{"default":["positive"]}}
{"sentences":"      // ok, expected.","labels":{"default":["positive"]}}
{"sentences":"      // ok, expected.","labels":{"default":["positive"]}}
{"sentences":"      // ok, expected.","labels":{"default":["positive"]}}
{"sentences":"    // all the modification methods of HarFS must lead to IOE.","labels":{"default":["positive"]}}
{"sentences":"      // ok, expected.","labels":{"default":["positive"]}}
{"sentences":"    // the metadata should *not* be reused from cache:","labels":{"default":["positive"]}}
{"sentences":"    // init the Har:","labels":{"default":["positive"]}}
{"sentences":"    // write an unsupported version:","labels":{"default":["positive"]}}
{"sentences":"// NB: should wait at least 1 second to ensure the timestamp of the master\n    // index will change upon the writing, because Linux seems to update the\n    // file modification\n    // time with 1 second accuracy:","labels":{"default":["negative"]}}
{"sentences":"      // ok, expected.","labels":{"default":["positive"]}}
{"sentences":"      // ok, expected.","labels":{"default":["positive"]}}
{"sentences":"    // now init the HarFs:","labels":{"default":["positive"]}}
{"sentences":"    // delete the index file:","labels":{"default":["positive"]}}
{"sentences":" // Construct a valid har file system path with authority that\n    // contains userinfo and port. The userinfo and port are useless\n    // in local fs uri. They are only used to verify har file system\n    // can correctly preserve the information for the underlying file system.","labels":{"default":["positive"]}}
{"sentences":"    // List contents of dir, and ensure we find all expected files","labels":{"default":["positive"]}}
{"sentences":"// test.har has the following contents:\n    //   dir1/1.txt\n    //   dir1/2.txt","labels":{"default":["positive"]}}
{"sentences":"/ re-initialize the har file system with host name\n    // make sure the qualified path name does not append \":\" at the end of host name","labels":{"default":["positive"]}}
{"sentences":"// Init HarFS with no constructor arg, so that the underlying FS object\n    // is created on demand or got from cache in #initialize() method.","labels":{"default":["positive"]}}
{"sentences":"    // The first entry should not be in the cache anymore:","labels":{"default":["positive"]}}
{"sentences":"    // Create more hars, until the cache is full + 1; the last creation should evict the first entry from the cache","labels":{"default":["positive"]}}
{"sentences":"    // the metadata should be reused from cache:","labels":{"default":["positive"]}}
{"sentences":"// Init 2nd har file system on the same underlying FS, so the\n    // metadata gets reused:","labels":{"default":["positive"]}}
{"sentences":"    // the metadata should be reused from cache:","labels":{"default":["positive"]}}
{"sentences":"// Init 2nd har file system on the same underlying FS, so the\n    // metadata gets reused:","labels":{"default":["positive"]}}
{"sentences":" // check that its impossible to reset the working directory\n    // (#setWorkingDirectory should have no effect):","labels":{"default":["positive"]}}
{"sentences":"    // check working directory:","labels":{"default":["positive"]}}
{"sentences":"    // check Har home path:","labels":{"default":["positive"]}}
{"sentences":"    // check Har URI:","labels":{"default":["positive"]}}
{"sentences":"    // check Har version:","labels":{"default":["positive"]}}
{"sentences":"    // cleanup: delete all the temporary files:","labels":{"default":["positive"]}}
{"sentences":"    // close Har FS:","labels":{"default":["positive"]}}
{"sentences":"    // create Har to test:","labels":{"default":["positive"]}}
{"sentences":"    // write Har version into the master index:","labels":{"default":["positive"]}}
{"sentences":"   * creates and returns fully initialized HarFileSystem","labels":{"default":["positive"]}}
{"sentences":"  // NB: .har suffix is necessary","labels":{"default":["negative"]}}
{"sentences":" // Strip drive specifier on Windows, which would make the HAR URI invalid and\n    // cause tests to fail.","labels":{"default":["positive"]}}
{"sentences":"This test class checks basic operations with {@link HarFileSystem} including\n * various initialization cases, getters, and modification methods.","labels":{"default":["positive"]}}
{"sentences":"NB: to run this test from an IDE make sure the folder\n * \"hadoop-common-project/hadoop-common/src/main/resources/\" is added as a\n * source path. This will allow the system to pick up the \"core-default.xml\" and\n * \"META-INF/services/...\" resources from the class-path in the runtime.","labels":{"default":["negative"]}}
{"sentences":" // No headers read or written","labels":{"default":["positive"]}}
{"sentences":"// No headers read or written","labels":{"default":["positive"]}}
{"sentences":" // Remove default header","labels":{"default":["positive"]}}
{"sentences":"        // Remove default header","labels":{"default":["positive"]}}
{"sentences":"// No headers read or written","labels":{"default":["positive"]}}
{"sentences":"// No headers read or written","labels":{"default":["positive"]}}
{"sentences":"// Remove default header","labels":{"default":["positive"]}}
{"sentences":"@link DatanodeProtocol#sendHeartbeat","labels":{"default":["negative"]}}
{"sentences":"Response to {@link DatanodeProtocol#sendHeartbeat}","labels":{"default":["positive"]}}
{"sentences":"  /** Commands returned from the namenode to the datanode */","labels":{"default":["positive"]}}
{"sentences":"  /** Information about the current HA-related state of the NN */","labels":{"default":["positive"]}}
{"sentences":" * Thrown when Queue Name is malformed.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     IBM Corporation - initial API and implementation\n *     QNX Software System","labels":{"default":["negative"]}}
{"sentences":"\t * Called to announce that the given status has changed.","labels":{"default":["positive"]}}
{"sentences":"  // use published header name","labels":{"default":["positive"]}}
{"sentences":"  // alternate header name","labels":{"default":["positive"]}}
{"sentences":"    // use any file for signature secret","labels":{"default":["positive"]}}
{"sentences":" // Test that you can authenticate with only delegation tokens\n  // 1. Get a delegation token using Kerberos auth(this ends up\n  // testing the fallback authenticator)\n  // 2. Submit an app without kerberos or delegation-token\n  // - we should get an UNAUTHORIZED response\n  // 3. Submit same app with delegation-token\n  // - we should get OK response\n  // - confirm owner of the app is the user whose\n  // delegation-token we used","labels":{"default":["positive"]}}
{"sentences":"  // this should fail with unauthorized because only\n    // auth is kerberos or delegation token","labels":{"default":["positive"]}}
{"sentences":"    // this should not fail","labels":{"default":["positive"]}}
{"sentences":"  // Test to make sure that cancelled delegation tokens\n  // are rejected","labels":{"default":["positive"]}}
{"sentences":"   // this should fail with unauthorized because only\n    // auth is kerberos or delegation token","labels":{"default":["positive"]}}
{"sentences":"  // Test to make sure that we can't do delegation token\n  // functions using just delegation token auth","labels":{"default":["positive"]}}
{"sentences":"    // first test create and renew","labels":{"default":["positive"]}}
{"sentences":"    // test cancel","labels":{"default":["positive"]}}
{"sentences":"// Superuser \"client\" should be able to get a delegation token\n  // for user \"client2\" when authenticated using Kerberos\n  // The request shouldn't work when authenticated using DelegationTokens","labels":{"default":["positive"]}}
{"sentences":"    // this should not work","labels":{"default":["positive"]}}
{"sentences":"    // this should also fail due to client2 not being a super user","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Marc Khouzam (Ericsson) - Initial implementation of Test cases\n *     Alvaro Sanchez-Leon (Ericsson) - Bug 437562 - Split the dsf-gdb tests to a plug-in and fragment pair\n *     Jonah Graham (Kichwa Coders) - Bug 469007 - Add MIExpressionsNonStopTest_7_8 to suite\n *     Jonah Graham (Kichwa Coders) - Add support for gdb's \"set substitute-path\" (Bug 472765)","labels":{"default":["negative"]}}
{"sentences":"This class is meant to be empty.  It enables us to define\n * the annotations which list all the different JUnit class we\n * want to run.  When creating a new test class, it should be\n * added to the list below.","labels":{"default":["positive"]}}
{"sentences":" * This suite is for tests to be run with GDB 7_8","labels":{"default":["negative"]}}
{"sentences":"\t/* Add your test class here */","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Anton Leherbauer (Wind River Systems) - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"Tests for the default assembly model builder.","labels":{"default":["positive"]}}
{"sentences":"@since 5.0","labels":{"default":["negative"]}}
{"sentences":"Emulation of RunnableFuture.","labels":{"default":["positive"]}}
{"sentences":" (Re)creates the test table","labels":{"default":["positive"]}}
{"sentences":"     * Adds test data to the test table","labels":{"default":["positive"]}}
{"sentences":"     * @param connectionPool","labels":{"default":["negative"]}}
{"sentences":"     * @param connectionPool","labels":{"default":["negative"]}}
{"sentences":"@link NodeReport","labels":{"default":["negative"]}}
{"sentences":" @see NodeReport","labels":{"default":["negative"]}}
{"sentences":" * @see ApplicationClientProtocol#getClusterNodes(GetClusterNodesRequest)","labels":{"default":["negative"]}}
{"sentences":" <p>The response sent by the <code>ResourceManager</code> to a client\n * requesting a {@link NodeReport} for all nodes.</p>\n * \n * <p>The <code>NodeReport</code> contains per-node information such as \n * available resources, number of containers, tracking url, rack name, health\n * status etc.","labels":{"default":["positive"]}}
{"sentences":"Get <code>NodeReport</code> for all nodes in the cluster.","labels":{"default":["positive"]}}
{"sentences":"   * @return <code>NodeReport</code> for all nodes in the cluster","labels":{"default":["negative"]}}
{"sentences":"/** An arithmetic progression */","labels":{"default":["positive"]}}
{"sentences":"  /** A symbol */","labels":{"default":["positive"]}}
{"sentences":"  /** Starting value */","labels":{"default":["positive"]}}
{"sentences":"  /** Difference between terms */","labels":{"default":["positive"]}}
{"sentences":"  /** Ending value */","labels":{"default":["positive"]}}
{"sentences":"Constructor","labels":{"default":["positive"]}}
{"sentences":"  /** Not supported */","labels":{"default":["positive"]}}
{"sentences":"  /** Does this contain that? */","labels":{"default":["positive"]}}
{"sentences":"  /** Skip some steps */","labels":{"default":["positive"]}}
{"sentences":"  /** Get the number of steps */","labels":{"default":["positive"]}}
{"sentences":"  /** Convert a String to an ArithmeticProgression. */","labels":{"default":["positive"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":"@inheritDoc","labels":{"default":["negative"]}}
{"sentences":" * Helper class to manage a group of mutable rate metrics","labels":{"default":["positive"]}}
{"sentences":"Initialize the registry with all the methods in a protocol\n   * so they all show up in the first snapshot.\n   * Convenient for JMX implementations.","labels":{"default":["positive"]}}
{"sentences":"   * Add a rate sample for a rate metric","labels":{"default":["positive"]}}
{"sentences":"@param protocol the protocol class","labels":{"default":["negative"]}}
{"sentences":"   * @param name of the rate metric","labels":{"default":["negative"]}}
{"sentences":"   * @param elapsed time","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     John Camelon (IBM) - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"This interface represents a base interface to represent a problem owner or\n * holder.","labels":{"default":["positive"]}}
{"sentences":"\t * Get the problem.","labels":{"default":["positive"]}}
{"sentences":"\t * Set the problem.","labels":{"default":["positive"]}}
{"sentences":"@return <code>IASTProblem</code>","labels":{"default":["negative"]}}
{"sentences":"@param p\n\t *            <code>IASTProblem</code>","labels":{"default":["negative"]}}
{"sentences":"<code>PROBLEM</code> represents the relationship between a\n\t * <code>IASTProblemHolder</code> and its <code>IASTProblem</code>.","labels":{"default":["positive"]}}
{"sentences":" * @noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":" * @noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":" Contributors:\n * Marc Khouzam (Ericsson) - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":" * The preference page used to present the properties of a GDB dynamic printf as preferences.","labels":{"default":["positive"]}}
{"sentences":"@see IntegerFieldEditor#checkState()","labels":{"default":["negative"]}}
{"sentences":"@see FieldEditor#doStore()","labels":{"default":["negative"]}}
{"sentences":"@see StringFieldEditor#checkState()","labels":{"default":["negative"]}}
{"sentences":"@see #getPreferenceStore()","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.ui.IWorkbenchPropertyPage#setElement(org.eclipse.core.runtime.IAdaptable)","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.ui.IWorkbenchPropertyPage#getElement()","labels":{"default":["negative"]}}
{"sentences":"// Look for any breakpoint (base bp class) that has the same source file and line number as what\n\t\t// is currently being inputed.  Careful not to compare with the current dprintf\n\t\t// in the case of modifying the properties of an existing dprintf; in\n\t\t// that case we of course have this particular dprintf at this file and line.","labels":{"default":["negative"]}}
{"sentences":"// update page state","labels":{"default":["positive"]}}
{"sentences":"// update container state","labels":{"default":["positive"]}}
{"sentences":"// For every change, if all the fields are valid\n\t\t\t\t\t// we then check if we are dealing with a duplicate\n\t\t\t\t\t// breakpoint.","labels":{"default":["positive"]}}
{"sentences":"\t\t\t// Check for duplication of line dprintf","labels":{"default":["positive"]}}
{"sentences":"\t\t// Don't allow to create a duplicate breakpoint","labels":{"default":["positive"]}}
{"sentences":"        // default main label is the label of marker type for the dynamic printf","labels":{"default":["positive"]}}
{"sentences":"// LineDprintf","labels":{"default":["positive"]}}
{"sentences":"The preference store used to interface between the dynamic printf and the \n\t * dynamic printf preference page.  This preference store is initialized only\n\t * when the preference store cannot be retrieved from the preference \n\t * dialog's element.","labels":{"default":["positive"]}}
{"sentences":"Indicates if the page currently aims to create\n\t * a breakpoint that already exits.","labels":{"default":["positive"]}}
{"sentences":"nothing","labels":{"default":["positive"]}}
{"sentences":"\t\t * Clears the error message from the message line if the error message is the error message from this field editor.","labels":{"default":["positive"]}}
{"sentences":"\t\t * Clears the error message from the message line if the error message is the error message from this field editor.","labels":{"default":["positive"]}}
{"sentences":"\t\t * Only store if the text control is enabled","labels":{"default":["positive"]}}
{"sentences":"@since 7.1","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd.","labels":{"default":["negative"]}}
{"sentences":"        // Go over all dates this week","labels":{"default":["positive"]}}
{"sentences":"            // check if the date is in the range we need","labels":{"default":["negative"]}}
{"sentences":"                // check if the slot is taken","labels":{"default":["negative"]}}
{"sentences":"     // if width is undefined, use the width of the first cell\n        // otherwise use distributed sizes","labels":{"default":["negative"]}}
{"sentences":"    // simple base case for mapping user to queue","labels":{"default":["positive"]}}
{"sentences":"// specify overwritten, and see if user specified a queue, and it will be\n    // overridden","labels":{"default":["positive"]}}
{"sentences":"    // if overwritten not specified, it should be which user specified","labels":{"default":["negative"]}}
{"sentences":" * Finds gcc and clang on the path.","labels":{"default":["positive"]}}
{"sentences":"// decreasing container size from 50 to 40","labels":{"default":["positive"]}}
{"sentences":"// decreasing container size from 40 to 30","labels":{"default":["positive"]}}
{"sentences":"// TableElement scroll not working properly, so we need to do this.\n        // http://dev.vaadin.com/ticket/13826","labels":{"default":["positive"]}}
{"sentences":"// waitforvaadin not worky currently for table scroll, so we need to use\n        // thread sleep :(","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Tomasz Wesolowski - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"// gcc problem that matched the pattern","labels":{"default":["positive"]}}
{"sentences":"Loads the basic job level data upfront.\n * Data from job history file is loaded lazily.","labels":{"default":["positive"]}}
{"sentences":"//Can be picked from JobInfo with a conversion.","labels":{"default":["positive"]}}
{"sentences":"//Can be picked up from JobInfo","labels":{"default":["positive"]}}
{"sentences":"  //History data is leisurely loaded when task level data is requested","labels":{"default":["positive"]}}
{"sentences":"//we have only two types of tasks","labels":{"default":["positive"]}}
{"sentences":"@see org.apache.hadoop.mapreduce.v2.app.job.Job#loadConfFile()","labels":{"default":["negative"]}}
{"sentences":"@see org.apache.hadoop.mapreduce.v2.app.job.Job#getConfFile()","labels":{"default":["negative"]}}
{"sentences":"@see org.apache.hadoop.mapreduce.v2.app.job.Job#getJobACLs()","labels":{"default":["negative"]}}
{"sentences":"// JAXB needs this","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * IBM - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"The <code>AR</code> class is used for parsing standard SOM archive (ar) files.","labels":{"default":["positive"]}}
{"sentences":"Archive and archive member header. Does not include 8-byte magic character.","labels":{"default":["positive"]}}
{"sentences":"// file member name - '/' terminated","labels":{"default":["positive"]}}
{"sentences":"// file member date - decimal","labels":{"default":["positive"]}}
{"sentences":"// file member user id - decimal","labels":{"default":["positive"]}}
{"sentences":"// file member group id - decimal","labels":{"default":["positive"]}}
{"sentences":"// file member mode - octal","labels":{"default":["positive"]}}
{"sentences":"// file member size - decimal","labels":{"default":["positive"]}}
{"sentences":"// ARFMAG - string to end header","labels":{"default":["positive"]}}
{"sentences":"// fields","labels":{"default":["positive"]}}
{"sentences":"// derived information","labels":{"default":["positive"]}}
{"sentences":"/** Get the name of the object file */","labels":{"default":["positive"]}}
{"sentences":"\t\t/** Get the size of the object file . */","labels":{"default":["positive"]}}
{"sentences":"\t * Library Symbol Table header","labels":{"default":["positive"]}}
{"sentences":"\t\t// record fields","labels":{"default":["positive"]}}
{"sentences":" Creates a new <code>AR</code> object from the contents of \n\t *  the given file.","labels":{"default":["positive"]}}
{"sentences":"\t *  Get an array of all the object file headers for this archive.","labels":{"default":["positive"]}}
{"sentences":"\t/** Load the headers from the file (if required).  */","labels":{"default":["positive"]}}
{"sentences":"Check for EOF condition\n\t\t\t//\n\t\t\t// get the SOM directory","labels":{"default":["positive"]}}
{"sentences":"\t\t\t// each SOM Directory entry has 2 32bit words: SOM offset from LST and size","labels":{"default":["positive"]}}
{"sentences":"@author vhirsl","labels":{"default":["negative"]}}
{"sentences":"@author vhirsl","labels":{"default":["negative"]}}
{"sentences":"@author vhirsl","labels":{"default":["negative"]}}
{"sentences":"@param filename The file to process.","labels":{"default":["negative"]}}
{"sentences":"// load a LST header","labels":{"default":["positive"]}}
{"sentences":"\t * @return An array of headers, one for each object within the archive.","labels":{"default":["negative"]}}
{"sentences":"\t * @see ARHeader","labels":{"default":["negative"]}}
{"sentences":"// We only ever call hasMoreElements once for the user NamingEnum, so\n    // we can just have one return value","labels":{"default":["positive"]}}
{"sentences":"// We're going to have to define the loop here. We want two iterations,\n    // to get both the groups","labels":{"default":["positive"]}}
{"sentences":"    // Define the attribute for the name of the first group","labels":{"default":["positive"]}}
{"sentences":"    // Define the attribute for the name of the second group","labels":{"default":["positive"]}}
{"sentences":"    // This search result gets reused, so return group1, then group2","labels":{"default":["positive"]}}
{"sentences":"Find the first occured tab in a UTF-8 encoded string","labels":{"default":["positive"]}}
{"sentences":"   * Find the first occured tab in a UTF-8 encoded string","labels":{"default":["positive"]}}
{"sentences":" split a UTF-8 byte array into key and value \n   * assuming that the delimilator is at splitpos.","labels":{"default":["positive"]}}
{"sentences":" split a UTF-8 byte array into key and value \n   * assuming that the delimilator is at splitpos.","labels":{"default":["positive"]}}
{"sentences":"split a UTF-8 byte array into key and value \n   * assuming that the delimilator is at splitpos.","labels":{"default":["positive"]}}
{"sentences":"split a UTF-8 byte array into key and value \n   * assuming that the delimilator is at splitpos.","labels":{"default":["positive"]}}
{"sentences":"   * Read a utf8 encoded line from a data input stream.","labels":{"default":["positive"]}}
{"sentences":"   * @param lineReader LineReader to read the line from.","labels":{"default":["negative"]}}
{"sentences":"   * @param out Text to read into","labels":{"default":["negative"]}}
{"sentences":"   * @return number of bytes read","labels":{"default":["negative"]}}
{"sentences":"   * @param splitPos the split pos","labels":{"default":["negative"]}}
{"sentences":"   * @param val contains value upon the method is returned","labels":{"default":["negative"]}}
{"sentences":"   * @param key contains key upon the method is returned","labels":{"default":["negative"]}}
{"sentences":"   * @param utf utf-8 encoded string","labels":{"default":["negative"]}}
{"sentences":"   * @param separatorLength the length of the separator between key and value","labels":{"default":["negative"]}}
{"sentences":"   * @param splitPos the split pos","labels":{"default":["negative"]}}
{"sentences":"   * @param val contains value upon the method is returned","labels":{"default":["negative"]}}
{"sentences":"   * @param key contains key upon the method is returned","labels":{"default":["negative"]}}
{"sentences":"   * @param utf utf-8 encoded string","labels":{"default":["negative"]}}
{"sentences":"   * @param splitPos the split pos","labels":{"default":["negative"]}}
{"sentences":"   * @param val contains value upon the method is returned","labels":{"default":["negative"]}}
{"sentences":"   * @param key contains key upon the method is returned","labels":{"default":["negative"]}}
{"sentences":"   * @param length no. of bytes","labels":{"default":["negative"]}}
{"sentences":"   * @param start starting offset","labels":{"default":["negative"]}}
{"sentences":"   * @param utf utf-8 encoded string","labels":{"default":["negative"]}}
{"sentences":"   * @param separatorLength the length of the separator between key and value","labels":{"default":["negative"]}}
{"sentences":"   * @param splitPos the split pos","labels":{"default":["negative"]}}
{"sentences":"   * @param val contains value upon the method is returned","labels":{"default":["negative"]}}
{"sentences":"   * @param key contains key upon the method is returned","labels":{"default":["negative"]}}
{"sentences":"   * @param length no. of bytes","labels":{"default":["negative"]}}
{"sentences":"   * @param start starting offset","labels":{"default":["negative"]}}
{"sentences":"   * @param utf utf-8 encoded string","labels":{"default":["negative"]}}
{"sentences":"   * @param utf a byte array containing a UTF-8 encoded string","labels":{"default":["negative"]}}
{"sentences":"   * @return position that first tab occures otherwise -1","labels":{"default":["negative"]}}
{"sentences":"   * @param utf a byte array containing a UTF-8 encoded string","labels":{"default":["negative"]}}
{"sentences":"   * @param start starting offset","labels":{"default":["negative"]}}
{"sentences":"   * @param length no. of bytes","labels":{"default":["negative"]}}
{"sentences":"   * @return position that first tab occures otherwise -1","labels":{"default":["negative"]}}
{"sentences":" * @author jessewilson@google.com (Jesse Wilson)","labels":{"default":["negative"]}}
{"sentences":"@since 2.0","labels":{"default":["negative"]}}
{"sentences":"An untargetted binding. This binding indicates that the injector should use its implicit binding\n * strategies to resolve injections.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.cdt.core.IBinaryParser.IBinaryArchive#getObjects()","labels":{"default":["negative"]}}
{"sentences":"@link ElfBinaryArchive#createArchiveMembers(ARHeader[])","labels":{"default":["negative"]}}
{"sentences":"@deprecated use {@link ElfBinaryArchive#createArchiveMembers(ARHeader[])}","labels":{"default":["negative"]}}
{"sentences":"An abstract class that adds a consistent API for common methods that's needed\n * by Vaadin's server-based selection models to work.\n * <p>\n * <em>Note:</em> This should be an interface instead of an abstract class, if\n * only we could define protected methods in an interface.","labels":{"default":["positive"]}}
{"sentences":"@return <code>true</code> iff the selection state was changed by this\n     *         call","labels":{"default":["negative"]}}
{"sentences":"@param handle\n     *            the handle to deselect by","labels":{"default":["negative"]}}
{"sentences":"@return <code>true</code> iff the selection state was changed by this\n     *         call","labels":{"default":["negative"]}}
{"sentences":"@param handle\n     *            the handle to select by","labels":{"default":["negative"]}}
{"sentences":"@param <T>\n *            The grid's row type","labels":{"default":["negative"]}}
{"sentences":"@since 7.4","labels":{"default":["negative"]}}
{"sentences":"@link com.vaadin.client.data.DataSource.RowHandle RowHandle","labels":{"default":["negative"]}}
{"sentences":"@link com.vaadin.client.data.DataSource.RowHandle RowHandle","labels":{"default":["negative"]}}
{"sentences":"<em>Note:</em> this method may not fire selection change events.","labels":{"default":["negative"]}}
{"sentences":"<em>Note:</em> this method may not fire selection change events.","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":"Select a row, based on its","labels":{"default":["positive"]}}
{"sentences":" Deselect a row, based on its","labels":{"default":["positive"]}}
{"sentences":"/** Destination path parameter. */","labels":{"default":["positive"]}}
{"sentences":"  /** Parameter name. */","labels":{"default":["positive"]}}
{"sentences":"  /** Default parameter value. */","labels":{"default":["positive"]}}
{"sentences":"Constructor","labels":{"default":["positive"]}}
{"sentences":"   * @param str a string representation of the parameter value.","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Wind River Systems - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@since 2.2","labels":{"default":["negative"]}}
{"sentences":"@param entry The dirty cache entry that is missing the given requested \n     * property.","labels":{"default":["negative"]}}
{"sentences":"     * @param property Property missing from cache.","labels":{"default":["negative"]}}
{"sentences":"@return If <code>true</code> cache can update the given missing property\n     * in the dirty cache entry with data from the VM node.","labels":{"default":["negative"]}}
{"sentences":"Extension to the VM Update policy which allows the policy to control how to \n * update missing property values in a dirty cache entry.","labels":{"default":["positive"]}}
{"sentences":" Determines whether the given dirty cache entry should have the given \n     * missing property updated.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *    Alena Laskavaia  - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":" * @noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":" * @noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"\t * @return reference to a start node a graph","labels":{"default":["negative"]}}
{"sentences":"Exit node of the graph. Usually return from the function, can also be throw\n * or abort, such at exit(0) call.","labels":{"default":["positive"]}}
{"sentences":"JSON-marshallable description of a single component.\n * It supports the deserialization of unknown attributes, but does\n * not support their creation.","labels":{"default":["positive"]}}
{"sentences":"A type string which MUST be in the serialized json. This permits\n   * fast discarding of invalid entries","labels":{"default":["positive"]}}
{"sentences":"   * The type field. This must be the string {@link #RECORD_TYPE}","labels":{"default":["positive"]}}
{"sentences":"   * Description string","labels":{"default":["positive"]}}
{"sentences":"   * map to handle unknown attributes.","labels":{"default":["positive"]}}
{"sentences":"   * List of endpoints intended for use to external callers","labels":{"default":["positive"]}}
{"sentences":"   * List of endpoints for use <i>within</i> an application.","labels":{"default":["positive"]}}
{"sentences":"Create a service record with no ID, description or registration time.\n   * Endpoint lists are set to empty lists.","labels":{"default":["positive"]}}
{"sentences":"   * Deep cloning constructor","labels":{"default":["positive"]}}
{"sentences":"others","labels":{"default":["positive"]}}
{"sentences":"   * Add an internal endpoint","labels":{"default":["positive"]}}
{"sentences":"   * Look up an internal endpoint","labels":{"default":["positive"]}}
{"sentences":"   * Look up an external endpoint","labels":{"default":["positive"]}}
{"sentences":"   * Handle unknown attributes by storing them in the","labels":{"default":["positive"]}}
{"sentences":"The map of \"other\" attributes set when parsing. These\n   * are not included in the JSON value of this record when it\n   * is generated.","labels":{"default":["positive"]}}
{"sentences":"   * Get the \"other\" attribute with a specific key","labels":{"default":["positive"]}}
{"sentences":"   * Get the \"other\" attribute with a specific key.","labels":{"default":["positive"]}}
{"sentences":"   * Find an endpoint by its API","labels":{"default":["positive"]}}
{"sentences":"   * Shallow clone: all endpoints will be shared across instances","labels":{"default":["positive"]}}
{"sentences":"   * @return a clone of the instance","labels":{"default":["negative"]}}
{"sentences":"   * @param api api name","labels":{"default":["negative"]}}
{"sentences":"   * @param list list","labels":{"default":["negative"]}}
{"sentences":"   * @return the endpoint or null if there was no match","labels":{"default":["negative"]}}
{"sentences":"   * @param key key to look up","labels":{"default":["negative"]}}
{"sentences":"   * @param defVal default value","labels":{"default":["negative"]}}
{"sentences":" @return the value as a string,\n   * or <code>defval</code> if the value was not present","labels":{"default":["negative"]}}
{"sentences":"   * @param key key to look up","labels":{"default":["negative"]}}
{"sentences":"   * @return the value or null","labels":{"default":["negative"]}}
{"sentences":"   * @return a map of any unknown attributes in the deserialized JSON.","labels":{"default":["negative"]}}
{"sentences":"   * @param key attribute name","labels":{"default":["negative"]}}
{"sentences":"   * @param value attribute value.","labels":{"default":["negative"]}}
{"sentences":"   * @param api API","labels":{"default":["negative"]}}
{"sentences":"   * @return the endpoint or null if there was no match","labels":{"default":["negative"]}}
{"sentences":"   * @param endpoint endpoint to set","labels":{"default":["negative"]}}
{"sentences":"   * @param endpoint endpoint to set","labels":{"default":["negative"]}}
{"sentences":"   * @param that service record source","labels":{"default":["negative"]}}
{"sentences":"@link #RECORD_TYPE","labels":{"default":["negative"]}}
{"sentences":"@param api API","labels":{"default":["negative"]}}
{"sentences":"   * @return the endpoint or null if there was no match","labels":{"default":["negative"]}}
{"sentences":"@link #attributes","labels":{"default":["negative"]}}
{"sentences":"A generic JUnit test which tests creation (typically through a constructor or\n * static factory method) of a set. Can't be invoked directly; please see","labels":{"default":["positive"]}}
{"sentences":"@link com.google.common.collect.testing.SetTestSuiteBuilder","labels":{"default":["negative"]}}
{"sentences":"@author Chris Povirk","labels":{"default":["negative"]}}
{"sentences":" // setting per directory file limit to 1.","labels":{"default":["positive"]}}
{"sentences":"// Test root directory path = \"\"","labels":{"default":["positive"]}}
{"sentences":"    // Testing path generation from \"0\" to \"0/0/z/z\"","labels":{"default":["positive"]}}
{"sentences":"Making sure directory \"4\" and \"2\" becomes non-full so that they are\n     * reused for future getRelativePathForLocalization() calls in the order\n     * they are freed.","labels":{"default":["positive"]}}
{"sentences":"    // After below call directory \"4\" should become full.","labels":{"default":["positive"]}}
{"sentences":"    // checking for first four paths","labels":{"default":["positive"]}}
{"sentences":"    // Releasing two files from the root directory.","labels":{"default":["positive"]}}
{"sentences":"    // Space for two files should be available in root directory.","labels":{"default":["positive"]}}
{"sentences":"  // As no space is now available in root directory so it should be from\n    // first sub directory","labels":{"default":["positive"]}}
{"sentences":"    // finish filling the other directory","labels":{"default":["positive"]}}
{"sentences":"@link ImmutableListMultimap","labels":{"default":["negative"]}}
{"sentences":"@author Jared Levy","labels":{"default":["negative"]}}
{"sentences":"Tests for {@link ImmutableListMultimap}.","labels":{"default":["positive"]}}
{"sentences":"// suite","labels":{"default":["positive"]}}
{"sentences":"// SerializableTester","labels":{"default":["positive"]}}
{"sentences":"// SerializableTester","labels":{"default":["positive"]}}
{"sentences":"/**\n   * This states the invalid identifier of Resource Manager. This is used as a\n   * default value for initializing RM identifier. Currently, RM is using time\n   * stamp as RM identifier.\n   */","labels":{"default":["positive"]}}
{"sentences":"\n  /**\n   * Creates and closes a file of certain length.\n   * Calls append to allow next write() operation to add to the end of it\n   * After write() invocation, calls hflush() to make sure that data sunk through\n   * the pipeline and check the state of the last block's replica.\n   * It supposes to be in RBW state\n   *\n   * @throws IOException in case of an error\n   */","labels":{"default":["positive"]}}
{"sentences":"@link{TestReadWhileWriting}","labels":{"default":["negative"]}}
{"sentences":"/**\n   * These two test cases are already implemented by\n   *\n   * @link{TestReadWhileWriting}\n   */","labels":{"default":["positive"]}}
{"sentences":"        // click the button for decreasing size","labels":{"default":["positive"]}}
{"sentences":"        // click the button for increasing size","labels":{"default":["positive"]}}
{"sentences":"@link CacheLoader","labels":{"default":["negative"]}}
{"sentences":"@link CacheLoader","labels":{"default":["negative"]}}
{"sentences":"@link CacheLoader#load","labels":{"default":["negative"]}}
{"sentences":"@code loader","labels":{"default":["negative"]}}
{"sentences":"@link CacheLoader#loadAll","labels":{"default":["negative"]}}
{"sentences":"@link CacheLoader","labels":{"default":["negative"]}}
{"sentences":"@code constant","labels":{"default":["negative"]}}
{"sentences":"@link CacheLoader","labels":{"default":["negative"]}}
{"sentences":"@code constant","labels":{"default":["negative"]}}
{"sentences":"@link CacheLoader","labels":{"default":["negative"]}}
{"sentences":"@link CacheLoader","labels":{"default":["negative"]}}
{"sentences":"@link CacheLoader","labels":{"default":["negative"]}}
{"sentences":"@code new Object()","labels":{"default":["negative"]}}
{"sentences":"@link #getCount","labels":{"default":["negative"]}}
{"sentences":"@code new Object()","labels":{"default":["negative"]}}
{"sentences":"@code Integer","labels":{"default":["negative"]}}
{"sentences":"@code load","labels":{"default":["negative"]}}
{"sentences":"@code reload","labels":{"default":["negative"]}}
{"sentences":"@link #getLoadCount","labels":{"default":["negative"]}}
{"sentences":"@link #getReloadCount","labels":{"default":["negative"]}}
{"sentences":"@author mike nonemacher","labels":{"default":["negative"]}}
{"sentences":"Utility {@link CacheLoader} implementations intended for use in testing.","labels":{"default":["positive"]}}
{"sentences":"Returns a {@link CacheLoader} that implements a naive {@link CacheLoader#loadAll}, delegating\n   * {@link CacheLoader#load} calls to {@code loader}.","labels":{"default":["positive"]}}
{"sentences":"Returns a {@link CacheLoader} that returns the given {@code constant} for every request.","labels":{"default":["positive"]}}
{"sentences":"Returns a {@link CacheLoader} that returns the given {@code constant} for every request.","labels":{"default":["positive"]}}
{"sentences":"Returns a {@link CacheLoader} that throws the given error for every request.","labels":{"default":["positive"]}}
{"sentences":"Returns a {@link CacheLoader} that returns the key for every request.","labels":{"default":["positive"]}}
{"sentences":"Returns a {@code new Object()} for every request, and increments a counter for every request.\n   * The count is accessible via {@link #getCount}.","labels":{"default":["positive"]}}
{"sentences":"Returns a {@code new Object()} for every request, and increments a counter for every request.\n   * An {@code Integer} loader that returns the key for {@code load} requests, and increments the\n   * old value on {@code reload} requests. The load counts are accessible via {@link #getLoadCount}\n   * and {@link #getReloadCount}.","labels":{"default":["positive"]}}
{"sentences":"// reload","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Markus Schorn - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"Cost for the entire function call.","labels":{"default":["positive"]}}
{"sentences":"// no udc will be performed","labels":{"default":["positive"]}}
{"sentences":"\t * Compares this function call cost to another one.","labels":{"default":["positive"]}}
{"sentences":"// In order for this function to be better than the previous best, it must\n\t\t// have at least one parameter match that is better that the corresponding\n\t\t// match for the other function, and none that are worse.","labels":{"default":["negative"]}}
{"sentences":"\t\t\t// If they are both template functions, we can order them that way","labels":{"default":["negative"]}}
{"sentences":"\t\t\t// Prefer normal functions over template functions","labels":{"default":["positive"]}}
{"sentences":"\t\t\t// 7.3.3-15 Using declarations in classes can be overridden","labels":{"default":["positive"]}}
{"sentences":"\t\t\t// At this point prefer non-index bindings","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Doug Schaefer (IBM) - Initial API and implementation\n *     Markus Schorn (Wind River Systems)","labels":{"default":["negative"]}}
{"sentences":"@noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":"@noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"@since 5.2","labels":{"default":["negative"]}}
{"sentences":"@since 5.2","labels":{"default":["negative"]}}
{"sentences":"@since 5.2","labels":{"default":["negative"]}}
{"sentences":"@since 5.1","labels":{"default":["negative"]}}
{"sentences":"@since 5.3","labels":{"default":["negative"]}}
{"sentences":"@link #getClauses()","labels":{"default":["negative"]}}
{"sentences":"@link #addClause(IASTInitializerClause)","labels":{"default":["negative"]}}
{"sentences":"@deprecated Replaced by {@link #getClauses()}.","labels":{"default":["negative"]}}
{"sentences":"@deprecated Replaced by {@link #addClause(IASTInitializerClause)}.","labels":{"default":["negative"]}}
{"sentences":" Braced initializer list, for example as in:\n * <pre> int a[]= {1,2,3}; </pre>","labels":{"default":["positive"]}}
{"sentences":"Returns the size of the initializer list, including trivial initializers. This size may\n\t * be larger than the length of the array returned by {@link #getInitializers()}.","labels":{"default":["positive"]}}
{"sentences":"Returns the list of initializers. Depending on how the ast was created, this may omit\n\t * trivial initializers in order to save memory.","labels":{"default":["positive"]}}
{"sentences":"Add an initializer clause to the initializer list. Depending on how the AST is created the\n\t * initializer may be <code>null</code>. A <code>null</code> initializer will not be returned\n\t * by {@link #getInitializers()}, however it contributes to the actual element count (#getSize()).","labels":{"default":["positive"]}}
{"sentences":"@link #getInitializers()","labels":{"default":["negative"]}}
{"sentences":"/** Build layout version and corresponding feature matrix */","labels":{"default":["positive"]}}
{"sentences":"@param lv new layout version with the addition of this feature","labels":{"default":["negative"]}}
{"sentences":"@param description description of the feature","labels":{"default":["negative"]}}
{"sentences":"@param lv new layout version with the addition of this feature","labels":{"default":["negative"]}}
{"sentences":"@param ancestorLV layout version from which the new lv is derived from.","labels":{"default":["negative"]}}
{"sentences":" @param description description of the feature","labels":{"default":["negative"]}}
{"sentences":"@param reserved true when this is a layout version reserved for previous\n     *        version","labels":{"default":["negative"]}}
{"sentences":"@param features set of features that are to be enabled for this version","labels":{"default":["negative"]}}
{"sentences":"@code ancestoryLV","labels":{"default":["negative"]}}
{"sentences":"@code lv","labels":{"default":["negative"]}}
{"sentences":"Enums for features that change the layout version.\n   * <br><br>\n   * To add a new layout version:\n   * <ul>\n   * <li>Define a new enum constant with a short enum name, the new layout version \n   * and description of the added feature.</li>","labels":{"default":["positive"]}}
{"sentences":"DataNodeFeature that is added at layout version {@code lv} - 1.","labels":{"default":["positive"]}}
{"sentences":"DataNode feature that is added at layout version {@code ancestoryLV}.","labels":{"default":["positive"]}}
{"sentences":"<li>When adding a layout version with an ancestor that is not same as\n   * its immediate predecessor, use the constructor where a specific ancestor\n   * can be passed.","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     Anton Leherbauer (Wind River Systems) - initial API and implementation\n *     Markus Schorn (Wind River Systems)\n *     Sergey Prigogin (Google)","labels":{"default":["negative"]}}
{"sentences":" @since 4.0","labels":{"default":["negative"]}}
{"sentences":"\t\t * @param lang the language with which the AST has been created.","labels":{"default":["negative"]}}
{"sentences":"\t\t * @param ast  the translation unit AST, may be <code>null</code>","labels":{"default":["negative"]}}
{"sentences":"\t\t * @return a status object","labels":{"default":["negative"]}}
{"sentences":"\t * @param tUnit\t\t\t\tthe translation unit","labels":{"default":["negative"]}}
{"sentences":"\t * @param index\t\t\t\tthe index used to create the AST, needs to be read-locked","labels":{"default":["negative"]}}
{"sentences":"\t * @param wait\t\t\t\tif <code>true</code>, wait for AST to be computed (might compute a new AST)","labels":{"default":["negative"]}}
{"sentences":"\t * @param progressMonitor\tthe progress monitor or <code>null</code>","labels":{"default":["negative"]}}
{"sentences":"\t * @return\t\t\t\t\tthe AST or <code>null</code> if the AST is not available","labels":{"default":["negative"]}}
{"sentences":"@param tUnit\n\t *            the translation unit","labels":{"default":["negative"]}}
{"sentences":"@param wait\n\t *            <code>true</code> if the AST should be computed or waited","labels":{"default":["negative"]}}
{"sentences":"\t * @param monitor  a progress monitor, may be <code>null</code>","labels":{"default":["negative"]}}
{"sentences":"\t * @param astRunnable  the runnable taking the AST","labels":{"default":["negative"]}}
{"sentences":"\t * @return the status returned by the ASTRunnable","labels":{"default":["negative"]}}
{"sentences":"@param tUnit\t\t\t\tthe translation unit","labels":{"default":["negative"]}}
{"sentences":"\t * @param index\t\t\t\tthe index used to create the AST, needs to be read-locked","labels":{"default":["negative"]}}
{"sentences":"@param wait\t\t\t\tif <code>true</code>, wait for AST to be computed\n\t *                          (might compute a new AST)","labels":{"default":["negative"]}}
{"sentences":"\t * @param progressMonitor\tthe progress monitor or <code>null</code>","labels":{"default":["negative"]}}
{"sentences":"\t * @return\t\t\t\t\tthe AST or <code>null</code> if the AST is not available","labels":{"default":["negative"]}}
{"sentences":"\t * @param ast   the AST to release.","labels":{"default":["negative"]}}
{"sentences":"\t * @param ast    the AST","labels":{"default":["negative"]}}
{"sentences":"\t * @param tUnit  the translation unit","labels":{"default":["negative"]}}
{"sentences":"\t * @param tUnit  the translation unit for which to create the AST","labels":{"default":["negative"]}}
{"sentences":"\t * @param index  the index for AST generation, needs to be read-locked.","labels":{"default":["negative"]}}
{"sentences":"\t * @param progressMonitor  a progress monitor, may be <code>null</code>","labels":{"default":["negative"]}}
{"sentences":"\t * @return an AST for the translation unit, or <code>null</code> if the operation was cancelled","labels":{"default":["negative"]}}
{"sentences":"\t * @param tUnit  the translation unit","labels":{"default":["negative"]}}
{"sentences":"\t * @param tUnit  the translation unit","labels":{"default":["negative"]}}
{"sentences":"\t * @return  <code>true</code>, if this cache manages the given translation unit","labels":{"default":["negative"]}}
{"sentences":"\t * @param tUnit  the translation unit","labels":{"default":["negative"]}}
{"sentences":"\t * @param ast  the translation unit AST","labels":{"default":["negative"]}}
{"sentences":"\t * @param tUnit  the translation unit","labels":{"default":["negative"]}}
{"sentences":"\t * @param tUnit  the translation unit","labels":{"default":["negative"]}}
{"sentences":"\t * @return <code>true</code> if reported as currently being reconciled","labels":{"default":["negative"]}}
{"sentences":"\t * @param tUnit  the translation unit","labels":{"default":["negative"]}}
{"sentences":"\t * @return a string used for debugging","labels":{"default":["negative"]}}
{"sentences":"\t * @param ast  the translation unit AST","labels":{"default":["negative"]}}
{"sentences":"\t * @return a string used for debugging","labels":{"default":["negative"]}}
{"sentences":"Returns a string for the given AST used for debugging.","labels":{"default":["positive"]}}
{"sentences":"\t * Returns a string for the given C element used for debugging.","labels":{"default":["positive"]}}
{"sentences":"Tells whether the given C element is the one\n\t * reported as currently being reconciled.","labels":{"default":["positive"]}}
{"sentences":"\t * Informs that reconciling of the AST of the given translation unit has finished.","labels":{"default":["positive"]}}
{"sentences":"Informs that reconciling (computation of the AST) for the given element\n\t * is about to be started.","labels":{"default":["positive"]}}
{"sentences":"\t * Check whether the given translation unit is the active element of this cache.","labels":{"default":["positive"]}}
{"sentences":"\t * Set the given translation unit as active element to cache an AST for.","labels":{"default":["positive"]}}
{"sentences":"\t * Creates a new translation unit AST.","labels":{"default":["positive"]}}
{"sentences":"\t * Disposes the cached AST.","labels":{"default":["positive"]}}
{"sentences":"\t * Caches the given AST for the given translation unit.","labels":{"default":["positive"]}}
{"sentences":"Releases a shared AST previously acquired by calling\n\t * {@link #acquireSharedAST(ITranslationUnit, IIndex, boolean, IProgressMonitor)}.","labels":{"default":["positive"]}}
{"sentences":" * Provides a shared AST of a single translation unit at a time.","labels":{"default":["positive"]}}
{"sentences":"\t * Tells whether this class is in debug mode.","labels":{"default":["positive"]}}
{"sentences":"@see #runOnAST(ILanguage, IASTTranslationUnit)","labels":{"default":["negative"]}}
{"sentences":"@link ASTRunnable#runOnAST(ILanguage, IASTTranslationUnit)","labels":{"default":["negative"]}}
{"sentences":"@link #releaseSharedAST(IASTTranslationUnit)","labels":{"default":["negative"]}}
{"sentences":"\t\t// Signal AST change","labels":{"default":["positive"]}}
{"sentences":"// don't report call from disposeAST()","labels":{"default":["positive"]}}
{"sentences":"// don't report call from disposeAST()","labels":{"default":["positive"]}}
{"sentences":"Can be called by a thread other than the one that acquired the AST.","labels":{"default":["negative"]}}
{"sentences":"The AST can be released by a thread other than the one that acquired it.\n\t * <p>\n\t * Clients are not allowed to modify the AST and must hold an index read\n\t * lock prior to calling this method and continue to hold the lock as long\n\t * as the AST is being used.","labels":{"default":["negative"]}}
{"sentences":"Returns a shared AST for the given translation unit and locks it for\n\t * exclusive access. An AST obtained from this method has to be released\n\t * by calling {@link #releaseSharedAST(IASTTranslationUnit)}.\n\t * Subsequent call to this method will block until the AST is released.","labels":{"default":["positive"]}}
{"sentences":"Executes {@link ASTRunnable#runOnAST(ILanguage, IASTTranslationUnit)} with the AST\n\t * provided by this cache for the given translation unit. Handles acquiring\n\t * and releasing the index read-lock for the client.","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t// other reconciler was faster, still need to trigger notify","labels":{"default":["positive"]}}
{"sentences":"// try again","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t// Check whether active element is still valid","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t// Wait for AST","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t// no cached AST, but wait","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t// no AST, no wait - we are done","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t// no cached AST","labels":{"default":["positive"]}}
{"sentences":"if (!wait) {\n\t\t\t\t\t\t// no AST, no wait - we are done\n\t\t\t\t\t\tif (DEBUG)\n\t\t\t\t\t\t\tSystem.out.println(DEBUG_PREFIX + getThreadName() + \"returning null (WAIT_NO) for: \" + tUnit.getElementName()); //$NON-NLS-1$\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t\t// cached AST is valid","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t\t// AST has been invalidated by index write access","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t// AST is cached","labels":{"default":["positive"]}}
{"sentences":"Returns a shared translation unit AST for the given translation unit.\n\t * <p>\n\t * Clients are not allowed to modify the AST and must hold an index read\n\t * lock prior to calling this method and continue to hold the lock as long\n\t * as the AST is being used.","labels":{"default":["positive"]}}
{"sentences":"\t * Create a new AST cache.","labels":{"default":["positive"]}}
{"sentences":"\t/** Indicates whether the AST is currently being computed */","labels":{"default":["positive"]}}
{"sentences":"The timestamp of the last index write access at the time\n\t * the AST got cached. A cached AST becomes invalid on any index\n\t * write access afterwards.","labels":{"default":["positive"]}}
{"sentences":"\t/** The cached AST if any */","labels":{"default":["positive"]}}
{"sentences":"\t/** The active translation unit for which to cache the AST */","labels":{"default":["positive"]}}
{"sentences":"\t\t * Do something with the given AST.","labels":{"default":["positive"]}}
{"sentences":"\t * Do something with an AST.","labels":{"default":["positive"]}}
{"sentences":"Tests that blocksize is never zero for a file, either in the FS default\n * or the FileStatus value of a queried file","labels":{"default":["positive"]}}
{"sentences":"   * @return the value.","labels":{"default":["negative"]}}
{"sentences":"   * @param name the name to use in the exception message.","labels":{"default":["negative"]}}
{"sentences":"   * @param value integer value.","labels":{"default":["negative"]}}
{"sentences":"   * @return the value.","labels":{"default":["negative"]}}
{"sentences":"   * @param name the name to use in the exception message.","labels":{"default":["negative"]}}
{"sentences":"   * @param value integer value.","labels":{"default":["negative"]}}
{"sentences":"   * @return the value.","labels":{"default":["negative"]}}
{"sentences":"   * @param name the name to use in the exception message.","labels":{"default":["negative"]}}
{"sentences":"   * @param value long value.","labels":{"default":["negative"]}}
{"sentences":"   * @return the value.","labels":{"default":["negative"]}}
{"sentences":"   * @param name the name to use in the exception message.","labels":{"default":["negative"]}}
{"sentences":"   * @param value integer value.","labels":{"default":["negative"]}}
{"sentences":"   * @return the value.","labels":{"default":["negative"]}}
{"sentences":"   * @param name the name to use in the exception message.","labels":{"default":["negative"]}}
{"sentences":"   * @param maxLen maximun length.","labels":{"default":["negative"]}}
{"sentences":"   * @param value string to check if it is a valid identifier.","labels":{"default":["negative"]}}
{"sentences":"   * @return the variable.","labels":{"default":["negative"]}}
{"sentences":"   * @param name the name to use in the exception message.","labels":{"default":["negative"]}}
{"sentences":"   * @param list the list to check.","labels":{"default":["negative"]}}
{"sentences":"   * @return the variable.","labels":{"default":["negative"]}}
{"sentences":"   * @param name the name to use in the exception message.","labels":{"default":["negative"]}}
{"sentences":"   * @param str the variable to check.","labels":{"default":["negative"]}}
{"sentences":"   * @return the list.","labels":{"default":["negative"]}}
{"sentences":"   * @param name the name to use in the exception message.","labels":{"default":["negative"]}}
{"sentences":"   * @param list the list to check.","labels":{"default":["negative"]}}
{"sentences":"   * @return the variable.","labels":{"default":["negative"]}}
{"sentences":"   * @param name the name to use in the exception message.","labels":{"default":["negative"]}}
{"sentences":"   * @param obj the variable to check.","labels":{"default":["negative"]}}
{"sentences":"Utility methods to check preconditions.\n * <p>\n * Commonly used for method arguments preconditions.","labels":{"default":["positive"]}}
{"sentences":"Verifies a variable is not NULL.","labels":{"default":["positive"]}}
{"sentences":"Verifies a list does not have any NULL elements.","labels":{"default":["positive"]}}
{"sentences":"Verifies a string is not NULL and not emtpy","labels":{"default":["positive"]}}
{"sentences":"Verifies a string list is not NULL and not emtpy","labels":{"default":["positive"]}}
{"sentences":"Verifies a value is a valid identifier,\n   * <code>[a-zA-z_][a-zA-Z0-9_\\-]*</code>, up to a maximum length.","labels":{"default":["positive"]}}
{"sentences":"Verifies an integer is greater than zero.","labels":{"default":["positive"]}}
{"sentences":"Verifies an integer is greater or equal to zero.","labels":{"default":["positive"]}}
{"sentences":"Verifies an long is greater or equal to zero.","labels":{"default":["positive"]}}
{"sentences":"@author Vaadin Ltd.","labels":{"default":["negative"]}}
{"sentences":"Date / time etc. localisation service for all widgets. Caches all loaded\n * locales as JSONObjects.","labels":{"default":["positive"]}}
{"sentences":"@author Dhanji R. Prasanna (dhanji@gmail.com)","labels":{"default":["negative"]}}
{"sentences":"    //try to query them back out","labels":{"default":["positive"]}}
{"sentences":"    //persisted entity should remain in the same em (which should still be open)","labels":{"default":["positive"]}}
{"sentences":"    //pretend that the request was started here","labels":{"default":["positive"]}}
{"sentences":"    //startup persistence","labels":{"default":["positive"]}}
{"sentences":" For instance, a session-per-request strategy will control the opening and closing of the EM at\n * its own (manual) discretion. As opposed to a transactional unit of work.\n *","labels":{"default":["positive"]}}
{"sentences":"Interface for getting a secret key associated with some application.","labels":{"default":["positive"]}}
{"sentences":"Gets an appropriate SASL User for the given appId.","labels":{"default":["positive"]}}
{"sentences":"Gets an appropriate SASL secret key for the given appId.","labels":{"default":["positive"]}}
{"sentences":"@link TaskAttemptInfo","labels":{"default":["negative"]}}
{"sentences":"@link State","labels":{"default":["negative"]}}
{"sentences":"@link TaskInfo","labels":{"default":["negative"]}}
{"sentences":"@return the <code>TaskInfo</code> for the given task-attempt","labels":{"default":["negative"]}}
{"sentences":"@return the total runtime for the task-attempt","labels":{"default":["negative"]}}
{"sentences":"@return the final <code>State</code> of the task-attempt","labels":{"default":["negative"]}}
{"sentences":"{@link TaskAttemptInfo} is a collection of statistics about a particular\n * task-attempt gleaned from job-history of the job.","labels":{"default":["positive"]}}
{"sentences":"Get the final {@link State} of the task-attempt.","labels":{"default":["positive"]}}
{"sentences":"Get the total runtime for the task-attempt.","labels":{"default":["positive"]}}
{"sentences":" Get the {@link TaskInfo} for the given task-attempt.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@param listener a property change listener","labels":{"default":["negative"]}}
{"sentences":"@param listener a property change listener","labels":{"default":["negative"]}}
{"sentences":"Provides access to the properties of a debug target.","labels":{"default":["positive"]}}
{"sentences":"Adds a property change listener to this target.\n\t * Has no affect if the identical listener is already registered.\n\t *","labels":{"default":["positive"]}}
{"sentences":"Removes the given listener from this target.\n\t * Has no affect if the listener is not registered.\n\t *","labels":{"default":["positive"]}}
{"sentences":"@see WebApps for a usage example","labels":{"default":["negative"]}}
{"sentences":"   * @param action the controller method","labels":{"default":["negative"]}}
{"sentences":"   * @param cls the controller class","labels":{"default":["negative"]}}
{"sentences":"   * @param pathSpec  the path spec in the form of /controller/action/:args etc.","labels":{"default":["negative"]}}
{"sentences":"   * @param method  the http method for the route","labels":{"default":["negative"]}}
{"sentences":"   * @param path  the path to redirect to","labels":{"default":["negative"]}}
{"sentences":"   * @return InetSocketAddress","labels":{"default":["negative"]}}
{"sentences":"  // path to redirect to","labels":{"default":["positive"]}}
{"sentences":"  // index for the parsed route result","labels":{"default":["positive"]}}
{"sentences":"   * Get the address the http server is bound to","labels":{"default":["positive"]}}
{"sentences":"Set a path to redirect the user to if they just go to \"/\". For\n   * instance \"/\" goes to \"/yarn/apps\". This allows the filters to\n   * more easily differentiate the different webapps.","labels":{"default":["positive"]}}
{"sentences":"// Add in the web services filters/serves if app has them.\n    // Using Jersey/guice integration module. If user has web services\n    // they must have also bound a default one in their webapp code.","labels":{"default":["negative"]}}
{"sentences":"// There seems to be an issue with the guice/jersey integration\n      // where we have to list the stuff we don't want it to serve\n      // through the guicecontainer. In this case its everything except\n      // the the web services api prefix. We can't just change the filter\n      // from /* below - that doesn't work.","labels":{"default":["negative"]}}
{"sentences":"Setup of a webapp serving route.","labels":{"default":["positive"]}}
{"sentences":"@link GridDoubleClickEvent","labels":{"default":["negative"]}}
{"sentences":"@since 7.4","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":" Handler for {@link GridDoubleClickEvent}s that happen in the body of the\n * Grid.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Wind River Systems - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":" @param layoutClass","labels":{"default":["negative"]}}
{"sentences":" Main class for a series of name-node benchmarks.\n * \n * Each benchmark measures throughput and average execution time \n * of a specific name-node operation, e.g. file creation or block reports.","labels":{"default":["positive"]}}
{"sentences":"The benchmark does not involve any other hadoop components\n * except for the name-node. Each operation is executed\n * by calling directly the respective name-node method.\n * The name-node here is real all other components are simulated.\n * \n * This benchmark supports\n * <a href=\"{@docRoot}/../hadoop-project-dist/hadoop-common/CommandsManual.html#Generic_Options\">\n * standard command-line options</a>. If you use remote namenode by <tt>-fs</tt>\n * option, its config <tt>dfs.namenode.fs-limits.min-block-size</tt> should be\n * set as 16.\n *\n * Command line arguments for the benchmark include:\n * <ol>\n * <li>total number of operations to be performed,</li>\n * <li>number of threads to run these operations,</li>\n * <li>followed by operation specific input parameters.</li>\n * <li>-logLevel L specifies the logging level when the benchmark runs.\n * The default logging level is {@link Level#ERROR}.</li>\n * <li>-UGCacheRefreshCount G will cause the benchmark to call\n * {@link NameNodeRpcServer#refreshUserToGroupsMappings} after\n * every G operations, which purges the name-node's user group cache.\n * By default the refresh is never called.</li>\n * <li>-keepResults do not clean up the name-space after execution.</li>\n * <li>-useExisting do not recreate the name-space, use existing data.</li>\n * </ol>\n * \n * The benchmark first generates inputs for each thread so that the\n * input generation overhead does not effect the resulting statistics.\n * The number of operations performed by threads is practically the same. \n * Precisely, the difference between the number of operations \n * performed by any two threads does not exceed 1.\n * \n * Then the benchmark executes the specified number of operations using \n * the specified number of threads and outputs the resulting stats.","labels":{"default":["negative"]}}
{"sentences":"// We do not need many handlers, since each thread simulates a handler\n    // by calling name-node methods directly","labels":{"default":["positive"]}}
{"sentences":"    // Turn off minimum block size verification","labels":{"default":["positive"]}}
{"sentences":"    // set exclude file","labels":{"default":["positive"]}}
{"sentences":"    // change log level to NameNode logs","labels":{"default":["positive"]}}
{"sentences":"Base class for collecting operation statistics.\n   * \n   * Overload this class in order to run statistics for a \n   * specific name-node operation.","labels":{"default":["positive"]}}
{"sentences":" // number of threads","labels":{"default":["positive"]}}
{"sentences":"// number of operations requested","labels":{"default":["positive"]}}
{"sentences":" // number of operations executed","labels":{"default":["positive"]}}
{"sentences":"// sum of times for each op","labels":{"default":["positive"]}}
{"sentences":"// time from start to finish","labels":{"default":["positive"]}}
{"sentences":"// don't clean base directory on exit","labels":{"default":["positive"]}}
{"sentences":"// logging level, ERROR by default","labels":{"default":["positive"]}}
{"sentences":" // user group cache refresh count","labels":{"default":["positive"]}}
{"sentences":"     * Operation name.","labels":{"default":["positive"]}}
{"sentences":"     * Parse command line arguments.","labels":{"default":["positive"]}}
{"sentences":"     * Generate inputs for each daemon thread.","labels":{"default":["positive"]}}
{"sentences":"This corresponds to the arg1 argument of \n     * {@link #executeOp(int, int, String)}, which can have different meanings\n     * depending on the operation performed.","labels":{"default":["positive"]}}
{"sentences":"     * Execute name-node operation.","labels":{"default":["positive"]}}
{"sentences":"     * Print the results of the benchmarking.","labels":{"default":["positive"]}}
{"sentences":"// thread index < nrThreads","labels":{"default":["positive"]}}
{"sentences":"          // execute  in a separate thread","labels":{"default":["positive"]}}
{"sentences":"        // if numThreads > numOpsRequired then the remaining threads will do nothing","labels":{"default":["positive"]}}
{"sentences":"          // try {Thread.sleep(500);} catch (InterruptedException e) {}","labels":{"default":["positive"]}}
{"sentences":"     * @param args arguments","labels":{"default":["negative"]}}
{"sentences":"     * @param opsPerThread number of inputs for each thread.","labels":{"default":["negative"]}}
{"sentences":"     * @param daemonId id of the daemon calling this method","labels":{"default":["negative"]}}
{"sentences":"     * @param daemonId id of the daemon calling this method.","labels":{"default":["negative"]}}
{"sentences":"     * @param inputIdx serial index of the operation called by the deamon.","labels":{"default":["negative"]}}
{"sentences":"     * @param arg1 operation specific argument.","labels":{"default":["negative"]}}
{"sentences":"     * @return time of the individual name-node call.","labels":{"default":["negative"]}}
{"sentences":"     * @return the argument","labels":{"default":["negative"]}}
{"sentences":"@link #executeOp(int, int, String)","labels":{"default":["negative"]}}
{"sentences":"     * Parse first 2 arguments, corresponding to the \"-op\" option.","labels":{"default":["positive"]}}
{"sentences":"@param args argument list","labels":{"default":["negative"]}}
{"sentences":" @return true if operation is all, which means that options not related\n     * to this operation should be ignored, or false otherwise, meaning\n     * that usage should be printed when an unrelated option is encountered.","labels":{"default":["negative"]}}
{"sentences":"      // process common options","labels":{"default":["positive"]}}
{"sentences":"   * One of the threads that perform stats operations.","labels":{"default":["positive"]}}
{"sentences":"// argument passed to executeOp()","labels":{"default":["positive"]}}
{"sentences":"     * Schedule to stop this daemon.","labels":{"default":["positive"]}}
{"sentences":"   * Clean all benchmark result directories.","labels":{"default":["positive"]}}
{"sentences":"    // Operation types","labels":{"default":["positive"]}}
{"sentences":"      // do nothing","labels":{"default":["positive"]}}
{"sentences":"     * Does not require the argument","labels":{"default":["positive"]}}
{"sentences":"     * Remove entire benchmark directory.","labels":{"default":["positive"]}}
{"sentences":"File creation statistics.\n   * \n   * Each thread creates the same (+ or -1) number of files.\n   * File names are pre-generated during initialization.\n   * The created files do not have blocks.","labels":{"default":["positive"]}}
{"sentences":"    // Operation types","labels":{"default":["positive"]}}
{"sentences":"// parse command line","labels":{"default":["positive"]}}
{"sentences":"     * returns client name","labels":{"default":["positive"]}}
{"sentences":"     * Do file create.","labels":{"default":["positive"]}}
{"sentences":"Directory creation statistics.\n   *\n   * Each thread creates the same (+ or -1) number of directories.\n   * Directory names are pre-generated during initialization.","labels":{"default":["positive"]}}
{"sentences":"    // Operation types","labels":{"default":["positive"]}}
{"sentences":"// parse command line","labels":{"default":["positive"]}}
{"sentences":"     * returns client name","labels":{"default":["positive"]}}
{"sentences":"     * Do mkdirs operation.","labels":{"default":["positive"]}}
{"sentences":"Open file statistics.\n   * \n   * Measure how many open calls (getBlockLocations()) \n   * the name-node can handle per second.","labels":{"default":["positive"]}}
{"sentences":"Operation","labels":{"default":["positive"]}}
{"sentences":"// do not generate files, use existing ones","labels":{"default":["positive"]}}
{"sentences":"      // create files using opsPerThread","labels":{"default":["positive"]}}
{"sentences":"// create files if they were not created before","labels":{"default":["positive"]}}
{"sentences":"// use the same files for open","labels":{"default":["positive"]}}
{"sentences":"     * Do file open.","labels":{"default":["positive"]}}
{"sentences":"Delete file statistics.\n   * \n   * Measure how many delete calls the name-node can handle per second.","labels":{"default":["positive"]}}
{"sentences":"Operation types","labels":{"default":["positive"]}}
{"sentences":"List file status statistics.\n   * \n   * Measure how many get-file-status calls the name-node can handle per second.","labels":{"default":["positive"]}}
{"sentences":" Operation types","labels":{"default":["positive"]}}
{"sentences":"Rename file statistics.\n   * \n   * Measure how many rename calls the name-node can handle per second.","labels":{"default":["positive"]}}
{"sentences":"Operation types","labels":{"default":["positive"]}}
{"sentences":"Minimal data-node simulator.","labels":{"default":["positive"]}}
{"sentences":"//only one storage","labels":{"default":["positive"]}}
{"sentences":"// actual number of blocks","labels":{"default":["positive"]}}
{"sentences":"// get versions from the namenode","labels":{"default":["positive"]}}
{"sentences":"      // register datanode","labels":{"default":["positive"]}}
{"sentences":"      //first block reports","labels":{"default":["positive"]}}
{"sentences":"Send a heartbeat to the name-node.\n     * Ignore reply commands.","labels":{"default":["positive"]}}
{"sentences":"      // register datanode","labels":{"default":["positive"]}}
{"sentences":"      // fill remaining slots with blocks that do not exist","labels":{"default":["positive"]}}
{"sentences":"     * Send a heartbeat to the name-node and replicate blocks if requested.","labels":{"default":["positive"]}}
{"sentences":"// keep it for future blockReceived benchmark","labels":{"default":["positive"]}}
{"sentences":"      // register datanode","labels":{"default":["positive"]}}
{"sentences":"// Send a copy of a block to another datanode","labels":{"default":["positive"]}}
{"sentences":"Transfer blocks to another data-node.\n     * Just report on behalf of the other data-node\n     * that the blocks have been received.","labels":{"default":["positive"]}}
{"sentences":"Block report statistics.\n   * \n   * Each thread here represents its own data-node.\n   * Data-nodes send the same block report each time.\n   * The block report may contain missing or non-existing blocks.","labels":{"default":["positive"]}}
{"sentences":"// array of data-nodes sorted by name","labels":{"default":["positive"]}}
{"sentences":"      // set heartbeat interval to 3 min, so that expiration were 40 min","labels":{"default":["positive"]}}
{"sentences":"      // adjust replication to the number of data-nodes","labels":{"default":["positive"]}}
{"sentences":"// parse command line","labels":{"default":["positive"]}}
{"sentences":"      // create data-nodes","labels":{"default":["positive"]}}
{"sentences":"      // create files","labels":{"default":["positive"]}}
{"sentences":"      // prepare block reports","labels":{"default":["positive"]}}
{"sentences":"// IBRs are asynchronously processed by NameNode. The next\n        // ClientProtocol#addBlock() may throw NotReplicatedYetException.","labels":{"default":["negative"]}}
{"sentences":" Retry ClientProtocol.addBlock() if it throws NotReplicatedYetException.\n     * Because addBlock() also commits the previous block,\n     * it fails if enough IBRs are not processed by NameNode.\n     */","labels":{"default":["positive"]}}
{"sentences":"     * Does not require the argument","labels":{"default":["positive"]}}
{"sentences":"Measures how fast replication monitor can compute data-node work.\n   * \n   * It runs only one thread until no more work can be scheduled.","labels":{"default":["positive"]}}
{"sentences":"// parse command line","labels":{"default":["positive"]}}
{"sentences":"      // start data-nodes; create a bunch of files; generate block reports.","labels":{"default":["positive"]}}
{"sentences":"      // stop replication monitor","labels":{"default":["positive"]}}
{"sentences":"      // report blocks once","labels":{"default":["positive"]}}
{"sentences":"      // decommission data-nodes","labels":{"default":["positive"]}}
{"sentences":"      // set node replication limit","labels":{"default":["positive"]}}
{"sentences":"Does not require the argument","labels":{"default":["positive"]}}
{"sentences":"      // compute data-node work","labels":{"default":["positive"]}}
{"sentences":"@param aArgs command line parameters","labels":{"default":["negative"]}}
{"sentences":"Main method of the benchmark.","labels":{"default":["positive"]}}
{"sentences":"    // Start the NameNode","labels":{"default":["positive"]}}
{"sentences":"      // run each benchmark","labels":{"default":["positive"]}}
{"sentences":"      // print statistics","labels":{"default":["positive"]}}
{"sentences":"// Configurable","labels":{"default":["positive"]}}
{"sentences":"// Configurable","labels":{"default":["positive"]}}
{"sentences":"@link Level#ERROR","labels":{"default":["negative"]}}
{"sentences":"@link NameNodeRpcServer#refreshUserToGroupsMappings","labels":{"default":["negative"]}}
{"sentences":"@docRoot","labels":{"default":["negative"]}}
{"sentences":" Main class for a series of name-node benchmarks.\n * \n * Each benchmark measures throughput and average execution time \n * of a specific name-node operation, e.g. file creation or block reports.","labels":{"default":["positive"]}}
{"sentences":"The benchmark does not involve any other hadoop components\n * except for the name-node. Each operation is executed\n * by calling directly the respective name-node method.\n * The name-node here is real all other components are simulated.\n * \n * This benchmark supports\n * <a href=\"{@docRoot}/../hadoop-project-dist/hadoop-common/CommandsManual.html#Generic_Options\">\n * standard command-line options</a>. If you use remote namenode by <tt>-fs</tt>\n * option, its config <tt>dfs.namenode.fs-limits.min-block-size</tt> should be\n * set as 16.\n *\n * Command line arguments for the benchmark include:\n * <ol>\n * <li>total number of operations to be performed,</li>\n * <li>number of threads to run these operations,</li>\n * <li>followed by operation specific input parameters.</li>\n * <li>-logLevel L specifies the logging level when the benchmark runs.\n * The default logging level is {@link Level#ERROR}.</li>\n * <li>-UGCacheRefreshCount G will cause the benchmark to call\n * {@link NameNodeRpcServer#refreshUserToGroupsMappings} after\n * every G operations, which purges the name-node's user group cache.\n * By default the refresh is never called.</li>\n * <li>-keepResults do not clean up the name-space after execution.</li>\n * <li>-useExisting do not recreate the name-space, use existing data.</li>\n * </ol>\n * \n * The benchmark first generates inputs for each thread so that the\n * input generation overhead does not effect the resulting statistics.\n * The number of operations performed by threads is practically the same. \n * Precisely, the difference between the number of operations \n * performed by any two threads does not exceed 1.\n * \n * Then the benchmark executes the specified number of operations using \n * the specified number of threads and outputs the resulting stats.","labels":{"default":["negative"]}}
{"sentences":"// We do not need many handlers, since each thread simulates a handler\n    // by calling name-node methods directly","labels":{"default":["positive"]}}
{"sentences":"    // Turn off minimum block size verification","labels":{"default":["positive"]}}
{"sentences":"    // set exclude file","labels":{"default":["positive"]}}
{"sentences":"    // change log level to NameNode logs","labels":{"default":["positive"]}}
{"sentences":"Base class for collecting operation statistics.\n   * \n   * Overload this class in order to run statistics for a \n   * specific name-node operation.","labels":{"default":["positive"]}}
{"sentences":" // number of threads","labels":{"default":["positive"]}}
{"sentences":"// number of operations requested","labels":{"default":["positive"]}}
{"sentences":" // number of operations executed","labels":{"default":["positive"]}}
{"sentences":"// sum of times for each op","labels":{"default":["positive"]}}
{"sentences":"// time from start to finish","labels":{"default":["positive"]}}
{"sentences":"// don't clean base directory on exit","labels":{"default":["positive"]}}
{"sentences":"// logging level, ERROR by default","labels":{"default":["positive"]}}
{"sentences":" // user group cache refresh count","labels":{"default":["positive"]}}
{"sentences":"     * Operation name.","labels":{"default":["positive"]}}
{"sentences":"     * Parse command line arguments.","labels":{"default":["positive"]}}
{"sentences":"     * Generate inputs for each daemon thread.","labels":{"default":["positive"]}}
{"sentences":"This corresponds to the arg1 argument of \n     * {@link #executeOp(int, int, String)}, which can have different meanings\n     * depending on the operation performed.","labels":{"default":["positive"]}}
{"sentences":"     * Execute name-node operation.","labels":{"default":["positive"]}}
{"sentences":"     * Print the results of the benchmarking.","labels":{"default":["positive"]}}
{"sentences":"// thread index < nrThreads","labels":{"default":["positive"]}}
{"sentences":"          // execute  in a separate thread","labels":{"default":["positive"]}}
{"sentences":"        // if numThreads > numOpsRequired then the remaining threads will do nothing","labels":{"default":["positive"]}}
{"sentences":"          // try {Thread.sleep(500);} catch (InterruptedException e) {}","labels":{"default":["positive"]}}
{"sentences":"     * @param args arguments","labels":{"default":["negative"]}}
{"sentences":"     * @param opsPerThread number of inputs for each thread.","labels":{"default":["negative"]}}
{"sentences":"     * @param daemonId id of the daemon calling this method","labels":{"default":["negative"]}}
{"sentences":"     * @param daemonId id of the daemon calling this method.","labels":{"default":["negative"]}}
{"sentences":"     * @param inputIdx serial index of the operation called by the deamon.","labels":{"default":["negative"]}}
{"sentences":"     * @param arg1 operation specific argument.","labels":{"default":["negative"]}}
{"sentences":"     * @return time of the individual name-node call.","labels":{"default":["negative"]}}
{"sentences":"     * @return the argument","labels":{"default":["negative"]}}
{"sentences":"@link #executeOp(int, int, String)","labels":{"default":["negative"]}}
{"sentences":"     * Parse first 2 arguments, corresponding to the \"-op\" option.","labels":{"default":["positive"]}}
{"sentences":"@param args argument list","labels":{"default":["negative"]}}
{"sentences":" @return true if operation is all, which means that options not related\n     * to this operation should be ignored, or false otherwise, meaning\n     * that usage should be printed when an unrelated option is encountered.","labels":{"default":["negative"]}}
{"sentences":"      // process common options","labels":{"default":["positive"]}}
{"sentences":"   * One of the threads that perform stats operations.","labels":{"default":["positive"]}}
{"sentences":"// argument passed to executeOp()","labels":{"default":["positive"]}}
{"sentences":"     * Schedule to stop this daemon.","labels":{"default":["positive"]}}
{"sentences":"   * Clean all benchmark result directories.","labels":{"default":["positive"]}}
{"sentences":"    // Operation types","labels":{"default":["positive"]}}
{"sentences":"      // do nothing","labels":{"default":["positive"]}}
{"sentences":"     * Does not require the argument","labels":{"default":["positive"]}}
{"sentences":"     * Remove entire benchmark directory.","labels":{"default":["positive"]}}
{"sentences":"File creation statistics.\n   * \n   * Each thread creates the same (+ or -1) number of files.\n   * File names are pre-generated during initialization.\n   * The created files do not have blocks.","labels":{"default":["positive"]}}
{"sentences":"    // Operation types","labels":{"default":["positive"]}}
{"sentences":"// parse command line","labels":{"default":["positive"]}}
{"sentences":"     * returns client name","labels":{"default":["positive"]}}
{"sentences":"     * Do file create.","labels":{"default":["positive"]}}
{"sentences":"Directory creation statistics.\n   *\n   * Each thread creates the same (+ or -1) number of directories.\n   * Directory names are pre-generated during initialization.","labels":{"default":["positive"]}}
{"sentences":"    // Operation types","labels":{"default":["positive"]}}
{"sentences":"// parse command line","labels":{"default":["positive"]}}
{"sentences":"     * returns client name","labels":{"default":["positive"]}}
{"sentences":"     * Do mkdirs operation.","labels":{"default":["positive"]}}
{"sentences":"Open file statistics.\n   * \n   * Measure how many open calls (getBlockLocations()) \n   * the name-node can handle per second.","labels":{"default":["positive"]}}
{"sentences":"Operation","labels":{"default":["positive"]}}
{"sentences":"// do not generate files, use existing ones","labels":{"default":["positive"]}}
{"sentences":"      // create files using opsPerThread","labels":{"default":["positive"]}}
{"sentences":"// create files if they were not created before","labels":{"default":["positive"]}}
{"sentences":"// use the same files for open","labels":{"default":["positive"]}}
{"sentences":"     * Do file open.","labels":{"default":["positive"]}}
{"sentences":"Delete file statistics.\n   * \n   * Measure how many delete calls the name-node can handle per second.","labels":{"default":["positive"]}}
{"sentences":"Operation types","labels":{"default":["positive"]}}
{"sentences":"List file status statistics.\n   * \n   * Measure how many get-file-status calls the name-node can handle per second.","labels":{"default":["positive"]}}
{"sentences":" Operation types","labels":{"default":["positive"]}}
{"sentences":"Rename file statistics.\n   * \n   * Measure how many rename calls the name-node can handle per second.","labels":{"default":["positive"]}}
{"sentences":"Operation types","labels":{"default":["positive"]}}
{"sentences":"Minimal data-node simulator.","labels":{"default":["positive"]}}
{"sentences":"//only one storage","labels":{"default":["positive"]}}
{"sentences":"// actual number of blocks","labels":{"default":["positive"]}}
{"sentences":"// get versions from the namenode","labels":{"default":["positive"]}}
{"sentences":"      // register datanode","labels":{"default":["positive"]}}
{"sentences":"      //first block reports","labels":{"default":["positive"]}}
{"sentences":"Send a heartbeat to the name-node.\n     * Ignore reply commands.","labels":{"default":["positive"]}}
{"sentences":"      // register datanode","labels":{"default":["positive"]}}
{"sentences":"      // fill remaining slots with blocks that do not exist","labels":{"default":["positive"]}}
{"sentences":"     * Send a heartbeat to the name-node and replicate blocks if requested.","labels":{"default":["positive"]}}
{"sentences":"// keep it for future blockReceived benchmark","labels":{"default":["positive"]}}
{"sentences":"      // register datanode","labels":{"default":["positive"]}}
{"sentences":"// Send a copy of a block to another datanode","labels":{"default":["positive"]}}
{"sentences":"Transfer blocks to another data-node.\n     * Just report on behalf of the other data-node\n     * that the blocks have been received.","labels":{"default":["positive"]}}
{"sentences":"Block report statistics.\n   * \n   * Each thread here represents its own data-node.\n   * Data-nodes send the same block report each time.\n   * The block report may contain missing or non-existing blocks.","labels":{"default":["positive"]}}
{"sentences":"// array of data-nodes sorted by name","labels":{"default":["positive"]}}
{"sentences":"      // set heartbeat interval to 3 min, so that expiration were 40 min","labels":{"default":["positive"]}}
{"sentences":"      // adjust replication to the number of data-nodes","labels":{"default":["positive"]}}
{"sentences":"// parse command line","labels":{"default":["positive"]}}
{"sentences":"      // create data-nodes","labels":{"default":["positive"]}}
{"sentences":"      // create files","labels":{"default":["positive"]}}
{"sentences":"      // prepare block reports","labels":{"default":["positive"]}}
{"sentences":"// IBRs are asynchronously processed by NameNode. The next\n        // ClientProtocol#addBlock() may throw NotReplicatedYetException.","labels":{"default":["negative"]}}
{"sentences":" Retry ClientProtocol.addBlock() if it throws NotReplicatedYetException.\n     * Because addBlock() also commits the previous block,\n     * it fails if enough IBRs are not processed by NameNode.\n     */","labels":{"default":["positive"]}}
{"sentences":"     * Does not require the argument","labels":{"default":["positive"]}}
{"sentences":"Measures how fast replication monitor can compute data-node work.\n   * \n   * It runs only one thread until no more work can be scheduled.","labels":{"default":["positive"]}}
{"sentences":"// parse command line","labels":{"default":["positive"]}}
{"sentences":"      // start data-nodes; create a bunch of files; generate block reports.","labels":{"default":["positive"]}}
{"sentences":"      // stop replication monitor","labels":{"default":["positive"]}}
{"sentences":"      // report blocks once","labels":{"default":["positive"]}}
{"sentences":"      // decommission data-nodes","labels":{"default":["positive"]}}
{"sentences":"      // set node replication limit","labels":{"default":["positive"]}}
{"sentences":"Does not require the argument","labels":{"default":["positive"]}}
{"sentences":"      // compute data-node work","labels":{"default":["positive"]}}
{"sentences":"@param aArgs command line parameters","labels":{"default":["negative"]}}
{"sentences":"Main method of the benchmark.","labels":{"default":["positive"]}}
{"sentences":"    // Start the NameNode","labels":{"default":["positive"]}}
{"sentences":"      // run each benchmark","labels":{"default":["positive"]}}
{"sentences":"      // print statistics","labels":{"default":["positive"]}}
{"sentences":"// Configurable","labels":{"default":["positive"]}}
{"sentences":"// Configurable","labels":{"default":["positive"]}}
{"sentences":"@link Level#ERROR","labels":{"default":["negative"]}}
{"sentences":"@link NameNodeRpcServer#refreshUserToGroupsMappings","labels":{"default":["negative"]}}
{"sentences":"@docRoot","labels":{"default":["negative"]}}
{"sentences":"@author Dhanji R. Prasanna (dhanji@gmail.com)","labels":{"default":["negative"]}}
{"sentences":"// Get the size of each subqueue, the index corresponding to the priority\n  // level.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *    IBM Rational Software - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@author hamer","labels":{"default":["negative"]}}
{"sentences":"Testing Single name reference, with prefix","labels":{"default":["positive"]}}
{"sentences":"// note: macros are omitted intentionally","labels":{"default":["positive"]}}
{"sentences":"@see org.eclipse.cdt.core.codeassist.tests.CompletionProposalsTest#getCompletionPosition()","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.cdt.core.codeassist.tests.CompletionProposalsTest#getExpectedPrefix()","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.cdt.core.codeassist.tests.CompletionProposalsTest#getExpectedResultsValues()","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.cdt.core.codeassist.tests.CompletionProposalsTest#getFileName()","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.cdt.core.codeassist.tests.CompletionProposalsTest#getFileFullPath()","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.cdt.core.codeassist.tests.CompletionProposalsTest#getHeaderFileFullPath()","labels":{"default":["negative"]}}
{"sentences":"\t * @see org.eclipse.cdt.core.codeassist.tests.CompletionProposalsTest#getHeaderFileName()","labels":{"default":["negative"]}}
{"sentences":"@author Chris Povirk","labels":{"default":["negative"]}}
{"sentences":"@link ArrayListMultimap","labels":{"default":["negative"]}}
{"sentences":"This class implements the GWT serialization of {@link ArrayListMultimap}.","labels":{"default":["positive"]}}
{"sentences":"@link RollingFileSystemSink","labels":{"default":["negative"]}}
{"sentences":"Test the {@link RollingFileSystemSink} class in the context of HDFS with\n * Kerberos enabled.","labels":{"default":["positive"]}}
{"sentences":"Do a basic write test against an HDFS cluster with Kerberos enabled. We\n   * assume that if a basic write succeeds, more complex operations will also\n   * succeed.","labels":{"default":["positive"]}}
{"sentences":"Restore non-secure conf","labels":{"default":["positive"]}}
{"sentences":"Do a basic write test against an HDFS cluster with Kerberos enabled but\n   * without the principal and keytab properties set.","labels":{"default":["positive"]}}
{"sentences":"      // Restore non-secure conf","labels":{"default":["positive"]}}
{"sentences":"Create the /tmp directory as <i>hdfs</i> and /tmp/test as <i>sink</i> and\n   * return the UGI for <i>sink</i>.","labels":{"default":["positive"]}}
{"sentences":"   * Setup the KDC for testing a secure HDFS cluster","labels":{"default":["positive"]}}
{"sentences":"   * Stop the mini-KDC.","labels":{"default":["positive"]}}
{"sentences":"   * Creates a configuration for starting a secure cluster.","labels":{"default":["positive"]}}
{"sentences":"   * @param cluster the mini-cluster","labels":{"default":["negative"]}}
{"sentences":"   * @return the UGI for <i>sink</i>","labels":{"default":["negative"]}}
{"sentences":"   * @param dataTransferProtection supported QOPs","labels":{"default":["negative"]}}
{"sentences":"   * @return configuration for starting a secure cluster","labels":{"default":["negative"]}}
{"sentences":"Do NOT rename/refactor this to RMView as it will wreak havoc\n// on Mac OS HFS as its case-insensitive!","labels":{"default":["negative"]}}
{"sentences":"    // limit applications to those in states relevant to scheduling","labels":{"default":["positive"]}}
{"sentences":" * Tests for Grid State.","labels":{"default":["positive"]}}
{"sentences":"Setting table height and setting column header mode as hidden leaves the body\n * height of the table as it would be with the headers visible and leaves an\n * empty area below the body.","labels":{"default":["positive"]}}
{"sentences":"// table body height is now 77px, which together\n                    // with header makes 100px","labels":{"default":["positive"]}}
{"sentences":"// header disappears, but table body height stays at\n                    // 77px\n                    // and below the body is an empty area (same height\n                    // as header would\n                    // have)","labels":{"default":["positive"]}}
{"sentences":" * This class represent a naming service for checkpoints.","labels":{"default":["positive"]}}
{"sentences":"   * Generate a new checkpoint Name","labels":{"default":["positive"]}}
{"sentences":"   * @return the checkpoint name","labels":{"default":["negative"]}}
{"sentences":"@link HistoryViewer","labels":{"default":["negative"]}}
{"sentences":"@link PrintStream","labels":{"default":["negative"]}}
{"sentences":"@link PrintStream","labels":{"default":["negative"]}}
{"sentences":"   * @param ps the {@link PrintStream} to print to","labels":{"default":["negative"]}}
{"sentences":"Used by the {@link HistoryViewer} to print job history in a machine-readable\n * JSON format.","labels":{"default":["positive"]}}
{"sentences":"Print out the Job History to the given {@link PrintStream} in a\n   * machine-readable JSON format.","labels":{"default":["positive"]}}
{"sentences":"    // Killed jobs might not have counters","labels":{"default":["positive"]}}
{"sentences":"    // Killed tasks might not have counters","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *    John Camelon (IBM Rational Software) - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":"@noinstantiate This class is not intended to be instantiated by clients.","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     James Blackburn (Broadcom Corp.)","labels":{"default":["negative"]}}
{"sentences":"@see CProjectDescriptionStorageTypeProxy","labels":{"default":["negative"]}}
{"sentences":"@link #STORAGE_ROOT_ELEMENT_NAME","labels":{"default":["negative"]}}
{"sentences":"@link #STORAGE_TYPE_ATTRIBUTE","labels":{"default":["negative"]}}
{"sentences":"\t * @param type proxy which created this","labels":{"default":["negative"]}}
{"sentences":"\t * @param project - IProject","labels":{"default":["negative"]}}
{"sentences":"@param version - Version number of the description as reported by the AbstractCProjectDescriptionStorage\n\t * \t\t\t\t\ton last save","labels":{"default":["negative"]}}
{"sentences":"\t * @return AbstractCProjectDescriptionStorage","labels":{"default":["negative"]}}
{"sentences":"\t * @return boolean indicating whether this storage type writes a (compatible) .cproject file","labels":{"default":["negative"]}}
{"sentences":"\t\t * @param name","labels":{"default":["negative"]}}
{"sentences":"\t\t * @param storageType","labels":{"default":["negative"]}}
{"sentences":"\t\t * @param version","labels":{"default":["negative"]}}
{"sentences":"\t\t * @param min_version","labels":{"default":["negative"]}}
{"sentences":"\t\t * @param max_version","labels":{"default":["negative"]}}
{"sentences":"\t\t * @param el","labels":{"default":["negative"]}}
{"sentences":" Interface defining an ICProjectDescriptionStorageType\n * used as a factory for creating project description storages\n * for a give project","labels":{"default":["positive"]}}
{"sentences":"\t/** The file name in which the storage type and version are stored */","labels":{"default":["positive"]}}
{"sentences":"\t/** The document version attribute */","labels":{"default":["positive"]}}
{"sentences":"\t/** The root element in a .cproject file */","labels":{"default":["positive"]}}
{"sentences":"\t/** The document's storage type id attribute in the root element */","labels":{"default":["positive"]}}
{"sentences":"\tpublic static final String STORAGE_TYPE_ATTRIBUTE = \"storage_type_id\"; //$NON-NLS-1$","labels":{"default":["positive"]}}
{"sentences":"The type as defined in the CProjectDescriptionStorage extension point, wraps the\n\t * implemented ICProjectDescriptionType to provide proxy object for use by CProjectDescriptionStorageManager","labels":{"default":["positive"]}}
{"sentences":"\t\t * CProjectDescription Proxy Type.","labels":{"default":["positive"]}}
{"sentences":"\t\t * Constructor verifies that version is in the range (min_version, max_version]","labels":{"default":["positive"]}}
{"sentences":"\t\t/** Indicates if this type is compatible with the provided version */","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t// If an exception occurred return the default value","labels":{"default":["positive"]}}
{"sentences":"Return a new storage instance to be for persisting / loading cproject descriptions\n\t * from the passed in IProject","labels":{"default":["positive"]}}
{"sentences":"Method indicating whether this project storage type writes a .cproject file.\n\t *\n\t * If this method returns true then you must ensure that the .cproject file is an\n\t * xml file with a {@link #STORAGE_VERSION_NAME} tag and {@link #STORAGE_TYPE_ATTRIBUTE} id\n\t * in the {@link #STORAGE_ROOT_ELEMENT_NAME} e.g.:\n\t * <pre>\n\t * &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\t * &lt;?fileVersion 4.0.0?&gt;\n\t * &lt;cproject storageType=\"storage_type_id\"&gt; ....\n\t * &lt;/cproject&gt;","labels":{"default":["positive"]}}
{"sentences":"If this method returns false, then the CProjectDescriptionStorageType creates\n\t * a '.cproject' containing this data","labels":{"default":["negative"]}}
{"sentences":"            // expected","labels":{"default":["positive"]}}
{"sentences":"        // scroll a bit beyond so we see below.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * Intel Corporation - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"    // Configure the page blob directories key so every file created is a page blob.","labels":{"default":["positive"]}}
{"sentences":"Configure the atomic rename directories key so every folder will have\n    // atomic rename applied.","labels":{"default":["positive"]}}
{"sentences":"The following tests are failing on Azure and the Azure \n   * file system code needs to be modified to make them pass.\n   * A separate work item has been opened for this.","labels":{"default":["positive"]}}
{"sentences":" // HTTP CORS Request Headers","labels":{"default":["positive"]}}
{"sentences":"  // HTTP CORS Response Headers","labels":{"default":["positive"]}}
{"sentences":"  // Filter configuration","labels":{"default":["positive"]}}
{"sentences":"// Protect against HTTP response splitting vulnerability\n    // since value is written as part of the response header\n    // Ensure this header only has one header by removing\n    // CRs and LFs","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *    Markus Schorn - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@return the kind of the modification","labels":{"default":["negative"]}}
{"sentences":"@return the edit group or <code>null</code>.","labels":{"default":["negative"]}}
{"sentences":"\t * Return the target node of this modification.","labels":{"default":["positive"]}}
{"sentences":"\t * Return the new node of this modification, or <code>null</code>","labels":{"default":["positive"]}}
{"sentences":"\t * Returns the edit group to collect the text edits of this modification.","labels":{"default":["positive"]}}
{"sentences":"This represents the job configuration properties.","labels":{"default":["positive"]}}
{"sentences":"    // load the parsers","labels":{"default":["positive"]}}
{"sentences":"      // add the default MapReduce filter","labels":{"default":["positive"]}}
{"sentences":"    // filter out the desired config key-value pairs","labels":{"default":["positive"]}}
{"sentences":"        // find a parser for this key","labels":{"default":["positive"]}}
{"sentences":"      // define a configuration object and load it with original job properties","labels":{"default":["positive"]}}
{"sentences":" * Test dir operations on a the local FS.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Red Hat Incorporated - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@since 2.0","labels":{"default":["negative"]}}
{"sentences":"\t\t\t// Do nothing","labels":{"default":["positive"]}}
{"sentences":"\t\t\t// Do nothing.  Leave prefix empty.","labels":{"default":["positive"]}}
{"sentences":"\t// Provide parameter info as context information that\n\t\t\t\t\t\t\t// is tied to the completion proposal.","labels":{"default":["positive"]}}
{"sentences":"Utility classes to compute file checksum for both replicated and striped\n * files.","labels":{"default":["positive"]}}
{"sentences":"   * A common abstract class to compute file checksum.","labels":{"default":["positive"]}}
{"sentences":"     * Constructor that accepts all the input parameters for the computing.","labels":{"default":["positive"]}}
{"sentences":"Perform the file checksum computing. The intermediate results are stored\n     * in the object and will be used later.","labels":{"default":["positive"]}}
{"sentences":"Compute and aggregate block checksums block by block.","labels":{"default":["positive"]}}
{"sentences":"     * Make final file checksum result given the computing process done.","labels":{"default":["positive"]}}
{"sentences":"      //compute file MD5","labels":{"default":["positive"]}}
{"sentences":"     * Create and return a sender given an IO stream pair.","labels":{"default":["positive"]}}
{"sentences":"     * Close an IO stream pair.","labels":{"default":["positive"]}}
{"sentences":"   * Replicated file checksum computer.","labels":{"default":["positive"]}}
{"sentences":"      // get block checksum for each block","labels":{"default":["positive"]}}
{"sentences":"// refetch to get fresh tokens","labels":{"default":["positive"]}}
{"sentences":"Return true when sounds good to continue or retry, false when severe\n     * condition or totally failed.","labels":{"default":["positive"]}}
{"sentences":"      //try each datanode location of the block","labels":{"default":["positive"]}}
{"sentences":"// actually it's not done; but we'll retry","labels":{"default":["positive"]}}
{"sentences":"// repeat at blockIdx-th block","labels":{"default":["positive"]}}
{"sentences":"     * Try one replica or datanode to compute the block checksum given a block.","labels":{"default":["positive"]}}
{"sentences":"        // get block MD5","labels":{"default":["positive"]}}
{"sentences":"        //read byte-per-checksum","labels":{"default":["positive"]}}
{"sentences":"//first block","labels":{"default":["positive"]}}
{"sentences":"        //read crc-per-block","labels":{"default":["positive"]}}
{"sentences":"        //read md5","labels":{"default":["positive"]}}
{"sentences":"// read crc-type","labels":{"default":["positive"]}}
{"sentences":"   * Striped file checksum computing.","labels":{"default":["positive"]}}
{"sentences":"// refetch to get fresh tokens","labels":{"default":["positive"]}}
{"sentences":"      //try each datanode in the block group.","labels":{"default":["positive"]}}
{"sentences":"// repeat at bgIdx-th block","labels":{"default":["positive"]}}
{"sentences":"eturn true when sounds good to continue or retry, false when severe\n     * condition or totally failed.","labels":{"default":["positive"]}}
{"sentences":"        // get block MD5","labels":{"default":["positive"]}}
{"sentences":"        //read byte-per-checksum","labels":{"default":["positive"]}}
{"sentences":"        //read crc-per-block","labels":{"default":["positive"]}}
{"sentences":" // first block","labels":{"default":["positive"]}}
{"sentences":"        //read md5","labels":{"default":["positive"]}}
{"sentences":"        // read crc-type","labels":{"default":["positive"]}}
{"sentences":"          // if crc types are mixed in a file","labels":{"default":["positive"]}}
{"sentences":"          // if crc types are mixed in a file","labels":{"default":["negative"]}}
{"sentences":"// we should never get here since the validity was checked\n        // when getCrcType() was called above.","labels":{"default":["negative"]}}
{"sentences":"// If there is no block allocated for the file,\n        // return one with the magic entry that matches what previous\n        // hdfs versions return.","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.ui.IActionDelegate2#init(org.eclipse.jface.action.IAction)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.ui.IActionDelegate2#runWithEvent(org.eclipse.jface.action.IAction, org.eclipse.swt.widgets.Event)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.ui.ISelectionListener#selectionChanged(org.eclipse.ui.IWorkbenchPart, org.eclipse.jface.viewers.ISelection)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.ui.IViewActionDelegate#init(org.eclipse.ui.IViewPart)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()","labels":{"default":["negative"]}}
{"sentences":"@see org.eclipse.core.runtime.jobs.Job#run(org.eclipse.core.runtime.IProgressMonitor)","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n *     IBM Corporation - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"\t * The underlying action for this delegate","labels":{"default":["positive"]}}
{"sentences":"This action's view part, or <code>null</code>\n\t * if not installed in a view.","labels":{"default":["positive"]}}
{"sentences":"\t * Cache of the most recent seletion","labels":{"default":["positive"]}}
{"sentences":"\t * Whether this delegate has been initialized","labels":{"default":["positive"]}}
{"sentences":"The window associated with this action delegate\n\t * May be <code>null</code>","labels":{"default":["positive"]}}
{"sentences":"\t * Background job for this action, or <code>null</code> if none.","labels":{"default":["positive"]}}
{"sentences":"Constructs a new job to perform a debug request (for example, step)\n\t     * in the background.","labels":{"default":["positive"]}}
{"sentences":"         * Sets the selection to operate on.","labels":{"default":["positive"]}}
{"sentences":"It's crucial that delegate actions have a zero-arg constructor so that\n\t * they can be reflected into existence when referenced in an action set\n\t * in the plugin's plugin.xml file.","labels":{"default":["positive"]}}
{"sentences":"// disable the action so it cannot be run again until an event or selection change\n\t\t\t// updates the enablement","labels":{"default":["positive"]}}
{"sentences":"\t * Runs this action in a background job.","labels":{"default":["positive"]}}
{"sentences":"\t * Runs this action in the UI thread.","labels":{"default":["positive"]}}
{"sentences":"Returns whether or not this action should be run in the background.\n\t * Subclasses may override.","labels":{"default":["positive"]}}
{"sentences":"AbstractDebugActionDelegates come in 2 flavors: IViewActionDelegate, \n\t * IWorkbenchWindowActionDelegate delegates.\n\t * </p>\n\t * <ul>\n\t * <li>IViewActionDelegate delegate: getView() != null</li>\n\t * <li>IWorkbenchWindowActionDelegate: getView == null</li>\n\t * </ul>\n\t * <p>\n\t * Only want to call update(action, selection) for IViewActionDelegates.\n\t * An initialize call to update(action, selection) is made for all flavors to set the initial\n\t * enabled state of the underlying action.\n\t * IWorkbenchWindowActionDelegate's listen to selection changes\n\t * in the debug view only.\n\t * </p>","labels":{"default":["positive"]}}
{"sentences":"\t * Performs the specific action on this element.","labels":{"default":["positive"]}}
{"sentences":"Returns the String to use as an error dialog title for\n\t * a failed action. Default is to return null.","labels":{"default":["positive"]}}
{"sentences":"Returns the String to use as an error dialog message for\n\t * a failed action. This message appears as the \"Message:\" in\n\t * the error dialog for this action.\n\t * Default is to return null.","labels":{"default":["positive"]}}
{"sentences":"Returns the String to use as a status message for\n\t * a failed action. This message appears as the \"Reason:\"\n\t * in the error dialog for this action.\n\t * Default is to return the empty String.","labels":{"default":["positive"]}}
{"sentences":"Returns this action's view part, or <code>null</code>\n\t * if not installed in a view.","labels":{"default":["positive"]}}
{"sentences":" Initialize this delegate, updating this delegate's\n\t * presentation.\n\t * As well, all of the flavors of AbstractDebugActionDelegates need to \n\t * have the initial enabled state set with a call to update(IAction, ISelection).","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t//update on the selection in the debug view","labels":{"default":["positive"]}}
{"sentences":"\t * Returns the most recent selection","labels":{"default":["positive"]}}
{"sentences":"getSelection","labels":{"default":["positive"]}}
{"sentences":"\t * Sets the most recent selection","labels":{"default":["positive"]}}
{"sentences":"\t * Return whether the action should be enabled or not based on the given selection.","labels":{"default":["positive"]}}
{"sentences":"@param name job name","labels":{"default":["negative"]}}
{"sentences":"@param elements","labels":{"default":["negative"]}}
{"sentences":"@return whether or not this action should be run in the background","labels":{"default":["negative"]}}
{"sentences":"@return view part or <code>null</code>","labels":{"default":["negative"]}}
{"sentences":"@param action the presentation for this action","labels":{"default":["negative"]}}
{"sentences":" @return whether the action was initialized","labels":{"default":["negative"]}}
{"sentences":"@return structured selection","labels":{"default":["negative"]}}
{"sentences":"@parm selection structured selection","labels":{"default":["negative"]}}
{"sentences":"@link MetricsSource","labels":{"default":["negative"]}}
{"sentences":"@link Field","labels":{"default":["negative"]}}
{"sentences":"@link Metric","labels":{"default":["negative"]}}
{"sentences":"@link MutableMetric","labels":{"default":["negative"]}}
{"sentences":"@link MetricsRegistry","labels":{"default":["negative"]}}
{"sentences":"@link Method","labels":{"default":["negative"]}}
{"sentences":"@link Metric","labels":{"default":["negative"]}}
{"sentences":"@link MutableMetric","labels":{"default":["negative"]}}
{"sentences":"@link MetricsRegistry","labels":{"default":["negative"]}}
{"sentences":"@code field","labels":{"default":["negative"]}}
{"sentences":"@code source","labels":{"default":["negative"]}}
{"sentences":"@link MutableMetric","labels":{"default":["negative"]}}
{"sentences":"@link MutableMetric","labels":{"default":["negative"]}}
{"sentences":"@link Metric","labels":{"default":["negative"]}}
{"sentences":"  /** Add {@link MutableMetric} for a method annotated with {@link Metric} */","labels":{"default":["positive"]}}
{"sentences":"// Set the source field to MutableMetric","labels":{"default":["positive"]}}
{"sentences":"        // skip fields already set","labels":{"default":["positive"]}}
{"sentences":"Change the declared field {@code field} in {@code source} Object to\n   * {@link MutableMetric}","labels":{"default":["positive"]}}
{"sentences":"    // Create a new registry according to annotation","labels":{"default":["positive"]}}
{"sentences":"    // Get the registry if it already exists.","labels":{"default":["positive"]}}
{"sentences":"Helper class to build {@link MetricsSource} object from annotations.\n * <p>\n * For a given source object:\n * <ul>\n * <li>Sets the {@link Field}s annotated with {@link Metric} to\n * {@link MutableMetric} and adds it to the {@link MetricsRegistry}.</li>\n * <li>\n * For {@link Method}s annotated with {@link Metric} creates\n * {@link MutableMetric} and adds it to the {@link MetricsRegistry}.</li>\n * </ul>","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     QNX Software Systems - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":" @author Christian W. Damus (cdamus)","labels":{"default":["negative"]}}
{"sentences":"@since 6.0","labels":{"default":["negative"]}}
{"sentences":"@param tree\n\t *            my tree viewer","labels":{"default":["negative"]}}
{"sentences":"\n\t * @param addButton\n\t *            my add button","labels":{"default":["negative"]}}
{"sentences":"@param removeButton\n\t *            my remove button","labels":{"default":["negative"]}}
{"sentences":"@param renameButton\n\t *            my rename button","labels":{"default":["negative"]}}
{"sentences":"@param activateButton\n\t *            my activate button","labels":{"default":["negative"]}}
{"sentences":"@param buildButton\n\t *            my build button","labels":{"default":["negative"]}}
{"sentences":"@param controller\n\t *            my project configurations controller","labels":{"default":["negative"]}}
{"sentences":"@param project\n\t *            the project configuration whose active configuration selections have changed","labels":{"default":["negative"]}}
{"sentences":"// depends on whether the ws config is active","labels":{"default":["positive"]}}
{"sentences":"Notification that the selection of configuration(s) in some project in the current working set\n\t * configuration has changed. I accordingly update the visuals of the working-set configuration to\n\t * indicate whether it is active or not.","labels":{"default":["positive"]}}
{"sentences":"Updates the enablement state of the action buttons according to the current selection.","labels":{"default":["positive"]}}
{"sentences":"// show the problem","labels":{"default":["positive"]}}
{"sentences":"// it is possible that some project configurations had to applied in\n\t\t// order to effect a build. Refresh to handle that case","labels":{"default":["positive"]}}
{"sentences":"\t * Handler for the \"Build\" button.","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t// lighter-weight updates of its configs","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t// major change. Refresh it altogether","labels":{"default":["positive"]}}
{"sentences":"\t\t// update all working-set configs that intersect this config","labels":{"default":["positive"]}}
{"sentences":"Updates the display to reflect potential changes in project activation and the resulting changes in\n\t * working-set config activation, if any.","labels":{"default":["positive"]}}
{"sentences":"Handler for the \"Activate\" button.","labels":{"default":["positive"]}}
{"sentences":"Handler for the \"Rename...\" button.","labels":{"default":["positive"]}}
{"sentences":"Handler for the \"Remove\" button.","labels":{"default":["positive"]}}
{"sentences":"\t\t\t// this is a \"recently used\" working set","labels":{"default":["positive"]}}
{"sentences":"Handler for the \"Add...\" button.","labels":{"default":["positive"]}}
{"sentences":"\t\t\t// tell the project controller","labels":{"default":["positive"]}}
{"sentences":"Handles selection of working sets and their configurations. Among potentially other actions, this\n\t * injects the working-set configuration selection into the project configurations controller and updates\n\t * the enablement of the buttons.","labels":{"default":["positive"]}}
{"sentences":"\t\t// handle button press","labels":{"default":["positive"]}}
{"sentences":"\t * Handles button presses in the working set configurations pane.","labels":{"default":["positive"]}}
{"sentences":"\t\t// not interesting","labels":{"default":["positive"]}}
{"sentences":"Connects me to the controller for the project configurations pane, into which I inject the currently\n\t * selected working set configuration.","labels":{"default":["positive"]}}
{"sentences":"\t * Assigns me my \"Build\" button.","labels":{"default":["positive"]}}
{"sentences":"\t * Assigns me my \"Activate\" button.","labels":{"default":["positive"]}}
{"sentences":"\t * Assigns me my \"Rename...\" button.","labels":{"default":["positive"]}}
{"sentences":"\t * Assigns me my \"Remove\" button.","labels":{"default":["positive"]}}
{"sentences":"\t * Assigns me my \"Add...\" button.","labels":{"default":["positive"]}}
{"sentences":"\t\t\t\t\t\t// make the selection","labels":{"default":["positive"]}}
{"sentences":"// Shouldn't happen: there should at least be the\n\t\t\t\t\t\t\t// read-only config.\n\t\t\t\t\t\t\t// Can only select the initial working set","labels":{"default":["negative"]}}
{"sentences":"// we have a most-recently-used working set. Just\n\t\t\t\t\t\t\t// take the first in tree order","labels":{"default":["negative"]}}
{"sentences":"\t * Assigns the tree viewer that I control.","labels":{"default":["positive"]}}
{"sentences":"Initializes","labels":{"default":["positive"]}}
{"sentences":"\t * Initializes me we an initial working set to select.","labels":{"default":["positive"]}}
{"sentences":"The view controller for the working set configurations pane in the dialog. It takes care of coordinating\n * the user gestures in the pane with the working set configuration model, and vice-versa. It also implements\n * the handling of the action buttons.","labels":{"default":["positive"]}}
{"sentences":"@since 7.2","labels":{"default":["negative"]}}
{"sentences":"@author Vaadin Ltd","labels":{"default":["negative"]}}
{"sentences":"Visits Connector classes and check for methods with @OnStateChange\n * annotations.","labels":{"default":["positive"]}}
{"sentences":"            // Find all the annotated methods in all the superclasses","labels":{"default":["positive"]}}
{"sentences":"@author David Beaumont","labels":{"default":["negative"]}}
{"sentences":"      // pass","labels":{"default":["positive"]}}
{"sentences":"    // Non-null array of zero length.","labels":{"default":["positive"]}}
{"sentences":"    // Array length is highest character value + 1","labels":{"default":["positive"]}}
{"sentences":"    // Array length is highest character value + 1","labels":{"default":["positive"]}}
{"sentences":"    // The final element should always be non null.","labels":{"default":["positive"]}}
{"sentences":" Event Dispatcher interface. It dispatches events to registered \n * event handlers based on event types.","labels":{"default":["positive"]}}
{"sentences":" Configuration to make sure dispatcher crashes but doesn't do system-exit in\n  // case of errors. By default, it should be false, so that tests are not\n  // affected. For all daemons it should be explicitly set to true so that\n  // daemons can crash instead of hanging around.","labels":{"default":["positive"]}}
{"sentences":"  //job file name is set in TaskAttempt, setting it null here","labels":{"default":["positive"]}}
{"sentences":"// YARN doesn't have the concept of slots per task, set it as 1.","labels":{"default":["negative"]}}
{"sentences":"Test that the HDFS Audit logger respects DFS_NAMENODE_AUDIT_LOG_DEBUG_CMDLIST.","labels":{"default":["positive"]}}
{"sentences":" Contributors:\n * Johann Draschwandtner (Wind River) - initial API and implementation\n * Martin Oberhuber (Wind River) - [261486][api][cleanup] Mark @noimplement interfaces as @noextend","labels":{"default":["negative"]}}
{"sentences":"@noimplement This interface is not intended to be implemented by clients.","labels":{"default":["negative"]}}
{"sentences":"@noextend This interface is not intended to be extended by clients.","labels":{"default":["negative"]}}
{"sentences":"@since org.eclipse.rse.remotecdt 2.1","labels":{"default":["negative"]}}
{"sentences":"Constants used for Remote CDT connection properties.\n *\n * <strong>EXPERIMENTAL</strong>. This class or interface has been added as part\n * of a work in progress. There is no guarantee that this API will work or that\n * it will remain the same. Please do not use this API without consulting with\n * the <a href=\"http://www.eclipse.org/dsdp/tm/\">Target Management</a> team.\n * </p>","labels":{"default":["positive"]}}
{"sentences":"Check that the value change listener for a text field is triggered exactly\n * once when setting the value, at the correct time.","labels":{"default":["positive"]}}
{"sentences":"Case where the text field only uses its internal buffer, no external\n     * property data source.","labels":{"default":["positive"]}}
{"sentences":"Test that field propagates value change events originating from property,\n     * but don't fire value change events twice if value has only changed once.","labels":{"default":["positive"]}}
{"sentences":"        // defaults, buffering off","labels":{"default":["positive"]}}
{"sentences":"        // Expectations and start test","labels":{"default":["positive"]}}
{"sentences":"        // Add listener and set the value -> should end up in listener once","labels":{"default":["positive"]}}
{"sentences":"        // Ensure listener was called once","labels":{"default":["positive"]}}
{"sentences":"        // get value should not fire value change again","labels":{"default":["positive"]}}
{"sentences":"        // Ensure listener still has been called only once","labels":{"default":["positive"]}}
{"sentences":"Value change events from property should not propagate if read through is\n     * false. Execpt when the property is being set.","labels":{"default":["positive"]}}
{"sentences":"        // set buffering","labels":{"default":["positive"]}}
{"sentences":" Value change should only happen once, when setting the property,\n        // further changes via property should not cause value change listener\n        // in field to be notified","labels":{"default":["positive"]}}
{"sentences":"        // Ensure listener was called once","labels":{"default":["positive"]}}
{"sentences":"modify property value, should not fire value change in field as the\n        // read buffering is on (read through == false)","labels":{"default":["positive"]}}
{"sentences":"        // Ensure listener still has been called only once","labels":{"default":["positive"]}}
{"sentences":"        // get value should not fire value change again","labels":{"default":["positive"]}}
{"sentences":" field value should be different from the original value and current\n        // proeprty value","labels":{"default":["positive"]}}
{"sentences":"        // Ensure listener still has been called only once","labels":{"default":["positive"]}}
{"sentences":"See <a href=\"http://dev.vaadin.com/ticket/4394\">Ticket 4394</a>.","labels":{"default":["negative"]}}
{"sentences":"   * @return true if the policy is inherit-only.","labels":{"default":["negative"]}}
{"sentences":"   * @return fallback storage types for replicating existing block replicas.","labels":{"default":["negative"]}}
{"sentences":"   * @return fallback storage types for new block replicas..","labels":{"default":["negative"]}}
{"sentences":"   * @return preferred storage types used for placing block replicas.","labels":{"default":["negative"]}}
{"sentences":"   * @return the name of the storage policy.","labels":{"default":["negative"]}}
{"sentences":"A storage policy specifies the placement of block replicas on specific\n * storage types.","labels":{"default":["positive"]}}
{"sentences":" Return the name of the storage policy. Policies are uniquely\n   * identified by name.","labels":{"default":["positive"]}}
{"sentences":"Return the preferred storage types associated with this policy. These\n   * storage types are used sequentially for successive block replicas.","labels":{"default":["positive"]}}
{"sentences":"Get the fallback storage types for creating new block replicas. Fallback\n   * storage types are used if the preferred storage types are not available.","labels":{"default":["positive"]}}
{"sentences":"Get the fallback storage types for replicating existing block replicas.\n   * Fallback storage types are used if the preferred storage types are not\n   * available.","labels":{"default":["positive"]}}
{"sentences":"Returns true if the policy is inherit-only and cannot be changed for\n   * an existing file.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * QNX Software Systems - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":" C/C++ extension of <code>IThread</code>.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n * Intel Corporation - Initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@deprecated as of CDT 4.0. Does not seem to be used anywhere, looks like\n *    remnant of 3.X style new project wizard.","labels":{"default":["negative"]}}
{"sentences":"@noextend This class is not intended to be subclassed by clients.","labels":{"default":["negative"]}}
{"sentences":"@noinstantiate This class is not intended to be instantiated by clients.","labels":{"default":["negative"]}}
{"sentences":"The window will enqueue a non-immediate message reporting its current\n        // position.","labels":{"default":["positive"]}}
{"sentences":"        // Remove window immediately when the current response is sent","labels":{"default":["positive"]}}
{"sentences":"Clicking the button will trigger sending the window coordinates, but\n        // the window is already removed at that point.","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     Wind River Systems - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"@since 2.1","labels":{"default":["negative"]}}
{"sentences":"     * @param viewerInput The input to the viewer for the given cache entry.","labels":{"default":["negative"]}}
{"sentences":"     * @param path The viewer tree path for the given cache entry.","labels":{"default":["negative"]}}
{"sentences":"     * @param isDirty <code>true</code> if the given cache entry is already dirty","labels":{"default":["negative"]}}
{"sentences":"@return Collection of properties which should be flushed, or \n     * <code>null</code> if none.","labels":{"default":["negative"]}}
{"sentences":"     * Returns the properties that should be flushed for the element.","labels":{"default":["positive"]}}
{"sentences":"Element update tester extension which allows an update policy to selectively\n * flush properties of elements.  This can be useful if the update tester's event\n * only affects a certain aspect of the element's presentation.","labels":{"default":["positive"]}}
{"sentences":"// Bind Context to the default InitialContext.","labels":{"default":["positive"]}}
{"sentences":"// Bind to DataSource from JNDI.","labels":{"default":["positive"]}}
{"sentences":" * A dummy entry point of the test module.","labels":{"default":["positive"]}}
{"sentences":"@author Hayward Chan","labels":{"default":["negative"]}}
{"sentences":"Partitions the key space.\n * \n * <p><code>Partitioner</code> controls the partitioning of the keys of the \n * intermediate map-outputs. The key (or a subset of the key) is used to derive\n * the partition, typically by a hash function. The total number of partitions\n * is the same as the number of reduce tasks for the job. Hence this controls\n * which of the <code>m</code> reduce tasks the intermediate key (and hence the \n * record) is sent for reduction.</p>","labels":{"default":["positive"]}}
{"sentences":"<p>Note: A <code>Partitioner</code> is created only when there are multiple\n * reducers.</p>","labels":{"default":["negative"]}}
{"sentences":"   * @param key the key to be paritioned.","labels":{"default":["negative"]}}
{"sentences":"   * @param numPartitions the total number of partitions.","labels":{"default":["negative"]}}
{"sentences":"   * @param value the entry value.","labels":{"default":["negative"]}}
{"sentences":"   * @return the partition number for the <code>key</code>.","labels":{"default":["negative"]}}
{"sentences":"Get the paritition number for a given key (hence record) given the total \n   * number of partitions i.e. number of reduce-tasks for the job.\n   *   \n   * <p>Typically a hash function on a all or a subset of the key.</p>","labels":{"default":["positive"]}}
{"sentences":" @see Reducer","labels":{"default":["negative"]}}
{"sentences":"@link PreemptionMessage","labels":{"default":["negative"]}}
{"sentences":"@code ApplicationMaster","labels":{"default":["negative"]}}
{"sentences":"@link\n * StrictPreemptionContract","labels":{"default":["negative"]}}
{"sentences":"@link PreemptionContract","labels":{"default":["negative"]}}
{"sentences":"@link\n * StrictPreemptionContract","labels":{"default":["negative"]}}
{"sentences":"@link\n * PreemptionContract#getContainers()","labels":{"default":["negative"]}}
{"sentences":"@link PreemptionContract","labels":{"default":["negative"]}}
{"sentences":"A {@link PreemptionMessage} is part of the RM-AM protocol, and it is used by\n * the RM to specify resources that the RM wants to reclaim from this\n * {@code ApplicationMaster} (AM). The AM receives a {@link\n * StrictPreemptionContract} message encoding which containers the platform may\n * forcibly kill, granting it an opportunity to checkpoint state or adjust its\n * execution plan. The message may also include a {@link PreemptionContract}\n * granting the AM more latitude in selecting which resources to return to the\n * cluster.","labels":{"default":["positive"]}}
{"sentences":"The AM should decode both parts of the message. The {@link\n * StrictPreemptionContract} specifies particular allocations that the RM\n * requires back. The AM can checkpoint containers' state, adjust its execution\n * plan to move the computation, or take no action and hope that conditions that\n * caused the RM to ask for the container will change.\n * <p>\n * In contrast, the {@link PreemptionContract} also includes a description of\n * resources with a set of containers. If the AM releases containers matching\n * that profile, then the containers enumerated in {@link\n * PreemptionContract#getContainers()} may not be killed.\n * <p>\n * Each preemption message reflects the RM's current understanding of the\n * cluster state, so a request to return <em>N</em> containers may not\n * reflect containers the AM is releasing, recently exited containers the RM has\n * yet to learn about, or new containers allocated before the message was\n * generated. Conversely, an RM may request a different profile of containers in\n * subsequent requests.\n * <p>\n * The policy enforced by the RM is part of the scheduler. Generally, only\n * containers that have been requested consistently should be killed, but the\n * details are not specified.","labels":{"default":["negative"]}}
{"sentences":"@return Specific resources that may be killed by the\n   * <code>ResourceManager</code>","labels":{"default":["negative"]}}
{"sentences":"@return Contract describing resources to return to the cluster.","labels":{"default":["negative"]}}
{"sentences":"<p>The OpportunisticContainerAllocator allocates containers on a given list\n * of Nodes after it modifies the container sizes to within allowable limits\n * specified by the <code>ClusterManager</code> running on the RM. It tries to\n * distribute the containers as evenly as possible. It also uses the\n * <code>NMTokenSecretManagerInNM</code> to generate the required NM tokens for\n * the allocated containers</p>","labels":{"default":["positive"]}}
{"sentences":"      // Bias away from whatever we have already allocated and respect blacklist","labels":{"default":["positive"]}}
{"sentences":"// Normalize the resource asks (Similar to what the the RM scheduler does\n    // before accepting an ask)","labels":{"default":["positive"]}}
{"sentences":"    // RPC layer client expects ip:port as service for tokens","labels":{"default":["positive"]}}
{"sentences":"* Tests calendar via prepared screenshots 'Calendar event not shown correctly\n * when partially out of view' (#7261)","labels":{"default":["positive"]}}
{"sentences":"Contributors:\n *     IBM Corporation - initial API and implementation","labels":{"default":["negative"]}}
{"sentences":"Contributors:\n * Red Hat Incorporated         - initial implementation\n * IBM Rational Software        - add and remove nature static methods\n * Anna Dushistova (MontaVista) - [402595]Autotools nature loses builders added by contributed wizard pages","labels":{"default":["negative"]}}
{"sentences":"@since 1.3","labels":{"default":["negative"]}}
{"sentences":"\t * @param project","labels":{"default":["negative"]}}
{"sentences":"\t * @param monitor","labels":{"default":["negative"]}}
