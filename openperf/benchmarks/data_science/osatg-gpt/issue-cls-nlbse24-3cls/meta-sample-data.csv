repo,created_at,label,title,body
facebook/react,2023-08-02 02:26:00,bug,Bug: [18.3.0-canary] renderToString hoists some tags to top(working in 18.2),"<!--
  Please provide a clear and concise description of what the bug is. Include
  screenshots if needed. Please test using the latest version of the relevant
  React packages to make sure your issue has not already been fixed.
-->

React version: 18.3.0-canary-493f72b0a-20230727

## Steps To Reproduce

1.  run following code.
```js
import * as ReactDOMServer from ""react-dom/server"";
const element = (
  <html>
    <head>
      {/* meta and title are hoisted */}
      <meta charSet=""utf-8"" />
      <title>title</title>
      {/* the script tag is not hoisted */}
      <script src=""foo""></script>
      {/* but this is hoisted */}
      <script src=""foo"" async></script>
    </head>
  </html>
);

console.log(ReactDOMServer.renderToString(element));
```

<!--
  Your bug will get fixed much faster if we can run your code and it doesn't
  have dependencies other than React. Issues without reproduction steps or
  code examples may be immediately closed as not actionable.
-->

Link to code example:
https://codesandbox.io/s/react1830-canary-493f72b0a-20230727-ssr-hoist-bug-lvhj45?file=/src/index.js
<!--
  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a
  repository on GitHub, or provide a minimal code example that reproduces the
  problem. You may provide a screenshot of the application if you think it is
  relevant to your bug report. Here are some tips for providing a minimal
  example: https://stackoverflow.com/help/mcve.
-->

## The current behavior
console.log outputs `<meta charSet=""utf-8""/><script src=""foo"" async=""""></script><title>title</title><html><head><script src=""foo""></script></head></html>`

## The expected behavior
console.log outputs `<html><head><meta charSet=""utf-8""/><title>title</title><script src=""foo""></script><script src=""foo"" async=""""></script></head></html>`"
facebook/react,2023-07-17 22:43:05,bug,[DevTools Bug]: Chrome extension gets disconnected from the page after 30sec of inactivity,"### Website or app

https://react.dev/

### Repro steps

Steps:
1. go to a react page like https://react.dev/
2. open the devtools Components tab, everything works correctly.
3. change tab (a non react one) and wait 30 sec - 5 min (not super exact)
4. go back to the tab that has the react page you're debugging
5. the Components does not work anywore: you can't select and view components on the page.

![Screenshot 2023-07-17 at 3 40 10 PM](https://github.com/facebook/react/assets/6637867/6e04b8e9-c219-4a2e-a2c3-d6f2f3e61b2f)

My guess is that it's related to Chrome killing the service worker after inactivity on the page. See https://bugs.chromium.org/p/chromium/issues/detail?id=1152255#c185

![Screenshot 2023-07-17 at 3 41 13 PM](https://github.com/facebook/react/assets/6637867/c59e359a-f3ee-4af3-a331-fd6afca8dd46)

Going back to the page doesn't seem to wake the serviceworker up.

Chrome: Version 114.0.5735.198 (Official Build) (x86_64)
React Extension: 4.28.0
macOS: 13.4.1


### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-07-13 19:01:47,bug,[DevTools Bug]: Deprecated __REACT_DEVTOOLS_GLOBAL_HOOK__ ????,"### Website or app

N/A

### Repro steps

Hi, I have heard that the new versions of React will not support the REACT_DEVTOOLS_GLOBAL_HOOK. If there any information about this update that you can share. Is there a new way to achieve the same result of using the REACT_DEVTOOLS_GLOBAL_HOOK but with a different method? What is the future of React without the REACT_DEVTOOLS_GLOBAL_HOOK?

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-06-07 17:26:43,bug,"[DevTools Bug]: React devtools stuck at Loading React Element Tree, troubleshooting instructions are Chrome-specific","### Website or app

corporate project (private)

### Repro steps

Load page, then open React DevTools. Reloading or closing and reopening the tab does not fix the problem. Quitting and reopening Firefox sometimes fixes the problem.
<img width=""837"" alt=""image"" src=""https://github.com/facebook/react/assets/2292782/0fbcaf7c-533f-4afd-819c-b9f2749aa765"">

The [linked troubleshooting instructions](https://github.com/facebook/react/blob/main/packages/react-devtools/README.md#the-react-tab-shows-no-components) provide no guidance for users of browsers other than Chrome; I am running Firefox v114 (on macOS 13.2.1).

### How often does this bug happen?

Often

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-05-31 15:17:41,bug,Bug: Radio button onChange not called in current React Canary,"<!--
  Please provide a clear and concise description of what the bug is. Include
  screenshots if needed. Please test using the latest version of the relevant
  React packages to make sure your issue has not already been fixed.
-->

React version: 18.3.0-canary-a1f97589f-20230526


## Steps To Reproduce

1. Create radio buttons that toggle `disabled` in `onChange`
2. After selecting each radio button, `onChange` is no longer called

<!--
  Your bug will get fixed much faster if we can run your code and it doesn't
  have dependencies other than React. Issues without reproduction steps or
  code examples may be immediately closed as not actionable.
-->

Link to code example:

The following CodeSandbox demonstrates the issue with the current react canary version. The issue is not present when react & react-dom versions are changed to stable 18.2.0

https://codesandbox.io/s/react-canary-radio-buttons-deiqb3?file=/src/App.js

<!--
  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a
  repository on GitHub, or provide a minimal code example that reproduces the
  problem. You may provide a screenshot of the application if you think it is
  relevant to your bug report. Here are some tips for providing a minimal
  example: https://stackoverflow.com/help/mcve.
-->

## The current behavior
`<input type=""radio"" />`'s `onChange` prop is not called on subsequent clicks of the input

## The expected behavior
`<input type=""radio"" />`'s `onChange` prop should be called on subsequent clicks of the input
"
facebook/react,2023-05-16 18:27:09,bug,[DevTools Bug]: Strict mode badge points to the old docs,"### Website or app

https://fb.me/devtools-strict-mode

### Repro steps

The Strict mode warning badge points to https://fb.me/devtools-strict-mode which points to the strict mode section in [the old docs](https://legacy.reactjs.org/docs/strict-mode.html) instead of [the new docs](https://react.dev/reference/react/StrictMode).

Badge:
<img width=""273"" alt=""Screenshot 2023-05-16 at 20 20 59"" src=""https://github.com/facebook/react/assets/37460589/2b3cbcf0-43b7-4f71-a420-02d31258ef92"">

Code:
https://github.com/facebook/react/blob/4cd7065665ea2cf33c306265c8d817904bb401ca/packages/react-devtools-shared/src/devtools/views/Components/InspectedElement.js#L240

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-05-08 16:35:24,bug,[DevTools Bug]: Regression - profiling doesn't store props value ,"### Website or app

Doesn't apply

### Repro steps

Old version of DevTools provided ability to see changes in props / state between commits.
https://legacy.reactjs.org/cc2a8b37bbce52c49a11c2f8e55dccbc/see-which-props-changed.gif

Current version provide information about the reason to re-render, but lack of ability to see exactly how props / state variables are changing between re-renders is a huge regression for utility of Profiler.

Components tab keeps only the latest values for the props / state.

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-05-06 23:03:50,bug,"[DevTools Bug] Cannot add node ""1751"" because a node with that id is already in the Store.","### Website or app

local repo

### Repro steps

Loading a React component with the React profiler recording enabled

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.6-7f8c501f6

### Error message (automated)

Cannot add node ""1751"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28581:41
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26606:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26775:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:57029:39)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2023-05-02 03:53:41,bug,[DevTools Bug]: React pages not being detected as using React in Incognito mode,"### Website or app

https://opensource.fb.com

### Repro steps

It seems that with the latest update of Chrome and React DevTools, it cannot detect pages as using React on incognito. Screenshot attached below:

<img width=""518"" alt=""image"" src=""https://user-images.githubusercontent.com/34370238/235575519-8eeaa3c5-80fa-4cc4-a33d-3d2f0541f0d9.png"">

* _Chrome version: 112.0.5615.137 (arm64)_
* _React DevTools version: 4.27.6 (4/20/2023)_

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-04-24 07:00:55,bug,[DevTools Bug]: components tree not loaded in Microsoft Edge,"### Website or app

https://react.dev/

### Repro steps

1. Load react app in Microsoft Edge
2. Open dev tools and go to components tree 
3. The tree is not loaded: 
4. This is the message I get: Loading React Element Tree... If this seems stuck, please follow the [troubleshooting instructions](https://github.com/facebook/react/blob/main/packages/react-devtools/README.md#the-react-tab-shows-no-components).

Edge version - latest: Microsoft Edge
Version 112.0.1722.58 (Official build) (64-bit)

![image](https://user-images.githubusercontent.com/16520016/233919983-66f889b5-4f53-416f-8609-e6f8b9cc205c.png)


### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-04-07 09:03:43,bug,"[DevTools Bug] Cannot add node ""108084"" because a node with that id is already in the Store.","### Website or app

local react development 

### Repro steps

Open React Dev Tools

### How often does this bug happen?

Often

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.3-28ce1c171

### Error message (automated)

Cannot add node ""108084"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28167:41
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26196:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26365:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56618:39)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2023-04-04 12:09:08,bug,[DevTools Bug]: DevTools settings are not being saved in the Edge browser,"### Website or app

https://react.dev/

### Repro steps

1. Open DevTools
2. Click View Settings
3. Change one of the options
4. Refresh page
5. No option is being saved

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-03-22 18:12:35,bug,[DevTools Bug]: 'Unable to find React on the page' in incognito on Firefox,"### Website or app

https://react.dev

### Repro steps

1. Open an incognito tab
2. visit a react 18 website
3. try and use dev tools (I'm on `4.27.1`)

<img width=""1728"" alt=""CleanShot 2023-03-22 at 11 10 16@2x"" src=""https://user-images.githubusercontent.com/8675906/226998803-79f8e57b-ab7f-46e1-9cad-8744fe92296a.png"">


### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-03-14 19:55:26,bug,"[DevTools Bug] Cannot add node ""8891"" because a node with that id is already in the Store.","### Website or app

localhost

### Repro steps

Tried to use the react dev tools Components tab inspector tool

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.2-1a88fbb67

### Error message (automated)

Cannot add node ""8891"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27863:41
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25892:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26061:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56323:39)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2023-03-03 19:05:34,bug,Bug: Error occurs when returning empty fragment '<></>' on a page,"In was working when i comment a code and see this error
Then i start to test possible ways of reproduce the bug
Notes: 
1.using <>{null}</> dont give the error
2.using <>{undefined}</> give the error

React version: 18.2.0

## Steps To Reproduce

1.import { Fragment } from ""react"";

export default async function Companies() {
  return ( 
<Fragment ></Fragment > {/* Or => <></>*/}
 );
}

2.Start the localHost (dev server, etc)

## The current behavior

<img width=""739"" alt=""image"" src=""https://user-images.githubusercontent.com/101187684/222805443-ecd39b24-461e-404c-a2fb-b02199837278.png"">


## The expected behavior

<img width=""960"" alt=""image"" src=""https://user-images.githubusercontent.com/101187684/222805607-870260bb-7643-4502-89cc-24189fe952f2.png"">
"
facebook/react,2023-02-23 04:42:56,bug,why not?[DevTools Bug]: ,"### Website or app

Website

### Repro steps

Loading React Element Tree...

If this seems stuck, please follow the [troubleshooting instructions](https://github.com/facebook/react/tree/main/packages/react-devtools#the-issue-with-chrome-v101-and-earlier-versions).

### How often does this bug happen?

Every time

### DevTools package (automated)

Loading React Element Tree...  If this seems stuck, please follow the troubleshooting instructions.

### DevTools version (automated)

Loading React Element Tree...  If this seems stuck, please follow the troubleshooting instructions.

### Error message (automated)

Loading React Element Tree...  If this seems stuck, please follow the troubleshooting instructions.

### Error call stack (automated)

```text
Loading React Element Tree...

If this seems stuck, please follow the troubleshooting instructions.
```


### Error component stack (automated)

```text
Loading React Element Tree...

If this seems stuck, please follow the troubleshooting instructions.
```


### GitHub query string (automated)

```text
Loading React Element Tree...

If this seems stuck, please follow the troubleshooting instructions.
```
"
facebook/react,2023-02-10 17:36:03,bug,Unable to establish connection with the sandpack bundler.[DevTools Bug]: ,"### Website or app

https://beta.reactjs.org/learn/sharing-state-between-components

### Repro steps

https://beta.reactjs.org/learn/sharing-state-between-components
Unable to establish connection with the sandpack bundler.

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-02-03 16:17:32,bug,[DevTools Bug]: React Dev Tools breaks craigslist?,"### Website or app

https://newyork.craigslist.org/search/hhh

### Repro steps

1. Enable React Dev Tools
2. Visit https://newyork.craigslist.org/search/hhh
3. 50% of the time you will see broken page https://imgur.com/a/yJPeAvA
4. Disable React Dev Tools
5. Visit https://newyork.craigslist.org/search/hhh
6. 100% of the time you will see a working page

### How often does this bug happen?

Often

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

```text
TypeError: svs-boot-setManifest-exception:Cannot read properties of null (reading 'insertBefore')
    at cl.injectCss (bbe8a523a089547e594fa2f101021699a377645c.js:6:12097)
    at cl.injectResource (bbe8a523a089547e594fa2f101021699a377645c.js:6:14293)
    at bbe8a523a089547e594fa2f101021699a377645c.js:6:20658
    at Array.forEach (<anonymous>)
    at injectResourceSet (bbe8a523a089547e594fa2f101021699a377645c.js:6:20634)
    at bigBang (bbe8a523a089547e594fa2f101021699a377645c.js:6:17286)
    at cl.setManifest (bbe8a523a089547e594fa2f101021699a377645c.js:6:18123)
    at manifest.js:1:4
cl.unexpected @ bbe8a523a089547e594fa2f101021699a377645c.js:6
cl.setManifest @ bbe8a523a089547e594fa2f101021699a377645c.js:6
(anonymous) @ manifest.js:1
VM1218:1 Uncaught SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at localStorage-092e9f9e2f09450529e744902aa7cdb3a5cc868d.html:38:37
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-01-30 03:38:53,bug,[DevTools Bug]: Expected static flag was missing,"### Website or app

https://github.com/Contrick64/scryfall-random

### Repro steps

This error reproduces on initial page load. I can't seem to find what caused it to start showing up, as it points to a part of my code that has existed since well before I first got the error.

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-01-25 11:39:56,bug,"ERROR TypeError: Cannot read property 'createElement' of undefined, js engine: hermes","### Website or app

I'm using flipper to debug react-native app

### Repro steps

migrate to current version of RN-0.71.1
using flipper
enable hermes engine
run the APP

[see](https://github.com/facebook/react/issues/26042#issue-1556179961)
[here ](https://github.com/facebook/react-native/issues/35958#issue-1556258460)

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

```text
ERROR TypeError: Cannot read property 'createElement' of undefined, js engine: hermes
ERROR TypeError: Cannot read property 'createElement' of undefined, js engine: hermes
ERROR TypeError: Cannot read property 'createElement' of undefined, js engine: hermes
ERROR TypeError: Cannot read property 'createElement' of undefined, js engine: hermes
```


### Error component stack (automated)

```text
this is related to --->> path: node_modules/react-devtools-core/dist/backend.js
function initialize() {
canvas = window.document.createElement('canvas');
canvas.style.cssText = ""\\n xx-background-color: red;\\n xx-opacity: 0.5;\\n bottom: 0;\\n left: 0;\\n pointer-events: none;\\n position: fixed;\\n right: 0;\\n top: 0;\\n z-index: 1000000000;\\n "";
var root = window.document.documentElement;
root.insertBefore(canvas, root.firstChild);
}
```


### GitHub query string (automated)

_No response_"
facebook/react,2023-01-19 23:00:02,bug,[DevTools Bug]: This page doesn't appear to be using react,"### Website or app

reactjs.org

### Repro steps

Go to website.
Click on the react DevTools icon in the extensions.
after reaload, hover the extension.
![image](https://user-images.githubusercontent.com/7319949/213579759-5a8dcd59-6492-4c67-b8bd-0a09f7017a92.png)
![image](https://user-images.githubusercontent.com/7319949/213581014-fe55022f-783d-4e53-9c9d-3e804e62498a.png)


### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2023-01-05 08:46:14,bug,Bug: Suspense | client component should have a queue,"React version: 18.2.0
Next version: 13.1.1

## Steps To Reproduce

1. Suspend using a (fake) promise in a client component in app dir (next)
2. Try to useState after the use() call

````ts
'use client';

import { use, useState } from 'react';

const testPromise = new Promise((resolve) => {
  setTimeout(() => {
    resolve('use test promise');
  });
});

export default function Page() {
  use(testPromise);
  useState(0);

  return <h1>Test</h1>;
}

````

Link to code example:
https://codesandbox.io/s/github/xiel/app-playground/tree/suspense-error/?from-embed=&file=/app/page.tsx

## The current behavior

Suspending for a promise in a client component and using state/reducer after results in errors during hydration:

```
react-dom.development.js?9d87:94 Warning: An error occurred during hydration. The server HTML was replaced with client 

react-dom.development.js?9d87:94 Warning: You are accessing ""digest"" from the errorInfo object passed to onRecoverableError. 

on-recoverable-error.js?eb92:17 Uncaught Error: Should have a queue. This is likely a bug in React. Please file an issue.
```

## The expected behavior

No error during hydration.
"
facebook/react,2022-12-13 11:39:55,bug,[DevTools Bug]: Too Much Recursion - Firefox & Appsync,"### Website or app

https://eu-west-1.console.aws.amazon.com/appsync/

### Repro steps

1. Use Firefox with React Dev Tools added
2. Log into AWS, go to Appsync console and select an API
3. The app will then freeze and you should get a `too much recursion` error in the console

This only seems to happen in Firefox. Not confident on whether this is a DevTools, Firefox or Appsync issue but it only seems to happen when DevTools is enabled.
![Screenshot 2022-12-13 at 11 29 14](https://user-images.githubusercontent.com/44685146/207308231-68dcbe56-8221-4d46-b644-c3a8f62595b3.png)




### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-12-11 00:02:00,bug,"[DevTools Bug] Element ""5"" not found","### Website or app

local dev environment

### Repro steps

Occurs on app launch

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.0-bd2ad89a4

### Error message (automated)

Element ""5"" not found

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39558:15
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40933:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39771:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42429:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35080:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37705:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44505:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39439:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44686:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44115:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31940:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32584:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39834:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56039:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Element  not found in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-12-06 11:31:26,bug,"[DevTools Bug] Element ""65"" not found","### Website or app

https://sh0ny-it.github.io/hw-master/#/junior

### Repro steps

E

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.0-bd2ad89a4

### Error message (automated)

Element ""65"" not found

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39558:15
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40933:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39771:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42429:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35080:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37705:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44505:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39439:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44686:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44115:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31940:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32584:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39834:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56039:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Element  not found in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-12-05 15:47:21,bug,"[DevTools Bug] Element ""24"" not found","### Website or app

http://localhost:3000

### Repro steps

Someone know solution? I saw a peoples that have same problem, but no one helped :/

### How often does this bug happen?

Only once

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.0-bd2ad89a4

### Error message (automated)

Element ""24"" not found

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39558:15
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40933:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39771:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42429:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35080:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37705:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44505:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39439:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44686:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44115:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31940:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32584:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39834:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56039:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Element  not found in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-12-05 10:48:01,bug,[DevTools Bug]: Components Tab does not show up,"### Website or app

https://beta.reactjs.org/

### Repro steps

1. Visit website
2. Open dev tools

This happens on https://beta.reactjs.org/ but I first noticed in on a personal project (localhost).

When I open the dev tools, the CPU goes up. At first, the Components tab does not show up. After a loooooong time, it does show up, however when I click on it nothing renders inside.

![Screenshot 2022-12-05 at 12 42 04](https://user-images.githubusercontent.com/58694408/205619186-85451e15-9b2f-43d9-b7f6-3ffaba6e7346.png)


I don't know if it's the newest Chrome version or the newest extension version that's causing it.

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-12-04 16:36:01,bug,"[DevTools Bug] Element ""35"" not found","### Website or app

.

### Repro steps

.

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.0-bd2ad89a4

### Error message (automated)

Element ""35"" not found

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39558:15
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40933:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39771:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42429:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35080:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37705:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44505:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39439:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44686:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44115:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31940:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32584:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39834:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56039:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Element  not found in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-12-04 06:45:46,bug,"[DevTools Bug] Element ""7"" not found","### Website or app

The error was thrown at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39558:15

### Repro steps

The error occurred at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40933:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39771:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42429:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35080:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37705:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44505:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39439:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44686:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44115:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31940:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32584:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39834:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56039:3)

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.0-bd2ad89a4

### Error message (automated)

Element ""7"" not found

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39558:15
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40933:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39771:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42429:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35080:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37705:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44505:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39439:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44686:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44115:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31940:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32584:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39834:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56039:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Element  not found in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-12-02 23:53:37,bug,"[DevTools Bug] Element ""717"" not found","### Website or app

http://localhost:3000/managerCr

### Repro steps

Al darle un nuevo key al form, para que este se resetee, me salta este error

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.0-bd2ad89a4

### Error message (automated)

Element ""717"" not found

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39558:15
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40933:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39771:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42429:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35080:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37705:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44505:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39439:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44686:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44115:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31940:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32584:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39834:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56039:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Element  not found in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-12-02 09:38:22,bug,"[DevTools Bug] Element ""34"" not found","### Website or app

test

### Repro steps

React devtool send me this error, how i can fix it

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.0-bd2ad89a4

### Error message (automated)

Element ""34"" not found

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39558:15
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40933:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39771:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42429:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35080:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37705:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44505:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39439:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44686:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44115:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31940:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32584:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39834:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56039:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Element  not found in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-12-01 15:31:57,bug,"[DevTools Bug] Element ""6"" not found","### Website or app

localhost

### Repro steps


If click to the App > State, browser drop me a error ""Element ""6"" not found"", and more red line, i don't understand what is it. Browser updating 10 minutes later to 108.0.5359.72 version. Help me


### How often does this bug happen?

Only once

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.0-bd2ad89a4

### Error message (automated)

Element ""6"" not found

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39558:15
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40933:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39771:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42429:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35080:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37705:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44505:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39439:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44686:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44115:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31940:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32584:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39834:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56039:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Element  not found in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-12-01 04:52:51,bug,"[DevTools Bug] Element ""21"" not found","### Website or app

https://inquisitive-haupia-f14ecb.netlify.app/

### Repro steps

map list

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.27.0-bd2ad89a4

### Error message (automated)

Element ""21"" not found

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39558:15
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40933:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39771:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42429:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35080:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37705:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44505:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39237:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39439:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39409:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44686:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44115:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31940:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32584:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39834:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56039:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Element  not found in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-11-11 12:15:45,bug,[DevTools Bug]: react-devtools depends on vulnerable version of electron,"### Website or app

https://github.com/facebook/react/blob/main/packages/react-devtools/package.json

### Repro steps

### Issue
electron package versions <18.3.7 suffer from a security vulnerability: ""Exfiltration of hashed SMB credentials on Windows via file:// redirect"".
See https://github.com/advisories/GHSA-p2jh-44qj-pf2v

### Solution
Upgrade electron dependency in react-devtools to >18.3.7

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-10-17 08:20:47,bug,"[DevTools Bug] Could not find ID for Fiber ""MiddleSectionContainer""","### Website or app

///

### Repro steps

log in 
inspect element 

### How often does this bug happen?

Only once

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.25.0-336ac8ceb

### Error message (automated)

Could not find ID for Fiber ""MiddleSectionContainer""

### Error call stack (automated)

```text
at getFiberIDThrows (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:7007:11)
    at fiberToSerializedElement (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:8765:11)
    at inspectElementRaw (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:8934:21)
    at Object.inspectElement (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:9237:38)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:11584:56
    at Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:4192:18)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:4838:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:13163:9)
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39612:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37920:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38454:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:41105:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33778:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:36399:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:43155:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37920:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38092:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38122:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38092:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:43336:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42781:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30676:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31302:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38517:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:54684:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Could not find ID for Fiber ""MiddleSectionContainer"" in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-10-06 05:33:48,bug,"[DevTools Bug] Cannot add node ""5370"" because a node with that id is already in the Store.","### Website or app

----

### Repro steps

----

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.25.0-336ac8ceb

### Error message (automated)

Cannot add node ""5370"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26596:41
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24626:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24795:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:54959:39)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-09-09 22:42:43,bug,[DevTools Bug]: React extension tab in Edge DevTools doesn't have emoji prefix in title.,"### Website or app

https://reactjs.org/

### Repro steps

1. Open Developer Tools with React extension on any website that using React in Edge.
2. Check the react extension tab (Profiler and Components), it doesn't have emoji prefix in the title like Chrome does.

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-09-05 03:06:52,bug,[DevTools Bug]: DevTools shouldn't skip over keyed Fragments in the tree,"### Website or app

https://github.com/reactjs/reactjs.org/pull/4981

### Repro steps

1. Wrap something into `<Fragment key=""stuff"">`
2. It doesn't show up in DevTools

We filter out fragments because they tend to be useless. But this one is important! Keys are crucial and we should show anything with a key in the tree.

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-08-23 10:14:02,bug,Bug: out of order application of useState changes,"After updating my app to React 18 I had problem with inconsistent state from useState

I created code example with the problem:
* I have 2 states `const [done, setDone] = useState(false);` (inside hook) and `const [ids, setIds] = React.useState([])`
* I call `setIds([1,2,4])` (inside await, but it's executed immediately, as we see in console) and then `setDone(true)`
* then component is rerendered with updated `done` but original `ids`
* then component is rerendered, but with both states updated

React version: 18.2.0, 18.3.0-next
Link to code example: <https://codesandbox.io/s/purple-dust-ww9hjm?file=/src/index.jsx>
Smaller repro: <https://codesandbox.io/s/cocky-fermat-qoiel3> (from eps1lon's comment)

## The current behavior
In the example after clicking run:
`Inner` is rerendered with `done: true`, but without updated `ids`.
`FormikLike` is created with empty `ids`.
`[]` is displayed under button.


## The expected behavior
First `Inner` rerender should have updated `ids` state.
`FormikLike` should be created with non-empty `ids`.
`[1,2,4]` is displayed under button.

It workied this way in React 17.

In https://stackoverflow.com/a/48610973 @gaearon wrote:
> > But can you trust React to update the state in the same order as setState is called for the same component?
>
> Yes.

Answer was for class components, but I hope the same is true for multiple useState hooks in single function component."
facebook/react,2022-08-11 13:08:10,bug,"[DevTools Bug] Cannot add node ""7448"" because a node with that id is already in the Store.","### Website or app

https://github.com/digita-webshop/digita-webshop-frontend/tree/develop

### Repro steps

1) npm install
2) npm start
3) inspect element
4) components tab


### How often does this bug happen?

Sometimes

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.25.0-336ac8ceb

### Error message (automated)

Cannot add node ""7448"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
emit@moz-extension://9908b50a-48f2-40b1-9532-79813e5a6947/build/main.js:24626:22
bridge_Bridge/this._wallUnlisten<@moz-extension://9908b50a-48f2-40b1-9532-79813e5a6947/build/main.js:24795:14
listener@moz-extension://9908b50a-48f2-40b1-9532-79813e5a6947/build/main.js:54959:41
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-07-27 06:25:25,bug,"[DevTools Bug]: ""open in editor"" not working for vscode remote files","### Website or app

empty

### Repro steps

/data/home/xxxx/src/test.tsx

1. Inspect component
2. User clicks ""open in editor""
3. file not found

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-07-20 15:32:03,bug,[DevTools Bug]: window.bundle.js:2 TypeError: Cannot read properties of undefined (reading 'action'),"### Website or app

https://onepiece-cardgame.dev/builder?f=%24R+%28%22zoro%22%29

### Repro steps

1. Load webpage
2. Tools doesnt work

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-07-15 06:54:26,bug,"[DevTools Bug] Could not inspect element with id ""69""","### Website or app

Internal company application  

### Repro steps

Sometimes I got this error, I solve it be restart my device 

### How often does this bug happen?

Sometimes

### DevTools package (automated)

react-devtools-core

### DevTools version (automated)

4.14.0-d0ec283819

### Error message (automated)

Could not inspect element with id ""69""

### Error call stack (automated)

```text
Uncaught Error: Could not inspect element with id ""69""

The error occurred at Ni (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:261874)
    at Suspense
    at yl (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:248667)
    at div
    at Tl (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:252578)
    at Ji (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:278469)
    at div
    at div
    at Oa (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:229816)
    at Va (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:236032)
    at /Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:305187
    at yl (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:248667)
    at /Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:249909
    at div
    at div
    at Ns (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:299485)
    at vn (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:180478)
    at Un (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:194071)
    at Pl (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:253263)
    at kc (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:339874)
```


### Error component stack (automated)

```text
at Ni (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:261874)
    at Suspense
    at yl (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:248667)
    at div
    at Tl (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:252578)
    at Ji (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:278469)
    at div
    at div
    at Oa (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:229816)
    at Va (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:236032)
    at /Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:305187
    at yl (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:248667)
    at /Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:249909
    at div
    at div
    at Ns (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:299485)
    at vn (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:180478)
    at Un (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:194071)
    at Pl (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:253263)
    at kc (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:339874)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Could not inspect element with id  in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-07-07 17:02:35,bug,"[DevTools Bug] Cannot remove node ""0"" because no matching node was found in the Store.","### Website or app

Bitbucket repo

### Repro steps

just npm react-devtools and run

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-core

### DevTools version (automated)

4.24.7-7f673317f

### Error message (automated)

Cannot remove node ""0"" because no matching node was found in the Store.

### Error call stack (automated)

```text
at /Users/matt/.config/yarn/global/node_modules/react-devtools-core/dist/standalone.js:48:333971
    at f.emit (/Users/matt/.config/yarn/global/node_modules/react-devtools-core/dist/standalone.js:48:279464)
    at /Users/matt/.config/yarn/global/node_modules/react-devtools-core/dist/standalone.js:48:281005
    at /Users/matt/.config/yarn/global/node_modules/react-devtools-core/dist/standalone.js:48:667650
    at Array.forEach (<anonymous>)
    at A.e.onmessage (/Users/matt/.config/yarn/global/node_modules/react-devtools-core/dist/standalone.js:48:667634)
    at A.t (/Users/matt/.config/yarn/global/node_modules/react-devtools-core/dist/standalone.js:39:2838)
    at A.emit (events.js:315:20)
    at e.exports.L (/Users/matt/.config/yarn/global/node_modules/react-devtools-core/dist/standalone.js:3:58322)
    at e.exports.emit (events.js:315:20)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-07-05 03:46:47,bug,[DevTools Bug]: Uncaught TypeError: hook.sub is not a function,"### Website or app

New project created by CRA

### Repro steps

1. create a new project by CRA on mac os Monterey v12.4;
2. import 'react-devtools' at first line of `src/index.tsx`;
3. sudo npm i --location=global react-devtools;
4. npx react-devtools;
5. in my raect app console run `t=document.createElement('script'); t.type='text/javascript'; t.src='http://localhost:8097'; document.head.prepend(t)`;
6. Uncaught TypeError: hook.sub is not a function, below are some screenshots.
<img width=""659"" alt=""error"" src=""https://user-images.githubusercontent.com/13808186/177245359-f55c0017-d833-4043-8a0a-43cc3c4eb5b1.png"">
<img width=""647"" alt=""location"" src=""https://user-images.githubusercontent.com/13808186/177245574-4fb78d7d-2abc-423b-9ef5-006007c70081.png"">



### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-06-29 02:11:00,bug,"[DevTools Bug] Cannot remove node ""25"" because no matching node was found in the Store.","### Website or app

localhost

### Repro steps

This error occurs every time I rebuild my React app

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.24.7-7f673317f

### Error message (automated)

Cannot remove node ""25"" because no matching node was found in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26516:43
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24434:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24603:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:54566:39)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-06-08 13:57:18,bug,[DevTools Bug]: devtool show every page use `React`,"### Website or app

https://vuejs.org/guide/introduction.html

### Repro steps

Open the [Vue3](https://vuejs.org/guide/introduction.html) doc site, then `react` devtool show this page use  procution build of `React`
<img width=""1141"" alt=""Screen Shot 2022-06-08 at 9 53 07 PM"" src=""https://user-images.githubusercontent.com/20318608/172634699-e12ac63f-da07-49ea-8181-3f569d8abddc.png"">

And Github too
<img width=""1200"" alt=""Screen Shot 2022-06-08 at 9 56 19 PM"" src=""https://user-images.githubusercontent.com/20318608/172634864-3e505afc-aa2b-4781-b7c1-ffce9df78635.png"">

I'm using Crome
Version 102.0.5005.61 (Official Build) (x86_64)

<img width=""424"" alt=""Screen Shot 2022-06-08 at 10 00 58 PM"" src=""https://user-images.githubusercontent.com/20318608/172636242-0944aecf-c532-4271-b59b-cda3ceccf553.png"">



### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-06-05 03:26:15,bug,[DevTools Bug]: Warning: Internal React error: Expected static flag was missing. Please notify the React team.,"### Website or app

https://codepen.io/alejozarate/pen/zYRLKww

### Repro steps

The component is successfully rendered with all the interactions working properly.

As far as I can tell, the error is only shown in the console. The traceback point to the line 15 of the codepen:

const _ahr = await SContract.methods.rewardPerHour().call();

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-05-26 02:08:32,bug,"[DevTools Bug] When inspecting, hook values after `useDeferredValue` are offset","### Website or app

https://github.com/Alduino/React-useDeferredValue-DevTools-Reprod

### Repro steps

1. Start the app in either dev or production mode.
2. Open the React dev tools
3. Click on the ""App"" component
4. The first Memo has the value `3.14` (the value that the second Memo should have) instead of `1.41`

If you want it to throw an error instead of just looking at the values, you can set `window.throwIfIncorrect = true` before DevTools inspects the component.

I tried in CodeSandbox's embedded React dev tools as well - the issue happens in React 18.0 (though the first hook has no value and the second has the first hook's value) but it doesn't happen in 18.1.

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.24.0-82762bea5

### Error message (automated)

First is 3.14 when it should be 1.41

### Error call stack (automated)

```text
I@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:14022:6
exports.inspectHooksOfFiber@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:14090:12
inspectElementRaw@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:8847:65
inspectElement@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:9130:38
agent_Agent/<@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:11002:56
emit@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:4137:18
Bridge/this._wallUnlisten<@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:4780:14
listener@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:12986:11
EventListener.handleEvent*listen@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:12989:14
Bridge@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:4778:31
setup@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:12979:18
welcome@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:12958:8
EventListener.handleEvent*@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:12961:8
__webpack_require__@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:20:30
@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:84:18
@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/react_devtools_backend.js:87:10
```


### Error component stack (automated)

```text
InspectedElementContextController@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:39159:43
Suspense
ErrorBoundary_ErrorBoundary@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:37513:5
div
InspectedElementErrorBoundaryWrapper@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:38001:46
NativeStyleContextController@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:40650:38
div
div
OwnersListContextController@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:33491:37
SettingsModalContextController@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:36112:40
Components_Components@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:42701:52
ErrorBoundary_ErrorBoundary@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:37513:5
div
div
ThemeProvider@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:37655:23
PortaledContent@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:37685:34
div
div
div
ThemeProvider@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:37655:23
TimelineContextController@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:42881:35
ProfilerContextController@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:42326:35
TreeContextController@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:30393:31
SettingsContextController@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:31015:35
ModalDialogContextController@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:38064:38
DevTools_DevTools@moz-extension://38b0497f-37d9-49e7-9147-393888469493/build/main.js:54073:27
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=First is 3.14 when it should be 1.41 in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-05-19 06:17:14,bug,"[DevTools Bug] Cannot add node ""1"" because a node with that id is already in the Store.","### Website or app

http://localhost:3000/typeofFood

### Repro steps

.

### How often does this bug happen?

Often

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.24.6-ca7a38ae4

### Error message (automated)

Cannot add node ""1"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26389:41
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24436:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24605:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:54547:39)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-05-12 18:21:01,bug,[DevTools Bug]: Chrome Devtools missing from Chrome extensions Webstore - 404 response,"### Website or app

https://chrome.google.com/webstore/detail/react-developer-tools/

### Repro steps

The download page for the Chrome React Devtools extension returns 404. I checked the Firefox developer tools download page and that's still up.

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-05-12 09:55:13,bug,[DevTools Bug]: console.log crashes when I enable DevTools on Chrome,"### Website or app

https://github.com/coolwind0202/web/blob/23877f77e23837a007aada5be363d65290571c88/web/src/components/page/members/IndexPage/IndexPage.tsx#L27

### Repro steps

For checking whenever my project will work correctly, when I run a command `next dev`, errors which are shown below occurred.

![image](https://user-images.githubusercontent.com/51913600/168043187-bf77a943-39c4-45d3-9a1d-2cdf97c904df.png)

When I pass a first argument which is an **object** to `console.log()`, `console.error()`, `console.warn()`, I can repro the errors.
for example, 
```
console.log([]);
console.error({});
```

Before a few days, the errors had never occured.
When I disable DevTools, the errors calm down.

I think, the errors may be caused by the codes which are shown below.
https://github.com/facebook/react/blob/7d9e17a9826595dacbf9e19e8f85b07837adf276/packages/react-devtools-shared/src/backend/utils.js#L193

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-05-11 08:52:21,bug,[DevTools Bug]: Component shown twice in flame graph when using React.memo,"### Website or app

I cannot provide. Private.

### Versions

- React Developer Tools 4.24.3 (3/30/2022)
-  ""react"": ""^17.0.2"",
- ""react-dom"": ""^17.0.2"",

### Repro steps

I am using react-devtools to profile my app.
When a component is wrapped in React.memo and a custom comparison function is provided, that component shows up twice in the Flamegraph. 
I tried with different components in the app and the behaviour is always the same. 
I tried with both the chrome extension and the stand-alone npm package.

Shows only one instance in Flamegraph:
`export default React.memo(SurfacesSelector)`

Shows up twice in Flamegraph:
`export default React.memo(SurfacesSelector, customShallowEqual)`

OR

```
export default React.memo(SurfacesSelector, (prevProps: SurfacesSelectorProps, nextProps: SurfacesSelectorProps) => {
      if (deepEqual(prevProps.enabledSurfaces, nextProps.enabledSurfaces)) {
      return false;
    }
    if (deepEqual(prevProps.surfaces, nextProps.surfaces)) {
      return false;
    }
    return shallowEqual(prevProps, nextProps);
})
```

See the following screenshots for the result.
![Screen Shot 2022-05-11 at 10 35 11](https://user-images.githubusercontent.com/12138301/167808653-32c04c1f-eec5-44d0-ba03-6cc1be26547b.jpg)
![Screen Shot 2022-05-11 at 10 34 56](https://user-images.githubusercontent.com/12138301/167808672-98dbd9c1-2e27-4dc7-a9a1-b0d2e063410a.jpg)



### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-04-28 14:39:31,bug,Bug: setState is not flushed if an iframe is added in the same tick in Safari,"Batched state changes are not flushed if the promise code changes the DOM (= attaching an iframe). Reproduceable with Safari.

React version: 18.1.0

## Steps To Reproduce

1. Open [codepen](https://codepen.io/kh-viewar/pen/wvpVLxM) with Safari.
2. Click ""Upload""
3. => ""Spinner"" text does not render while Promise is in pending

Link to code example:

https://codepen.io/kh-viewar/pen/wvpVLxM

## The current behavior

State changes are not executed.

## The expected behavior

State should change to true and render spinner component. After promise is resolved (2 seconds timeout), state should switch back to false and spinner component should unmount.

## Original discussion

https://github.com/facebook/react/issues/24365"
facebook/react,2022-04-25 19:40:15,bug,"[DevTools Bug] Cannot add node ""1"" because a node with that id is already in the Store.","### Website or app

https://github.com/edavetisyan/Recipes

### Repro steps

running react-native debugger


### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-core

### DevTools version (automated)

4.14.0-d0ec283819

### Error message (automated)

Cannot add node ""1"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
at /usr/lib/react-native-debugger/node_modules/react-devtools-core/dist/standalone.js:48:140545
    at c.emit (/usr/lib/react-native-debugger/node_modules/react-devtools-core/dist/standalone.js:48:89515)
    at /usr/lib/react-native-debugger/node_modules/react-devtools-core/dist/standalone.js:48:90986
    at /usr/lib/react-native-debugger/node_modules/react-devtools-core/dist/standalone.js:48:347787
    at Array.forEach (<anonymous>)
    at S.Gc.e.onmessage (/usr/lib/react-native-debugger/node_modules/react-devtools-core/dist/standalone.js:48:347771)
    at S.n (/usr/lib/react-native-debugger/node_modules/react-devtools-core/dist/standalone.js:40:3009)
    at S.emit (events.js:315:20)
    at e.exports.P (/usr/lib/react-native-debugger/node_modules/react-devtools-core/dist/standalone.js:8:9318)
    at e.exports.emit (events.js:315:20)
    at e.exports.dataMessage (/usr/lib/react-native-debugger/node_modules/react-devtools-core/dist/standalone.js:8:15409)
    at e.exports.getData (/usr/lib/react-native-debugger/node_modules/react-devtools-core/dist/standalone.js:8:14651)
    at e.exports.startLoop (/usr/lib/react-native-debugger/node_modules/react-devtools-core/dist/standalone.js:8:12066)
    at e.exports._write (/usr/lib/react-native-debugger/node_modules/react-devtools-core/dist/standalone.js:8:11421)
    at doWrite (_stream_writable.js:403:12)
    at writeOrBuffer (_stream_writable.js:387:5)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-04-21 14:08:39,bug,[DevTools Bug]: Error in event handler: Error: Attempting to use a disconnected port object,"### Website or app

https://codesandbox.io/s/blissful-raman-2on7k2

### Repro steps

1. Create a react app 
```
yarn create react-app test-react
cd test-react
yarn start
```
2. Create `.env.development` file in root.
```
HTTPS=true
PORT=4100
BROWSER=none
```
3. Visit https://localhost:4100/ in Chrome v100.0.4896.127
4. Open React Devtools by inspecting page, some times it shows `Components` tab but in large application it does not show the `Components` tab. If it shows the tab the error message is sent to dev tools every second.
5. See error message in [chrome://extensions/](chrome://extensions/)

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-04-15 16:28:29,bug,"Bug: Incorrect Hydration Mismatch Detection during Suspense - ""Hydration failed because the initial UI does not match what was rendered on the server.""","React version: 18.0.0

## Steps To Reproduce

1. Add a Suspense Boundary
2. Add a **component that will suspend** to load some data (faked).
3. Render at least one **sibling component** _after_ the suspending component.
3. Render server-side using renderToPipeableStream()
4. Render client-side using hydrateRoot()

__Reproductions in CodeSandbox:__

- [Reproduction 1](https://yt3148.sse.codesandbox.io) with Next.js [Edit](https://codesandbox.io/s/github/xiel/SuspenseHydrationErrorNext)
- [Reproduction 2](https://codesandbox.io/s/brave-euclid-lx3et7?file=/server/render.js) using renderToPipeableStream (based on [example demo](https://codesandbox.io/s/kind-sammet-j56ro?file=/server/render.js:1054-1614))

````jsx
<>
  <h4>This headline hydrates fine. </h4>
  <SomethingA />{/* Will suspend on client and server */}
  <h3>💥 This element after the suspending Component triggers an error (only in development).</h3>
</>
````

## The current behavior

- The sibling component following the suspending component is incorrectly seen as a **hydration mismatch**.
- Console will show errors (and Next.js will show big error overlay):

````
Warning: Expected server HTML to contain a matching <h3> in <div>.
    at h3
    at IndexPage
    at Suspense
    at App (webpack-internal:///./pages/_app.js:42:27)
    at ErrorBoundary (webpack-internal:///./node_modules/next/dist/compiled/@next/react-dev-overlay/client.js:8:20638)
    at ReactDevOverlay (webpack-internal:///./node_modules/next/dist/compiled/@next/react-dev-overlay/client.js:8:23179)
    at Container (webpack-internal:///./node_modules/next/dist/client/index.js:323:9)
    at AppContainer (webpack-internal:///./node_modules/next/dist/client/index.js:825:26)
    at Root (webpack-internal:///./node_modules/next/dist/client/index.js:949:27)
````

````
Uncaught Error: Hydration failed because the initial UI does not match what was rendered on the server.
    at throwOnHydrationMismatch (react-dom.development.js?ac89:14344:1)
    at tryToClaimNextHydratableInstance (react-dom.development.js?ac89:14372:1)
    at updateHostComponent$1 (react-dom.development.js?ac89:20636:1)
    at beginWork (react-dom.development.js?ac89:22373:1)
    at HTMLUnknownElement.callCallback (react-dom.development.js?ac89:4157:1)
    at Object.invokeGuardedCallbackDev (react-dom.development.js?ac89:4206:1)
    at invokeGuardedCallback (react-dom.development.js?ac89:4270:1)
````

- Depending on the location of the suspending component and their siblings, there are errors or no errors at all. When the suspending component is the last component, there are no errors logged.
- Error can be suppressed by wrapping the suspending component in a Suspense boundary directly

## The expected behavior

- I expect to be able to use the same fetching mechanism using suspense on server and client in [React v18](https://reactjs.org/blog/2022/03/29/react-v18.html#suspense-in-data-frameworks).
_OR_
- If this is unsupported usage, the errors should be more clear and consistent."
facebook/react,2022-04-12 15:27:31,bug,Bug: Some transition updates haven't been rendered,"<!--
  Please provide a clear and concise description of what the bug is. Include
  screenshots if needed. Please test using the latest version of the relevant
  React packages to make sure your issue has not already been fixed.
-->

React version: 18.0.0

## Steps To Reproduce

1. Write a react component with the following code:

```jsx
import React, { useState, startTransition } from 'react';

export default function App() {
  const arr = Array(9999).fill(1);
  const [value, setValue] = useState(0);
  const handleInputChange = (e) => {
    console.log(e.target.value);
    startTransition(() => {
      setValue(e.target.value);
    });
  };
  const getValues = () => {
    return arr.map((item, index) => {
      return (
        <div key={index}>
          {value}-{index}
        </div>
      );
    });
  };
  return (
    <div>
      <input type=""text"" onChange={handleInputChange} />
      <div>{getValues()}</div>
    </div>
  );
}
```
2. input content in the `<input />` at a very fast speed.
3. As shown in the figure below, all the contents I entered for the first time have been rendered. But the second time I input `216948261894`, only `216948` is rendered, and the following characters are not rendered.
![img](https://s1.ax1x.com/2022/04/12/LnoNvQ.gif)

<!--
  Your bug will get fixed much faster if we can run your code and it doesn't
  have dependencies other than React. Issues without reproduction steps or
  code examples may be immediately closed as not actionable.
-->

Link to code example:

https://codesandbox.io/s/react18-starttransition-5u1en2?file=/src/App.js

<!--
  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a
  repository on GitHub, or provide a minimal code example that reproduces the
  problem. You may provide a screenshot of the application if you think it is
  relevant to your bug report. Here are some tips for providing a minimal
  example: https://stackoverflow.com/help/mcve.
-->

## The current behavior

As shown in the figure below, all the contents I input for the first time have been rendered. But the second time I input `216948261894`, only `216948` is rendered, and the following characters are not rendered.

## The expected behavior

Everything I input should be rendered."
facebook/react,2022-04-05 14:21:22,bug,Bug: componentWillUnmount is called twice,"React version: 18.0.0

## Steps To Reproduce

`componentWillUnmount` is called twice upon toggling the rendered component. Even when **StrictMode** is disabled

Link to code example: https://codesandbox.io/s/componentwillunmount-called-twice-hrpzy5?file=/src/App.js

## The current behavior

After upgrading to react 18 we've seen some different behavior in a conditionally rendered, lazy class component. 

In the provided code example the class component is rendered first. After the first toggle, the class component's componentWillUnmount is called twice. 

Subsequent toggle calls correctly lead to a single componentWillUnmount invocation.

This does only seem to affect the class component when its rendered first. If the condition is changed to initially show the other function component the class component unmounts just fine

## The expected behavior

The class component's componentWillUnmount is only called once"
facebook/react,2022-04-04 00:59:24,bug,Bug: `suppressHydrationWarning` is not taken into account in production builds in React 18,"<!--
  Please provide a clear and concise description of what the bug is. Include
  screenshots if needed. Please test using the latest version of the relevant
  React packages to make sure your issue has not already been fixed.
-->

React version: 18 

## Steps To Reproduce

1. Clone https://github.com/Avansai/next-multilingual
2. run: npm install
3. run: npm build
4. run: npm run start-example-build
5. Go to the following URL: http://localhost:3000/fr-ca/tests/routes-dynamiques/123
6. Open the console log: no errors
7. Kill the app, and update the react and react-dom package to version 18.0
8. Re-run steps 2 to 5
9. Open the console log: lots of hydration errors #[425](https://reactjs.org/docs/error-decoder.html?invariant=425), #[418](https://reactjs.org/docs/error-decoder.html?invariant=418) and #[423](https://reactjs.org/docs/error-decoder.html?invariant=423).

<!--
  Your bug will get fixed much faster if we can run your code and it doesn't
  have dependencies other than React. Issues without reproduction steps or
  code examples may be immediately closed as not actionable.
-->

Link to code example:

https://github.com/Avansai/next-multilingual

<!--
  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a
  repository on GitHub, or provide a minimal code example that reproduces the
  problem. You may provide a screenshot of the application if you think it is
  relevant to your bug report. Here are some tips for providing a minimal
  example: https://stackoverflow.com/help/mcve.
-->

## The current behavior

Using React 18, the tests are failing because of the errors being thrown in the console. 

<img width=""935"" alt=""image"" src=""https://user-images.githubusercontent.com/6453322/161457567-c0777ffa-a3e5-4e21-80bc-51619942299f.png"">

I confirmed this was related to `suppressHydrationWarning` because as soon as I removed the following code from: https://github.com/Avansai/next-multilingual/blob/main/example/pages/tests/dynamic-routes/%5Bid%5D.tsx#L37

```jsx
<tr>
  <td>{messages.format('rowLocalizedWithAsPath')}</td>
  {/* Adding `suppressHydrationWarning` until
  https://github.com/vercel/next.js/issues/32772 is resolved */}
  <td suppressHydrationWarning={true}>{asPath}</td>
</tr>
```

The errors stop. However, I could not find any mention that `suppressHydrationWarning` was no longer supported with React 18 and these errors are only triggered on builds, not in dev mode (which is why I am opening this issue)

## The expected behavior

`suppressHydrationWarning`  should prevent these errors from being thrown."
facebook/react,2022-04-03 15:03:00,bug,"[DevTools Bug] Cannot add child ""2"" to parent ""1"" because parent node was not found in the Store.","### Website or app

https://github.com/Sam-Apostel/3d-browser/tree/f124285a55930bb78e42099e33047827919cb800

### Repro steps

clone the repo at the linked commit
- npm install
- npm run dev
- open localhost:3000
- open react devtools
- refresh the page

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-core

### DevTools version (automated)

4.23.0-e28a0db22

### Error message (automated)

Cannot add child ""2"" to parent ""1"" because parent node was not found in the Store.

### Error call stack (automated)

```text
at /usr/local/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:53:330974
    at c.emit (/usr/local/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:53:277732)
    at /usr/local/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:53:279273
    at /usr/local/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:53:659742
    at Array.forEach (<anonymous>)
    at A.e.onmessage (/usr/local/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:53:659726)
    at A.t (/usr/local/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:44:3009)
    at A.emit (events.js:315:20)
    at e.exports.L (/usr/local/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:8:13567)
    at e.exports.emit (events.js:315:20)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add child  to parent  because parent node was not found in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-03-30 15:10:06,bug,"NPM ""version"" export format changed (now includes SHA and date)","React version: 18.0.0

## Steps To Reproduce

1. `import { version } from ""react""`
2. `console.log(version)`

<!--
  Your bug will get fixed much faster if we can run your code and it doesn't
  have dependencies other than React. Issues without reproduction steps or
  code examples may be immediately closed as not actionable.
-->

Link to code example:

https://codesandbox.io/s/new-platform-dvqpp8?file=/src/App.js

## The current behavior

Version is: `18.0.0-fc46dba67-20220329`

## The expected behavior

Version is: `18.0.0` (or `18.0.1` 😉 )"
facebook/react,2022-03-27 21:59:08,bug,[DevTools Bug]: useEffect hook incorrectly labelled as reason for component rendering,"### Website or app

https://codesandbox.io/s/react-devtools-useeffect-incorrect-render-reason-x3inwg

### Repro steps

1. Start profiling
2. Click the button
3. Stop profiling
4. Check the reasons for rendering

<img width=""435"" alt=""Screen Shot 2022-03-28 at 10 48 57 AM"" src=""https://user-images.githubusercontent.com/4659562/160302578-1650b71f-d78b-48fe-b413-17f941595632.png"">

<img width=""241"" alt=""Screen Shot 2022-03-28 at 10 54 17 AM"" src=""https://user-images.githubusercontent.com/4659562/160302601-e92d48e3-801f-414a-8b9a-acc080f488f6.png"">

It is incorrect to say that hook 2 is why this rendered. Hook 1 is why it rendered. Hook 2 was rescheduled during that render. These really need to be separated as they are completely different things. In a component with a lot of effects it can be tedious to find which hook was the one that caused it to render (especially with transpilling, minifying etc where hooks are not always shown nicely).

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-03-22 06:19:18,bug,"[DevTools Bug] Unsupported Bridge operation ""0""","### Website or app

React Native Init App

### Repro steps

Just run the React-DevTools and then forward to port 8087 to debug in real device


### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-core

### DevTools version (automated)

4.24.1-ac574d688

### Error message (automated)

Unsupported Bridge operation ""0""

### Error call stack (automated)

```text
at /Users/tb921t/.npm-global/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:48:335334
    at f.emit (/Users/tb921t/.npm-global/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:48:278775)
    at /Users/tb921t/.npm-global/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:48:280316
    at /Users/tb921t/.npm-global/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:48:664831
    at Array.forEach (<anonymous>)
    at A.Zh.e.onmessage (/Users/tb921t/.npm-global/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:48:664815)
    at A.t (/Users/tb921t/.npm-global/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:39:2836)
    at A.emit (events.js:315:20)
    at e.exports.L (/Users/tb921t/.npm-global/lib/node_modules/react-devtools/node_modules/react-devtools-core/dist/standalone.js:3:58322)
    at e.exports.emit (events.js:315:20)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Unsupported Bridge operation  in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-03-14 17:50:04,bug,[DevTools Bug]: Components + Profile tabs not showing up in Chrome 99,"### Website or app

https://codesandbox.io/s/new

### Repro steps

1. Open up Chrome inspector
2. Expect Components + Profile tabs to appear

Computer:
2019 MacBook Pro (Intel)

Browser:
Google Chrome
Version 99.0.4844.51 (Official Build) (x86_64)

DevTools:
4.24.0 (3/10/2022)

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-03-04 20:49:02,bug,renderToReadableStream Passes Reusable Chunks,"https://github.com/cloudflare/miniflare/issues/203

We switched to using ""bytes"" streams but, by spec, chunks get transferred in that format. Totally reasonable. However, we pass reusable chunks which then get detached. I'm not sure why the polyfill or fixtures didn't catch this.

We really should be using the byob model instead and copy into a larger chunk for perf anyway so this just makes that more urgent."
facebook/react,2022-02-17 11:33:33,bug,"[DevTools Bug] Cannot add node ""1"" because a node with that id is already in the Store.","### Website or app

local running intranet web app

### Repro steps

1 . start intranet web app
2. call in DevTools from React DevTools ""Components""

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.23.0-e28a0db22

### Error message (automated)

Cannot add node ""1"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26229:41
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24415:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24581:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:54033:39)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-02-15 20:08:08,bug,[DevTools Bug] Cannot read properties of undefined (reading 'skin'),"### Website or app

https://coorpacademy.github.io/components/components/?path=/story/moleculequestionsfreetext--withdefaultvalue

### Repro steps

Using the React dev tools, example: search for moleculequestionsfreetext in the story book, then the context is undefined hence the error (the provider shows that the skin is ok but the context doesn't reach the component - at least for the dev tools, because it actually reaches as the context is used), the patch is easy to get a default value in case it is undefined but it should not be needed because it would only for the devtools' sake.

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.23.0-e28a0db22

### Error message (automated)

Cannot read properties of undefined (reading 'skin')

### Error call stack (automated)

```text
at FreeText (https://coorpacademy.github.io/components/components/main.e80d0d6a3191ede6a2b1.bundle.js:1:322446)
    at H (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:13603:5)
    at exports.inspectHooksOfFiber (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:13671:12)
    at inspectElementRaw (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:8426:65)
    at Object.inspectElement (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:8709:38)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:10542:56
    at Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:4225:18)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:4868:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:12535:9)
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39022:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37375:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37864:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40513:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33354:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35975:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42520:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37375:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37518:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37548:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37518:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42700:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42146:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30256:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30878:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37927:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:53807:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot read properties of undefined (reading 'skin') in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-02-12 23:29:52,bug,"[DevTools Bug] Could not find node with id ""18"" in commit tree","### Website or app

https://github.com/ModelSaber/ModelSaber.Main

### Repro steps

Just try and load the 2/5 and 3/5 report from a reload and start profiling instance.

Change `REACT_APP_API_URL` to `https://apimodelsaber.rainemods.io` in order to launch the app without needing the full .NET 6 environment and the corresponding data in the postgres database.

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.23.0-e28a0db22

### Error message (automated)

Could not find node with id ""18"" in commit tree

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25574:13
    at Map.forEach (<anonymous>)
    at RankedChartBuilder_getChartData (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25570:24)
    at ProfilingCache_ProfilingCache.getRankedChartData (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25686:11)
    at CommitRankedAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:43680:32)
    at gi (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:15400:7)
    at zj (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:16741:7)
    at jl (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:19201:86)
    at il (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18756:11)
    at hl (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18748:23)
```


### Error component stack (automated)

```text
at CommitRankedAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:43659:34)
    at div
    at div
    at div
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35975:3)
    at Profiler_Profiler (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:53276:34)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37375:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37518:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37548:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37518:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42700:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42146:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30256:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30878:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37927:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:53807:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Could not find node with id  in commit tree in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-02-02 10:58:47,bug,"[DevTools Bug] Could not find ID for Fiber ""App""","### Website or app

https://codesandbox.io/s/react-devtools-bug-z2vjo

### Repro steps

Run the Next app, open up react dev tools and inspect the Box component, rendered by @react-three/fiber.

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.23.0-e28a0db22

### Error message (automated)

Could not find ID for Fiber ""App""

### Error call stack (automated)

```text
at getFiberIDThrows (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:6493:11)
    at fiberToSerializedElement (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:8237:11)
    at inspectElementRaw (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:8406:21)
    at Object.inspectElement (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:8709:38)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:10542:56
    at Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:4225:18)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:4868:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:12535:9)
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:39022:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37375:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37864:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40513:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33354:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35975:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42520:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37375:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37518:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37548:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37518:3)
    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42700:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42146:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30256:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30878:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37927:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:53807:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Could not find ID for Fiber ""App"" in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-01-20 18:17:36,bug,[DevTools Bug]: Different results in chrome and firefox,"### Website or app

https://www.youtube.com/, https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox,https://docs.github.com/en

### Repro steps

I was using the YouTube website. I have a habit of checking if the website i have visited was using react or not. As always I checked for YouTube website too. But the react developer tools extension was showing the youtube website is using react. 

Just to make sure it was right I have installed the firefox browser then installed the react developer tools extension and opened the youtube website, But in firefox, the extension was saying the youtube is not using react. 

For confirming with other websites, I have visited mdn and GitHub docs in both chrome and firefox. The chrome react developer tools extension says that the mdn is using react and the firefox react developer tools extension says that the mdn is not using react. For the GitHub docs website, the chrome extension says that the GitHub docs website was using the react whereas the firefox react developer tools extension shows that the Github docs website doesn't use the react. 

I am attaching the screen recording. To differentiate what websites I have visited in chrome and firefox I previously opened the websites in chrome and showed the results, for firefox I have typed the query and showed the results. Can you tell why it was happening like this?


https://user-images.githubusercontent.com/59245935/150397327-1cae5d73-0e63-4a32-b54b-5aa3da522db4.mov



Repro steps
1. Login to the website
2. Scrolling  the website
3. Noticed the bug 

Versions:

Chrome: 97.0.4692.99
Firefox: 96.0.2
React Developer Tools:4.22.0


### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-01-16 14:57:01,bug,[DevTools Bug]: not sure if bug or  not:  devtools marks Youtube as built with react.,"### Website or app

https://www.youtube.com/

### Repro steps

I was watching a video on youtube when I noticed the new video hover features which were not there on the 15th of January 2022. 
This then led me to the react dev tools which I noticed had turned blue, never had before. wanted to know of this is a bug or not. 
I have restarted my computer and browser severally.

[](url
![tube](https://user-images.githubusercontent.com/65865227/149665223-b3243940-c1b0-418f-bfba-a8ca9eebb885.png)
)

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-01-14 23:20:34,bug,"[DevTools]: Confusing ""Why did this render?"" with hooks","### Website or app

https://codesandbox.io/s/elegant-paper-5lhxd?file=/src/App.js

### Repro steps

1. visit https://5lhxd.csb.app/
2. start recording profile
3. click a button (to update the context value)
4. check the report:
<img width=""252"" alt=""Screenshot 2022-01-15 at 00 14 52"" src=""https://user-images.githubusercontent.com/9800850/149597139-a6ef2564-0254-4f36-a128-d2de2792d12e.png"">

### Problem

The list of hooks that were changed is **correct**. However, this list is not really the reason why this component has been rendered. The only thing that changed and led to this rerender is the context value.

I think the list of changed hooks is useful but this should be listed separately. For the ""Why did this render?"" only context and state (and maybe useSyncExternalStore snapshots) should be listed. As only those actually cause rerenders.

On a separate note - it's a bummer that contexts are not counted within the changed hooks list and the only report we get is that ""context has changed"". If I use multiple contexts in a component this information is often not enough because I can't easily check which context has been updated.


### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-01-12 07:40:24,bug,"[DevTools Bug] Cannot add node ""6194"" because a node with that id is already in the Store.","### Website or app

Code Sandbox app

### Repro steps

1. Clcik inspect from Google Chrome
2. Click components 
3. it will show up this message

### How often does this bug happen?

Sometimes

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.22.0-0229baee2

### Error message (automated)

Cannot add node ""6194"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26181:41
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24367:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24533:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:53958:39)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2022-01-05 11:49:06,bug,"[DevTools Bug] Cannot add child ""34"" to parent ""33"" because parent node was not found in the Store.","### Website or app

localhost

### Repro steps

Just started profiler and reloaded the page

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.22.0-0229baee2

### Error message (automated)

Cannot add child ""34"" to parent ""33"" because parent node was not found in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26248:43
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24367:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24533:14
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:53958:39)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add child  to parent  because parent node was not found in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2021-12-27 20:33:10,bug,"[DevTools Bug] Cannot add node ""1"" because a node with that id is already in the Store.","### Website or app

It's empty project creating with 'react-native init'

### Repro steps

1. Start rn app in debug mode

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-core

### DevTools version (automated)

4.14.0-d0ec283819

### Error message (automated)

Cannot add node ""1"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
at /Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:140545
    at c.emit (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:89515)
    at /Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:90986
    at /Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:347787
    at Array.forEach (<anonymous>)
    at S.Gc.e.onmessage (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:48:347771)
    at S.n (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:40:3009)
    at S.emit (events.js:315:20)
    at e.exports.P (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:8:9318)
    at e.exports.emit (events.js:315:20)
    at e.exports.dataMessage (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:8:15409)
    at e.exports.getData (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:8:14651)
    at e.exports.startLoop (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:8:12066)
    at e.exports._write (/Applications/React Native Debugger.app/Contents/Resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:8:11421)
    at doWrite (_stream_writable.js:403:12)
    at writeOrBuffer (_stream_writable.js:387:5)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2021-12-21 09:06:07,bug,"[DevTools Bug] Could not find ID for Fiber ""Route""","### Website or app

null

### Repro steps

I wrote a component using dhtmlxgantt:

```
<div ref={ganttContent} />
```

initialized in this way: 
```
useEffect(() => {
  gantt.init(ganttContent.current);
  gantt.parse(data);
}, []);
```

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.21.0-2f8f60ca8

### Error message (automated)

Could not find ID for Fiber ""Route""

### Error call stack (automated)

```text
at getFiberIDThrows (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:5836:11)
    at fiberToSerializedElement (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:7543:11)
    at inspectElementRaw (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:7712:21)
    at Object.inspectElement (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:8004:38)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:9837:56
    at Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:4257:18)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:10500:12
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:11737:9)
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38726:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37092:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37572:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40146:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35254:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35695:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42085:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37092:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37222:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37256:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37222:3)
    at SchedulingProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:43423:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:41711:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30116:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30727:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37635:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:53004:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Could not find ID for Fiber ""Route"" in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2021-12-16 00:54:41,bug,"[DevTools Bug] Cannot add node ""7184"" because a node with that id is already in the Store.","### Website or app

just in my local machine

### Repro steps

1. Load page.
2. Open react components.

### How often does this bug happen?

Only once

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.21.0-2f8f60ca8

### Error message (automated)

Cannot add node ""7184"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26134:41
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24349:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24509:12
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:53230:39)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2021-12-15 20:20:58,bug,"[DevTools Bug] Could not find ID for Fiber ""App""","### Website or app

not public

### Repro steps

I have two code bases in a yarn workspaces linked monorepo. One is using react-three-fiber (the lib), and the other one is really thin wrapper around it with some simple UI, just couple of buttons. Both are using multiple (3) zustand stores.

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.21.0-2f8f60ca8

### Error message (automated)

Could not find ID for Fiber ""App""

### Error call stack (automated)

```text
at getFiberIDThrows (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:5836:11)
    at fiberToSerializedElement (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:7543:11)
    at inspectElementRaw (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:7712:21)
    at Object.inspectElement (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:8004:38)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:9837:56
    at Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:4257:18)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:10500:12
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js:11737:9)
```


### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38726:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37092:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37572:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40146:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35254:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:35695:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42085:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37092:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37222:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37256:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37222:3)
    at SchedulingProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:43423:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:41711:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30116:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30727:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37635:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:53004:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Could not find ID for Fiber ""App"" in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2021-12-15 04:44:55,bug,Revert changes to react-devtools-inline Webpack config from PR #22760,Resolves #22958
facebook/react,2021-12-15 00:54:52,bug,[react-devtools-inline][4.22.0]: broken published package,"## Steps To Reproduce

1. install `react-devtools-inline` in a project that has `react` and `react-is`
2. open node
3. `require('react-devtools-inline')`
4. See error:
```
Uncaught:
Error: Cannot find module '/Users/jstejada/code/jstejada-react/build/oss-experimental/react-is'
Require stack:
- /home/avi/projects/temp/inlinetest/node_modules/react-devtools-inline/dist/backend.js
- <repl>
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.14 (/home/avi/projects/temp/inlinetest/node_modules/react-devtools-inline/dist/backend.js:1344:18)
    at __webpack_require__ (/home/avi/projects/temp/inlinetest/node_modules/react-devtools-inline/dist/backend.js:21:30)
    at Object.3 (/home/avi/projects/temp/inlinetest/node_modules/react-devtools-inline/dist/backend.js:5710:17)
    at __webpack_require__ (/home/avi/projects/temp/inlinetest/node_modules/react-devtools-inline/dist/backend.js:21:30)
    at Object.10 (/home/avi/projects/temp/inlinetest/node_modules/react-devtools-inline/dist/backend.js:495:64)
    at __webpack_require__ (/home/avi/projects/temp/inlinetest/node_modules/react-devtools-inline/dist/backend.js:21:30) 
```

## The current behavior

Published package contains the following code:

```
module.exports = require(""/Users/jstejada/code/jstejada-react/build/oss-experimental/react-is"");
...
module.exports = require(""/Users/jstejada/code/jstejada-react/build/oss-experimental/react"");
```

## The expected behavior

No absolute paths in bundle. successful evaluation."
facebook/react,2021-12-05 23:35:15,bug,"[DevTools Bug] Could not find node with id ""99"" in commit tree","### Website or app

https://consumption.coffee/

### Repro steps

1. Visit homepage
2. Start Profiler
3. Visit Coffee Page via navbar
4. Visit Home Page via navbar
5. Boom Error

### How often does this bug happen?

Sometimes

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.21.0-2f8f60ca8

### Error message (automated)

Could not find node with id ""99"" in commit tree

### Error call stack (automated)

_No response_

### Error component stack (automated)

```text
CommitRankedAutoSizer@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:44375:34
div
div
div
SettingsModalContextController@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:35694:40
Profiler_Profiler@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:52477:34
ErrorBoundary_ErrorBoundary@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:37092:5
div
div
ThemeProvider@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:37221:23
PortaledContent@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:37255:34
div
div
div
ThemeProvider@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:37221:23
SchedulingProfilerContextController@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:43422:45
ProfilerContextController@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:41710:35
TreeContextController@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:30115:31
SettingsContextController@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:30726:35
ModalDialogContextController@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:37634:38
DevTools_DevTools@moz-extension://84945e53-7ac8-3442-9da2-ed4bcec5b8a4/build/main.js:53003:27
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Could not find node with id  in commit tree in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2021-11-26 00:52:17,bug,[DevTools Bug]: CDN-based site not working,"### Website or app

https://lcdev.shaped.ca

### Repro steps

Dev tools not working in FF or Chrome, says ""This page doesn't appear to be using react"".

React is included via CDN as shown on react website https://reactjs.org/docs/cdn-links.html:
``
	<script crossorigin=""anonymous"" src=""https://unpkg.com/react@17/umd/react.development.js""></script>
``

Web Console on said page says:
``
Download the React DevTools for a better development experience: https://reactjs.org/link/react-devtools
``

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2021-11-21 13:24:29,bug,[DevTools Bug]: Scheduling Profiler Tab Doesn't Show Up In DevTools,"### Website or app

https://codesandbox.io/s/react-18-sandbox-0w6uk

### Repro steps

1. Open [this codesandbox](https://codesandbox.io/s/react-18-sandbox-0w6uk)
2. Open the app in new window
3. Open Profiler tab of the React DevTools _(ver 4.21.0-2f8f60ca8)_
4. See no Scheduling Profiler icon
<img width=""1440"" alt=""image"" src=""https://user-images.githubusercontent.com/16290753/142763716-2c814adb-1ee7-40b6-aea5-a2e35c5c3d02.png"">


### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.21.0-2f8f60ca8

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2021-11-17 10:35:28,bug,React 18 Bug: Hydration mismatch if empty string is rendered,"<!--
  Please provide a clear and concise description of what the bug is. Include
  screenshots if needed. Please test using the latest version of the relevant
  React packages to make sure your issue has not already been fixed.
-->

React version: 18.0.0-beta-4ff5f5719-20211115

## Steps To Reproduce

1. Render empty string  `ReactDOMServer.renderToString("""")`

Link to code example: https://codesandbox.io/s/react-18-emptry-string-hydration-mismatch-xz4w9
Original issue: [`f9d729e` (#1541)](https://github.com/OperationCode/front-end/pull/1541/commits/f9d729e4070ce5ae178d1746fe470646652eaf3f#diff-887fe6affa5f7a2804ac12d95865452237617ee98d7342f1df8352cf641a70d4L90-R93)

Did some spelunking in the codebase and it seems to me that the reconciler is looking for a hydrateable instance (https://github.com/facebook/react/blob/00ced1e2b7610543a519329a76ad0bfd12cd1c32/packages/react-reconciler/src/ReactFiberBeginWork.new.js#L1413-L1415). But since an empty string won't appear as a text node (if we just set `innerHTML = string`), the reconciler thinks there's a mismatch. In legacy roots we didn't throw but warn **unless we had an empty string**:  https://github.com/facebook/react/blob/75f3ddebfa0d9885ce8df42571cf0c09ad6c0a3b/packages/react-dom/src/client/ReactDOMComponent.js#L1202-L1208

## The current behavior

Console error is logged with ""An error occurred during hydration. The server HTML was replaced with client content""

## The expected behavior

No hydration mismatch just like in React 17: https://codesandbox.io/s/react-17-emptry-string-no-hydration-mismatch-forked-5tgmw

"
facebook/react,2021-11-15 10:16:20,bug,"[DevTools Bug] Cannot add node ""378218"" because a node with that id is already in the Store.","### Website or app

private localhost

### Repro steps

not sure ..... it happened when I recorded a new profile 

### How often does this bug happen?

Sometimes

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.20.0-e5f486b5a

### Error message (automated)

Cannot add node ""378218"" because a node with that id is already in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25742:41
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:23957:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24117:12
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:52741:41)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2021-11-10 02:20:05,bug,"[DevTools Bug] Cannot add child ""44"" to parent ""42"" because parent node was not found in the Store.","### Website or app

https://github.com/I7RANK/holbertonschool-web_react

### Repro steps

Hello, I hope you are great.

1. Make a git clone and go to `0x03-react_props/task_2/dashboard/` directory
2. Install the node_modules using `npm install`
3. Then execute `npm run start`
4. And go to http://localhost:8080/
5. You need to install the React Developer Tools extension for Google Chrome (link [here](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi))
6. Open the Chrome DevTools by pressing `F12`
7. Now in the tabs of the new window opened by pressing `F12` choose the tab `Profiler`
8. And click on the `Reload and start profiling` button to see the error.

See an example here and thanks in advance:
![React_developer_tools_Error](https://user-images.githubusercontent.com/65993425/141037229-fda4531e-822e-4b16-8e03-410f84321b8d.jpg)

Also, I have other extensions just in case you need
![image](https://user-images.githubusercontent.com/65993425/141038103-37fa2313-b360-4cce-8208-d6b9f5866beb.png)

and in another Google chrome profile that I tried, has these extensions
![image](https://user-images.githubusercontent.com/65993425/141038275-f8456a76-2890-4c01-86d4-da22bbe0a6fa.png)



### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.21.0-2f8f60ca8

### Error message (automated)

Cannot add child ""44"" to parent ""42"" because parent node was not found in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26191:43
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24349:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24509:12
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:53230:39)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot add child  to parent  because parent node was not found in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2021-11-03 15:37:15,bug,Named hooks parsing fails for certain Code Sandbox examples,"Noticed some parsing bugs when writing some example code for React conf. Taking this Sandbox...
https://codesandbox.io/s/keen-bartik-udlpn?file=/src/App.js:58-341

---
This fails by loading neither hook:
```js
function Example({ defaultName = ""-"", defaultLocation = ""-"" }) {
  const [name, setName] = useState(""-"");
  const [location, setLocation] = useState(""-"");

  return (
    <div style={STYLE}>
      <div>Name: {name}</div>
      <div>Location: {location}</div>
    </div>
  );
}
```
---

Even worse, this fails by only loading ""location"" and showing it first (instead of state)
```js
function Example({ defaultName = ""-"", defaultLocation = ""-"" }) {
  //asd
  const [name, setName] = useState(""-"");
  //asd
  const [location, setLocation] = useState(""-"");

  return (
    <div style={STYLE}>
      <div>Name: {name}</div>
      <div>Location: {location}</div>
    </div>
  );
}
```

---
This ails by only loading the location hook, but at least the name shows beside the right hook:
```js
function Example() {
  const [name] = useState(""-"");
  const [location] = useState(""-"");

  return (
    <div style={STYLE}>
      <div>Name: {name}</div>
      <div>Location: {location}</div>
    </div>
  );
}
```
Interestingly, changing the order of the hooks _still_ only lets it load `location`, although it also still shows it as the second hook (bug).
```js
function Example() {
  const [location] = useState(""-"");
  const [name] = useState(""-"");

  return (
    <div style={STYLE}>
      <div>Name: {name}</div>
      <div>Location: {location}</div>
    </div>
  );
}
```

---

This format also only loads ""location"":
```js
function Example(props) {
  const stateA = useState(null);
  const name = stateA[0];

  const stateB = useState(null);
  const location = stateB[0];

  return (
    <div style={STYLE}>
      <div>Name: {name}</div>
      <div>Location: {location}</div>
    </div>
  );
```"
facebook/react,2021-10-26 16:59:53,bug,"[DevTools Bug]: ""Reload and start profiling"" button is missing on Microsoft Edge","### Website or app

Any development URL are ok

### Repro steps

1. Open the React Developer Tools extension on Chrome and navigate to the Profiler tab. Note the presence of the ""Reload and start profiling"" button.
2. Open the React Developer Tools extension on Microsoft Edge and navigate to the Profiler tab. Note the absence of this button.

I have checked #21384, and `document.featurePolicy.allowsFeature('sync-xhr')` returns `true`.

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

4.20.2

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2021-10-21 02:09:18,bug,"[DevTools Bug] Cannot remove node ""264"" because no matching node was found in the Store.","### Website or app

https://codesandbox.io/

### Repro steps

i open chrome developer tools width react-developer-tool to view layout page and :v while i scroll page :v

### How often does this bug happen?

Often

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.20.0-e5f486b5a

### Error message (automated)

Cannot remove node ""264"" because no matching node was found in the Store.

### Error call stack (automated)

```text
at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25851:43
    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:23957:22)
    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24117:12
    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:52741:41)
```


### Error component stack (automated)

_No response_

### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2021-10-19 22:09:48,bug,[DevTools Bug]: Loading / parsing hook names is failing on v4.20,"### Website or app

reactjs.org

### Repro steps

1. Open a website that uses React.
2. Inspect an element that uses Hooks.
3. Attempt to load hook names.
4. Loading hook names always fails:

![image](https://user-images.githubusercontent.com/1271509/137997605-a3f601a9-59e5-4370-b307-3ff50af22cae.png)
"
facebook/react,2021-10-15 20:09:41,bug,[DevTools Bug]: Firefox and Edge show error in console about unrecognized installation on v4.20.0,"### Website or app

reactjs.org

### Repro steps

1. Install React DevTools v4.20.0 in Firefox
2. Load reactjs.org in Firefox
3. Open Firefox DevTools
4. Observe error in console

![image](https://user-images.githubusercontent.com/1271509/137547605-e6ad3045-c20a-4828-9895-af46b8bb4db1.png)


### How often does this bug happen?

Every time
"
facebook/react,2021-10-14 14:11:25,bug,Standalone Devtools splash page unresponsive after client disconnects ,"### Website or app

Any client that connects to the standalone DevTools

### Repro steps

While using the standalone DevTools app:
1. Connect a client to the DevTools
2. Disconnect that client and you should be redirected to the introduction page

The event listeners are not re-attached to the splash page elements after the client disconnects. The <script> tags that can be copied on click and the ""Profiler tab"" link stop working.

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2021-10-02 13:53:08,bug,"[DevTools Bug] Could not inspect element with id ""2"". Error thrown:Cached data for element ""2"" not found","### Website or app

https://public-deploy3.test-eu.tankionline.com/browser-public/index.html?config-template=https://c{server}.public-deploy3.test-eu.tankionline.com/config.xml&resources=../resources&balancer=https://balancer.public-deploy3.test-eu.tankionline.com/balancer

### Repro steps

attempting to change the line of the code which locks the store in an online game, this usually works but this time it didn't

### How often does this bug happen?

Every time

### DevTools package (automated)

react-devtools-extensions

### DevTools version (automated)

4.18.0-f58bbcf9a

### Error message (automated)

Could not inspect element with id ""2"". Error thrown:Cached data for element ""2"" not found

### Error call stack (automated)

_No response_

### Error component stack (automated)

```text
at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37563:3)
    at Suspense
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:36097:5)
    at div
    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:36542:3)
    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38972:3)
    at div
    at div
    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:34323:3)
    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:34764:3)
    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40911:52)
    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:36097:5)
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:36215:3)
    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:36249:5)
    at div
    at div
    at div
    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:36215:3)
    at SchedulingProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42093:3)
    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40537:3)
    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:29185:3)
    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:29796:3)
    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:36605:3)
    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:51354:3)
```


### GitHub query string (automated)

```text
https://api.github.com/search/issues?q=Could not inspect element with id . Error thrown:
Cached data for element  not found in:title is:issue is:open is:public label:""Component: Developer Tools"" repo:facebook/react
```
"
facebook/react,2021-09-29 08:43:19,bug,"Bug: setState updater called but not rendered, in Safari, in concurrent mode","<!--
  Please provide a clear and concise description of what the bug is. Include
  screenshots if needed. Please test using the latest version of the relevant
  React packages to make sure your issue has not already been fixed.
-->

React version: 18.0.0-alpha-9175f4d15-20210928

## Steps To Reproduce

Minimal reproduction in [this codesandbox](https://codesandbox.io/s/black-moon-ymw10?file=/src/index.js).

This issue only appears in Safari, including mobile Safari. It works fine in Chrome and Firefox.

In order to reproduce, you'll need to:

0. Render the app with `createRoot` in the latest 18.0 alpha
1. Within an element's `ref` function, append an iframe to that element using `appendChild`

*The following steps have been removed after simplifying the reproduction:*

~~1. Make a state change originating in a message from a YouTube embed iframe. I assume the same issue would occur with messages from other cross domain iframes, although I have not tested this. The issue does *not* appear when making an async state change through `setTimeout`.~~
~~2. Render a tooltip using the ""tippy.js"" library. I haven't dug into what inside of Tippy is causing this, but commenting out the tippy element resolves the issue. I have confirmed that rendering a simple portal does *not* reproduce the issue.~~


Link to code example:

https://codesandbox.io/s/black-moon-ymw10?file=/src/index.js

## The current behavior

In the example in safari, the updater function passed to `setState` is run (confirmed with the ""run state updater"" console.log)... but the new state is never passed to the component function, leaving the app hanging with no error message, and displaying ""not done"".

## The expected behavior

In Chrome and Firefox, the App component updates after the state updater function is called, as expected, displaying ""done"".

---

Thanks for all the wonderful work on React, btw! It's been a lot of fun playing with the new concurrent React features. Can't wait to see them hit a stable release!
"
facebook/react,2021-09-24 10:11:29,bug,Bug: Components inside typescript namespaces cause ReferenceError,"Forwarded from https://github.com/vitejs/vite/issues/3900 by @not-rusty based on the recommendation of @sodatea, which stated that this should be considered as a bug in the `react-refresh` package.
&nbsp;  

----

### Describe the bug
Apparently components inside namespaces is not supported. I don't exactly know if the error comes from esbuild or something, but it would nice.

The bug is that is not shown as a compilation error.

### Reproduction
Simply start a `react-ts` project with `$ npm init @vitejs/app my-vue-app --template react-ts` and write the following code:

```ts
namespace Lol {
  export const Lol = () ={
    return (
      <div>
        <p>Some component</p>
      </div>
    );
  };
}

function App() {
  return (
    <div className=""App"">
      <header className=""App-header"">
        <Lol.Lol />
        <p>Hello Vite + React!</p>
      </header>
    </div>
  );
}

export default App;
```

### System Info
```js
  System:
    OS: Linux 5.8 Ubuntu 20.04.2 LTS (Focal Fossa)
    CPU: (8) x64 Intel(R) Core(TM) i5-10210U CPU @ 1.60GHz
    Memory: 440.54 MB / 7.47 GB
    Container: Yes
    Shell: 5.8 - /usr/bin/zsh
  Binaries:
    Node: 14.16.0 - /usr/local/bin/node
    npm: 6.14.13 - /usr/local/bin/npm
  Browsers:
    Chrome: 90.0.4430.93
    Firefox: 89.0.1
```

Used package manager: npm

### Logs
I get the following runtime error:

```js
App.tsx:13 Uncaught ReferenceError: _c is not defined
    at App.tsx:13
    at App.tsx:14
```

I suppose it should be a compilation error?"
facebook/react,2021-09-16 05:45:36,bug,"Error: ""Cannot read property 'length' of undefined""","Describe what you were doing when the bug occurred:
1. Just trying to profile an React Native app

![Screenshot_2021-09-16_07-44-35](https://user-images.githubusercontent.com/1957563/133556382-73ddabab-f985-4fd2-9d60-1a1438d8bd8b.png)


---------------------------------------------
Please do not remove the text below this line
---------------------------------------------

DevTools version: 4.10.1-3a8c04e3b2

Call stack: at Jc (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:56:342921)
    at ii (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:24:59391)
    at Kl (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:24:114564)
    at Ns (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:24:101189)
    at Is (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:24:101117)
    at Os (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:24:100980)
    at gs (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:24:96690)
    at w (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:40:1749)
    at MessagePort.A.port1.onmessage (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:40:2251)

Component stack: at Jc (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:56:341665)
    at div
    at div
    at fi (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:56:235808)
    at /nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:56:347533
    at Hi (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:56:249715)
    at /nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:56:251980
    at div
    at div
    at lu (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:56:305412)
    at En (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:56:173743)
    at jn (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:56:184811)
    at Ji (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:56:253490)
    at Nd (/nix/store/dhc43b6q83i2d842ry36ydnwck64wlyc-react-native-debugger-0.11.7/share/resources/app.asar/node_modules/react-devtools-core/dist/standalone.js:56:353738)"
facebook/react,2021-09-15 19:14:01,bug,[DevTools Bug]: hook resolution throws fetch failure,"### Website or app

n/a

### Repro steps

have a webpack project that uses a domain mapped to your local IP such as (appx.whenidev.net) in my case that's served with https
try to resolve hook names
check console and observe the million errors

https://p181.p1.n0.cdn.getcloudapp.com/items/4gulW8Wo/3bba0881-ee74-4478-8cb8-68370b878855.jpg?v=ab371b6e8fca2cee905d1b9f828ac0d8 shows my console

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2021-09-10 21:18:32,bug,Bug: Maximum call stack size exceeded (React Devtools),"I encountered the same issue as #20640 but using `react-devtools` as a stand-alone app instead of from the the browser.

The bottom line is that the profiler becomes unresponsive after any interaction with a heavily loaded react page.

React version:

* React: 17.0.2
* ReactDOM: 17.0.2
* React Devtools: 4.18.0

## Steps To Reproduce

1. Attach a react-devtools stand-alone (`yarn run react-devtools`) to a session
2. Start profiling
3. Do something on your app that would cause a huge number of updates
4. The profiler stops functioning

## Diagnostics

I actually went through and found out the origin of the issue, however I am not sure what would be the best approach to fix it.

It seems the the origin is a (very) big incoming message:

<img width=""516"" alt=""image"" src=""https://user-images.githubusercontent.com/883486/132918559-c6a3dee1-1ddd-4647-ab06-2f19892b67b0.png"">

That eventually causes a maximum call stack exceeded error:

<img width=""522"" alt=""image"" src=""https://user-images.githubusercontent.com/883486/132918578-f02f3031-b84a-4a89-84cf-4dd4d70cef7f.png"">

Coming from `util.js:128`:

```ts
export function utfDecodeString(array: Array<number>): string {
  return String.fromCodePoint(...array);
}
```

And interestingly enough, doing spread operator with an array with 235124 elements actually causes a `Maximum call stack size exceeded` error 😄 

I tried replacing the code above with the following replacement and it seems to work:

```ts
export function utfDecodeString(array: Array<number>): string {
  return array.map(c => String.fromCodePoint(c)).join("""")
}
``` "
facebook/react,2021-09-05 12:52:10,bug,"[DevTools] Support providing the number of components above selected or ""depth""","### Website or app

https://github.com/appium/appium/issues/14825

### Context

While implementing Appium e2e tests we found this limitation
https://github.com/appium/appium/issues/14825

I'm trying to figure out how to solve this and understand if my changes are reducing the number of layers above a certain component 

### How often does this bug happen?

Sometimes

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2022-05-09 12:37:52,feature,[DevTools] Manifest version 2 is deprecated,"### Website or app

https://developer.chrome.com/blog/mv2-transition/

### Repro steps

Use latest React DevTools with Electron (Chromium) (18.2.0 / Chromium 100)

```
  (node:80082) ExtensionLoadWarning: Warnings loading extension at ./node_modules/electron-devtools-vendor/extensions/react-developer-tools:
    Manifest version 2 is deprecated, and support will be removed in 2023. See https://developer.chrome.com/blog/mv2-transition/ for more details.
```

### How often does this bug happen?

Every time

### DevTools package (automated)

_No response_

### DevTools version (automated)

_No response_

### Error message (automated)

_No response_

### Error call stack (automated)

_No response_

### Error component stack (automated)

_No response_

### GitHub query string (automated)

_No response_"
facebook/react,2020-12-13 19:26:42,feature,Bug: react-devtools not working inside react based chrome extensions,"react-devtools not working inside react based chrome extensions

React version: 17.0.1

## Steps To Reproduce

1. install react-devtools extension in chrome
2. git clone https://github.com/lxieyang/chrome-extension-boilerplate-react
3. cd into directory
4. yarn install
5. yarn build 
6. open chrome extensions page
7. change to developer mode
8. load unpacked, point to the directory build within chrome-extension-boilerplate-react directory
9. click on react dev tools extension
10. The following text is displayed ""This is a restricted browser page. React devtools cannot access this page.""
11. When inspecting the page, the tabs components and profiler are NOT shown

Link to code example: https://github.com/lxieyang/chrome-extension-boilerplate-react

## The current behavior
1. When clicking on the react devtools chrome extension: ""This is a restricted browser page. React devtools cannot access this page.""
2. Also when inspecting the pages of the chrome extension, the tabs components and profiler are NOT shown

## The expected behavior
1. When clicking on the react devtools chrome extension: The devtools recognize that the page is using react
2. when inspecting the pages of the chrome extension, the tabs components and profiler are shown and populated"
facebook/react,2020-07-06 10:17:15,feature,Suggestion: show HOC names in profiler,"(Deleted template as this is a suggestion, not a bug.)

The dev tools helpfully extracts HOC names and shows them in the components tree. [Example](https://react-devtools-tutorial.now.sh/higher-order-components):

![image](https://user-images.githubusercontent.com/921609/86582724-03ddbc00-bf7a-11ea-83fb-f9d0a3902e5f.png)

However, it doesn't give the same treatment to components in the profiler:

![image](https://user-images.githubusercontent.com/921609/86582766-135d0500-bf7a-11ea-8e2a-520597150db6.png)

In large trees, it is very confusing to see two components with the same name, so it would be useful to show the HOC name here as well.

As a workaround for now, users can click through to the ""components"" tab from the profiler, when a component is selected in the profiler flamegraph, to see this extra information."
facebook/react,2020-06-10 04:45:34,feature,Add https support to standalone DevTools,"I notice that the standalone react-devtools use http instead https like `""<script src=""http://192.1.2.3:8097""></script>""` ([src code](https://github.com/facebook/react/blob/4c7036e807fa18a3e21a5182983c7c0f05c5936e/packages/react-devtools/app.html#L186-L194))，but my website is always https, so it will get broken because I cant change it to http if it's in `iframe`(it's diffcult to change the host environment/website protocol).

I'm not familar with the react-devtools implementations, maybe something cause it can only use http to open the server, happy to hear the details, thanks!

React-devtools: 3.6.3

"
facebook/react,2020-04-22 15:00:02,feature,Improve UX of finding full `key` value,"## The current behavior

The full value of the `key` is very difficult / impossible to find and use in the interface of the React Devtools.

![Kapture 2020-04-22 at 11 47 47](https://user-images.githubusercontent.com/1935696/79997715-25222680-84ba-11ea-97ba-51f1679a8c91.gif)

Only managed to find it by accident :(

## The expected behavior

The `key` is visible in the props list to the right.

### Detailed Proposal

As mentioned below in https://github.com/facebook/react/issues/18702#issuecomment-617924196

Add a light divider and new section in the props panel to the right.

Potentially also add a question mark that shows an explanation about the fact that things in this section are not really props.

Ref (Original implementation): https://github.com/facebook/react-devtools/pull/328"
facebook/react,2020-04-06 12:08:53,feature,Expose API like `createStyles` for converting style object to CSS string,"## Feature Request

provide API on react-dom to convert style object to CSS string. the API could be used to build dynamic CSS easily.

### Approach 1

```js
import {createCSS} from 'react-dom'

const inlineStyleString = createCSS({
  overflow: 'hidden', 
  display: '-webkit-box',
  WebkitLineClamp: 2,
})

return <style>{`.clamp-text { ${inlineStyleString} }`}</style>
```

### Approach 2

Another approach is to only map the key and value from the original style object, and let user play with it.

```js
import {createStyles} from 'react-dom'

// return a object with key-value pairs of css rules
const cssStyleObject = createCSS({
  WebkitTransform: 'scale(2)',
})
// return { '-webkit-transform': 'scale(2)'  }

const inlineStyleString = Object.keys(cssStyleObject).reduce((serialized, key) => {
  serialized += `${key}: ${cssStyleObject[key]};`
  return serialized
}, '')

return <style>{`.clamp-text { ${inlineStyleString} }`}</style>
```


## Why

See other react styling library like **radium**, the way to build css is quite similar with react inline style if they need anything aligned with react like browser prefix such as `Webkit` or detect the unit less number for some special rule such as `line-height`, they have to re-implement the logic.

the style object in react is quite convenient, but it's can only used for inline style. hope react team could consider to expose it in the react-dom. might not the origin function name, but the same functionality."
facebook/react,2020-01-29 21:21:56,feature,Profiler should highlight host components (e.g. DOM elements) on mouseover,"Feature request from a DevTools user at Faceook:
> If I mouse over a node in the flame graph if you can highlight it in the view like the inspector that would be really amazing!"
facebook/react,2019-11-07 01:41:48,feature,Adding visible state to Suspense Fallback component to enhance CSS transitions.,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**
Feature I suppose.

**What is the current behavior?**
Suspense fallback component flashes on and immediately unmounts (flashes off) when fetching is complete. See similar discussions [here](https://stackoverflow.com/questions/57404653/react-suspense-prevent-flashing-of-fallback-spinner) and [here](https://stackoverflow.com/questions/54158994/react-suspense-lazy-delay).

**What is the expected behavior?**
It would be ideal to add better transitions to the fallback component when it mounts and unmounts, but doing so requires using something like [TransitionGroup](https://reactcommunity.org/react-transition-group/transition-group) or [Framer Motion](https://www.framer.com/api/motion/animate-presence/), which require a prop to listen to know when to mount and unmount. If we could somehow have the fallback component receive some kind of state from Suspense on when it is mounting and unmounting the fallback component, that would be great.
"
facebook/react,2019-10-10 05:08:30,feature,Make it easier to debug (undefined components) in production,"**Do you want to request a *feature* or report a *bug*?** Feature

**What is the current behavior?**

So for whatever reason, terser/minification causes a bug where one of my components is undefined during render. What I get is the standard production mode minified error.

For some reason this time, I can't seem to do *any* of the following:

1. See any stack information for the component (React just says ""something somewhere is undefined"")
2. Set a breakpoint on the error point (for some reason with webpack + devtool sourcemap, chrome isn't letting me do a mid-line breakpoint at any place above the error)
3. Disable Reacts error catching temporarily so I can pause on the actual error
4. Use a development version of React with any ease but with the prod settings (I tried turning off both process.env.NODE_ENV checks but then you get an error `It is not supported to run the profiling version of a renderer (for example, react-dom/profiling) without also replacing the scheduler/tracing)`

A big upgrade here would be to fix all of these (except 2, which is either a Webpack or Chrome bug). Can we get better stacks in production mode? That's the ideal. That with number 3 would be the most helpful: a query like `?disableNiceErrors=true` that prevents React from catching/re-throwing the error later would make it so much easier.

As it is now, it's incredibly painful to debug (already an hour into it and without the breakpoints working on minified React it's hard to really even figure out where besides manual code commenting).

Edit: A fifth would be source maps for react itself in production bundles which may work."
facebook/react,2019-10-08 07:34:07,feature,"Add ""search"" functionality to Profiler graphs","<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**
feature
**What is the current behavior?**
it‘s hard for me to find a component in the profiler tab
**What is the expected behavior?**
add a search function,just like components tab

"
facebook/react,2019-09-27 12:02:35,feature,react-devtools: tiny feature request (copy to clipboard related),"Hey guys, great job with the new devtools 💯 perhaps this request can be put in the backlog for a future release as I think it could be quite useful and could save a few steps for developers. 

**What is the current behavior?**
- Copying data to clipboard stringifies all key-value pairs of an object
- When the keys' values happen to be objects or arrays, the values are given in constructor form rather than seeing the contents of that object/array

This is what was copied:
<img width=""369"" alt=""Screen Shot 2019-09-27 at 12 24 19"" src=""https://user-images.githubusercontent.com/30755017/65767498-f4496100-e125-11e9-8f8b-3faa4516d0c2.png"">

This is a pasted version in VSCode:
<img width=""399"" alt=""Screen Shot 2019-09-27 at 12 24 48"" src=""https://user-images.githubusercontent.com/30755017/65767486-ee538000-e125-11e9-9886-7dcd165c19db.png"">

**What is the desired behavior?**
- When I click on ""Copy to clipboard"" in react-devtools, my copied object's data _keys_ and _values_ are in an unstringified format, or at least, I am presented the option to have this copied in an unstringified format
- The _values_ of each key is readable, e.g: if the value is an object, I can see the expanded object and all its key-value pairs clearly as shown here (this is logged into Chrome console from react-devtools)
<img width=""311"" alt=""Screen Shot 2019-09-27 at 12 29 11"" src=""https://user-images.githubusercontent.com/30755017/65767365-99176e80-e125-11e9-98d3-98fd9c4889f9.png"">

"
facebook/react,2019-08-22 16:46:40,feature,Devtools: Impossible to debug firefox webextension moz-extension: pages due to strict CSP,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**

* feature request
* Original issue is: https://github.com/facebook/react-devtools/issues/922
   * There are more details.
* Mozilla's Bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1573027

**What is the current behavior?**

The react-devtools toolbar button does not light up and clicking on it says ""This page does not appear to be using react"". This is probably since extensions are not allowed to inject scripts into other extensions' pages.

**What is the expected behavior?**

The react-devtools toolbar button should light up and the addon should be able to debug the page

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

This is still reproducible

* Firefox v68~
* react devtools v4.0.5
* react v16.9
"
facebook/react,2019-08-22 12:29:14,feature,DevTools: Ability to save inspected values as global variable (as it was in previous version),"Hi, I really like new dev tools (4.0.5), but I would like to request one useful feature.

In previous version it was possible to save inspected value (prop/state/context) and its parts as a global variable using context menu->store as global variable, so it can be easily be accessed through console using `$tmp{n}`. In current version this is behaviour was replaced be creating new ""bug"" button which will just print all values in console. Unfortunately it's hard to navigate through this object, because $_ in console will return undefined. And in order to access it you need to expand group, find desired property and open context menu->store as global variable. 
It would be perfect if you combine these 2 approaches so it would be possible to both print values using ""bug"" button and opening context menu directly in react dev tools panel wihtout need of intermediate step. 

Thanks! 

"
facebook/react,2019-08-16 20:16:56,feature,New React Developer Tools does not clearly indicate empty object or array,"**Do you want to request a *feature* or report a *bug*?**

Bug/unexpected behavior.

**What is the current behavior?**

When an object or array is empty, there's no arrow to expand and see that it's empty, nor is there an `(empty)` indication. Initially, I was concerned that I couldn't expand any object or array from the new React DevTools due to this.

![Screen Shot 2019-08-16 at 3 11 35 PM](https://user-images.githubusercontent.com/11951801/63195539-7aa75900-c038-11e9-95fe-4754f7d14693.png)

**What is the expected behavior?**

I would expect to either be able to expand the empty object, or to see `(empty)` next to the non-expandable object.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

Chrome version: 76.0.3809.100 (Official Build) (64-bit)
React Developer Tools Version: 4.0.2 (8/15/2019)

[Reference discussion on Twitter](https://twitter.com/taniarascia/status/1162441422496325633)
"
facebook/react,2019-08-16 15:42:33,feature,New React DevTools can't access immutable.js objects?,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**
Bug

**What is the current behavior?**
When the state or props are formed by Immutable.js objects, react devtools cannot expand it nor copy to temporal variable anymore.
![Screenshot from 2019-08-16 16-18-09](https://user-images.githubusercontent.com/28344917/63174215-c90d2580-c041-11e9-847c-7bbd153399f9.png)

**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**

https://codesandbox.io/s/withered-cherry-h3dfh

**What is the expected behavior?**
Be able to inspect the value of the immutable object or at least, copy it into a temporal variable.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**
React 16.8.6
Chrome Version 70.0.3538.77 (Official Build) (64-bit)"
facebook/react,2019-05-29 17:56:31,feature,DevTools in production environment ,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->
![2019-05-29_13-00](https://user-images.githubusercontent.com/33522235/58580030-d3254200-8211-11e9-882d-85da2664a3b2.png)


**Do you want to request a *feature* or report a *bug*?**
I think the production environment, React Devtools you should not show any information about the state or components. similar to redux Devtools. 
**What is the current behavior?**
Just now I can Edit some information with React DevTools in the production environment

"
facebook/react,2019-04-18 09:59:04,feature,act() should warn in testing frameworks besides jest ,"**Do you want to request a *feature* or report a *bug*?**

feature request

**What is the current behavior?**

The warnings for missing act() warnings around updates only happen in jest. 

**What is the expected behavior?**

We should support other test runners/frameworks as well (like jasmine, karma, etc)

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

16.8.0+"
facebook/react,2019-04-09 15:36:48,feature,allow to disable style hydration missmatch warning,"some background:

when dealing with inline styles (e.g. radium), SSR and caching of SSR results, you might run into problems because of differences in vendor prefixes. Best tradeof is to render always with all vendor prefixes on the server. But this will lead to style missmatches on hydration. You can use `suppressHydrationWarning`, but then you have to add this property to every element that receives these styles, which is not practical.

**Do you want to request a *feature* or report a *bug*?**

feature

**What is the current behavior?**

style missmatch causes a warning on development. 

**What is the expected behavior?**

you can set a global flag to supress style missmatch warnings

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

React 16.8"
facebook/react,2019-04-01 04:57:23,feature,useRef eslint rule proposal,"Proposal: Ensure that all reads from a `ref` use `.current`.

```js
export function MyComponent() {
  const isActiveRef = useRef<boolean>(false);

  // Proposal: this should be a linting violation
  if (isActiveRef) {
    console.log('will always be true');
  }

  // Reads need to be done from .current
  if (isActiveRef.current) {
    console.log('correct usage');
  }
}
```

I often find myself doing boolean checks based on the `.current` value of a `ref`. I am paranoid that if I leave the `.current` off then I am creating a bug"
facebook/react,2019-03-27 02:29:09,feature,Hook equivalent for `getSnapshotBeforeUpdate`,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**

Feature

**What is the current behavior?**

There is no hook based equivalent for `getSnapshotBeforeUpdate`. The docs state:
> Our goal is for Hooks to cover all use cases for classes as soon as possible. There are no Hook equivalents to the uncommon getSnapshotBeforeUpdate and componentDidCatch lifecycles yet, but we plan to add them soon.

**What is the expected behavior?**

There is a hook based equivalent for `getSnapshotBeforeUpdate`, maybe something like:

```js
function ScrollingList(props) {
  const lengthRef = React.useRef(0);
  const listRef = React.useRef(null);

  const prevHeight = React.useSnapshot(() => {
    if (lengthRef.current < props.list.length) {
      const list = listRef.current;
      return list.scrollHeight - list.scrollTop;
    }
  }); 

  React.useEffect(() => {
    lengthRef.current = props.list.length;
  }, [props.list.length]);

  React.useEffect(() => {
    if (prevHeight != null) {
      const list = listRef.current;
      list.scrollTop = list.scrollHeight - prevHeight;
    }
  }, [prevHeight]);
  return (
    <div ref={listRef}>{/* ... */}</div>
  );
}
```

This code probably is bug-ridden and not the best use of hooks but you get the idea.

I’d like to know:
1. If this feature is planned or on the roadmap.
2. What the proposed API will be.
3. If anyone is working on this.

Sorry, if this is being tracked somewhere and I haven’t seen it. I’m planning an intense component which will use `getSnapshotBeforeUpdate` and I’d love some guidance about the future of this lifecycle method.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

React v16.8.0 and later. All browsers and OSes.

"
facebook/react,2019-03-21 04:21:58,feature,[eslint-plugin-react-hooks] Add option to require functions from core hooks in dependencies,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**

feature

**What is the current behavior?**

The `react-hooks/exhaustive-deps` will currently accept either (and fix neither) of the following:

```javascript
// Scenario A: Function returned by core hook IS NOT specified as a dependency.
const [value, setValue] = useState(initialValue);
const toggle = useCallback(() => setValue(v => !v), []);
```

```javascript
// Scenario B: Function returned by core hook IS specified as a dependency.
const [value, setValue] = useState(initialValue);
const toggle = useCallback(() => setValue(v => !v), [setValue]);
```

**What is the expected behavior?**

If we add the following to our `.eslintrc.js`

```
// Introduces a `requireCoreFunctions` config option.
'react-hooks/exhaustive-deps': ['error', { requireCoreFunctions: true }]
```
then the rule should fail in scenario A, and fixing should result in scenario B.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

n/a"
facebook/react,2019-03-11 02:26:13,feature,eslint-react-hooks: should we enforce to use React.useMemo if there is no state hooks?,"1. Regarding the performance optimization, should we always use React.useMemo in case there is no state hooks inside a function component?
2. If the answer is yes, can we use some eslint rules to make sure everyone do it?"
facebook/react,2019-02-25 22:20:17,feature,Collapse forwardRef and other wrappers in React error stacks,"**Feature**

**What is the current behavior?**

With a UI kit that uses forwardRefs, I get error messages like this:

![image](https://user-images.githubusercontent.com/12100/53372321-61ceae00-3907-11e9-9d20-190315cc7f06.png)

**What is the expected behavior?**

It would look a lot better if forwardRefs were a bit less obtrusive, and if they picked up the functions displayName rather than just the name of the function they wrap.

In our UI Kit we have a pattern like:

```
const View = forwardRef(function UIView(){ return <div /> })
View.displayName = 'SomeDisplayName'
```

For some reason it's not showing that, just showing the inner one. Further the ""bigness"" of ForwardRef() makes it hard to see visually when scanning. Perhaps something more like this would help:

```
Warning: Encountered two children with the same key, `confluence`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.
    in div (created by ForwardRef(Gloss))
    in Gloss (ForwardRef)
    in Gloss (ForwardRef) (created by OnboardMain)
    in div (created by Gloss (ForwardRef))
    in Gloss (ForwardRef)
    in Gloss (ForwardRef) (created by SliderPane)
```

Further, the `created by` information is often more useful to me, but it's never aligned nicely. Could do something like:

```
Warning: Encountered two children with the same key, `confluence`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.
      in div (created by ForwardRef(Gloss))
      in Gloss (ForwardRef)
    from OnboardMain:
      in Gloss (ForwardRef)
   from Gloss (ForwardRef):
      in div
      in Gloss (ForwardRef)
   from SliderPane:
      in Gloss (ForwardRef)
```

All together, if it would pick up displayNames, the stack would be far more readable for me:


```
Warning: Encountered two children with the same key, `confluence`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.
      in div (created by Row)
      in View (forwardRef)
    from OnboardMain:
      in Row (forwardRef)
   from Col (forwardRef):
      in div
      in Grid (forwardRef)
   from SliderPane:
      in View (forwardRef)
```
"
facebook/react,2019-02-09 08:44:57,feature,Shallow renderer does not support React.memo,"**Do you want to request a *feature* or report a *bug*?**
bug

**What is the current behavior?**
In normal rendering, you can memoize a class-based component: https://jsfiddle.net/586ea3cx/

With the shallow renderer, it seems like you can't: https://jsfiddle.net/odj217Lv/1/

This might be blocking https://github.com/airbnb/enzyme/pull/1914, in which tests are failing with `Cannot call a class as a function`. (it's tough to repro stuff with the shallow renderer)"
facebook/react,2019-02-03 02:57:23,feature,Simultaneous key events in effect handled out of order,"**Do you want to request a *feature* or report a *bug*?**

Report a bug.

**What is the current behavior?**

I have an app that's registering event listeners for `window`'s key events (via `useEffect`). Those event listeners are triggering state updates (via `useState`). I think I have found a bug where simultaneous key events occurring in the same frame (whether down or up) will be handled out of order, causing state to becoming out of sync.

Take the following simple app (https://codesandbox.io/s/1z3v9zrk4j). I've kept this as keyup only for simplicity.

```
function App() {
  const [keys, setKeys] = useState([]);

  console.log('App', keys);

  const onKeyUp = function (event) {
    console.log('onKeyUp', event.key, keys);

    setKeys([...keys, event.key]);
  };

  useEffect(function () {
    console.log('effect', keys);

    window.addEventListener('keyup', onKeyUp);

    return function () {
      console.log('removing event listener', keys);

      window.removeEventListener('keyup', onKeyUp);
    };
  });

  return <p>{keys.join(', ')}</p>;
}
```

If I press down any two keys, e.g. the ""q"" and ""w"" keys, and then release them at precisely the same time, the following happens:

- The `keyup` event listener for `w` is called, which in turn calls `setKeys` with `['w']`
- `App` is re-rendered with `keys === ['w']`
- The `keyup` event listener for `q` is called, which in turn calls `setKeys` with `['q']`
- The effect's cleanup function is called, removing the event listener with `keys === []`
- The effect is run again, the event listener being added with `keys === ['w']`
- `App` is re-rendered with `keys === ['q']`
- The effect's cleanup function is called, removing the event listener with `keys ===['w']`
- The effect is run again, the event listener being added with `keys === ['q']`

This results in `keys === ['q']`. The render with `w` has been lost.

With three keys, only two keys are reliably shown. Four keys - only two are reliably shown.

If I add another `useState` call, the first `useState` has no issues - all keys are reliably detected. See https://codesandbox.io/s/0yo51n5wv:

```
function App() {
  const [keys, setKeys] = useState([]); 
  const [dummy, setDummy] = useState('foo');

  console.log(""rendering App"", keys);

  const onKeyUp = function(event) {
    console.log(""onKeyUp event received"", event.key, keys);

    setKeys([...keys, event.key]);
    setDummy('foo');
  };

  useEffect(function() {
    console.log(""adding event listener"", keys);

    window.addEventListener(""keyup"", onKeyUp);

    return function() {
      console.log(""removing event listener"", keys);

      window.removeEventListener(""keyup"", onKeyUp);
    };
  });

  return (
    <div>
      <p>Keyups received:</p>
      <p>{keys.join("", "")}</p>
      <button onClick={() => setKeys([])}>Reset</button>
    </div>
  );
}
```

**What is the expected behavior?**

I would expect the final state array to contain all keys released, in order. There are a few workarounds for this issue (e.g. passing a function to `setState` to retrieve the current value instead of using the rendered value), but from the documentation it seems that is an escape hatch for use when the effect's callback is not renewed on each state change, and should not be necessary in this case (unless I've misunderstood).

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

It happens on both versions that support hooks - `16.8.0-alpha.0` and `16.8.0-alpha.1`. This is on Chrome/Safari/Firefox on MacOS Mojave.
"
facebook/react,2019-01-30 10:43:37,feature,Allow the same DOM node to use both a callback and a RefObject in its ref prop,"**Do you want to request a *feature* or report a *bug*?** Feature

**What is the current behavior?**

The `ref` attribute passed to a DOM node can be either a callback or a `RefObject`, but not both. Sometimes, that's exactly what's required: for example, a library like [react-pose](https://popmotion.io/pose/api/posed/#posed-usage-create-a-posed-component-existing-components) demands ref forwarding to work with a React Component, but you'd also like to retain a reference to the _same_ parent DOM node within that component itself for a different reason. It's often not possible to nest DOM nodes to achieve a similar thing using two different ref attributes as that breaks layout.

Here's a link to a naive attempt to achieve this: https://codesandbox.io/s/4jyw3q3v57

I'm not surprised this doesn't work as there's no reason for the parent ref callback to fire, but I don't know how else to go about it.

**What is the expected behavior?**

The callback provides the component with its own reference to the parent DOM node, whilst also providing it to the parent component via the passed `RefObject`.
"
facebook/react,2019-01-05 22:14:39,feature,React.Suspense provide a lifecycle so components can handle the `display:none` removal,"**Do you want to request a *feature* or report a *bug*?**

It's a feature. 

**What is the current behavior?**

React.Suspense mounts its children with a `display: none` style if a promise is thrown. Once the thrown promise is resolved, React removes the `display: none` style.

**What is the expected behavior?**

The children components have no easy way to know when the `display: none` style is removed by React. This is problematic when one child component needs to read from the DOM layout to correctly display its elements. Most people wait for the `componentDidMount` callback to trigger, but because the element is `display: none`, it can't read any value from the DOM layout.

The issue was discovered in https://github.com/mui-org/material-ui/issues/14077. I believe that React should provide a lifecycle so the children components know when they are visible, that it's safe to do layout computations. 

The best workaround I'm aware of it to use the [Intersection Observer API](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) but it requires a polyfill on IE 11 and Safari.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

Version: 16.7.0-alpha.2"
facebook/react,2018-12-15 20:58:16,feature,[Hooks] Proposal: expose info about current component for custom hooks,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**
feature

**What is the current behavior?**
The core built-in hooks – `useRef`, `useMemo`, etc. – rely on internal React state which is not exposed, namely the current rendering component. This means that these hooks cannot be implemented in user-land. Similar hooks cannot be implemented either.

I'm proposing adding a built-in hook which would provide information about the current rendering component. This would enable more advanced hooks to be implementable in user-land.

I have a use case which is a perfect example. I need a hook similar to `useMemo`, but where the computed value is shared across all components of the same type. I’m calling it `useSharedMemo`.

The ideal API would look something like this:

```typescript
const Component = ({cacheKey}) => {
  const value1 = useSharedMemo(() => /* expensive computation 1 */, [cacheKey]);
  const value2 = useSharedMemo(() => /* expensive computation 2 */, [cacheKey]);
  return <>{value1} {value2}</>;
};
```

In the code above, every instance of `Component` would get the same values for `value1` and `value2`, provided `cacheKey` is the same. When `cacheKey` changes, the two values would recompute once and the new values would be returned to all instances as they re-render. (The actual use case in my app is styles that need to update only when the theme changes.)

I have a [hacky implementation](https://codesandbox.io/s/jplyz2pkr9) of this hook that works, but it requires changing the API to the following:

```typescript
const useSharedMemo = createUseSharedMemo();

const Component = ({cacheKey}) => {
  const ref = React.useRef();
  const value1 = useSharedMemo(ref, () => /* expensive computation 1 */, [cacheKey]);
  const value2 = useSharedMemo(ref, () => /* expensive computation 2 */, [cacheKey]);
  return <>{value1} {value2}</>;
};
```

For this to work, the [implementation](https://codesandbox.io/s/jplyz2pkr9) has to keep a counter of calls that resets every time a component’s render call starts or ends. This would be trivial if there were a way to know which component is currently rendering. Since there is no way, the implementation has to make up for it by requiring a `ref` be passed in. Since it has no information about the type of the current component, it also requires that a `useSharedMemo` “instance” be created in the component definition’s enclosing scope.

Worse, the implementation uses `useLayoutEffect` to detect when the render is done, which might break with concurrent mode or with future React changes.

**What is the expected behavior?**

If React provided information about the current rendering component, the implementation of `useSharedMemo` would be much easier and less brittle.

A possible solution is a hook like the following:

```typescript
const [currentType, currentRef] = React.useCurrentComponent();
```

With this information, we can implement the ideal API above and we do not have to rely on `useLayoutEffect`:

```typescript
let values = new WeakMap();
let cacheKeys = new WeakMap();
let lastRef = null;
let callIndex = 0;

function useSharedMemo(fn, keys) {
  const [currentType, currentRef] = React.useCurrentComponent();
  if (currentRef !== lastRef) {
    callIndex = 0;
  }
  const index = callIndex;
  callIndex++;
  const typeValues = values.get(currentType) || [];
  const typeCacheKeys = cacheKeys.get(currentType) || [];
  if (!typeValues[index] || !compareKeys(keys, typeCacheKeys[index])) {
    typeValues[index] = fn();
    typeCacheKeys[index] = keys;
    values.set(currentType, typeValues);
    cacheKeys.set(currentType, typeCacheKeys);
  }
  return typeValues[index];
}
```

(Note that I’m treating `currentType` and `currentRef` as opaque values, so for my purposes it doesn’t matter if they are the actual type and an actual ref to the component instance. I imagine having them be accurate would be a more powerful API, but the implementation might require them to be opaque values.)

P.S. - A common use case that would benefit from `useSharedMemo` is `useCallback`. 99% of the time callbacks are identical across components of the same type. It’s wasteful not to share the cache.

**Demo**
https://codesandbox.io/s/jplyz2pkr9
"
facebook/react,2018-12-03 01:04:57,feature,[Scheduler] Add support for delayed scheduling of callbacks.,"Has the React team considered adding the ability to specify a time delay when scheduling callbacks on Scheduler. This would be useful to enable using Scheduler as a general scheduling solution in a JS environment, removing the need to use and manage setTimeouts/setInterval calls. "
facebook/react,2018-11-20 13:47:08,feature,Provide a way to pass context to renderToStaticMarkup on the client,See https://github.com/facebook/react/issues/14287#issuecomment-440277999 and https://github.com/facebook/react/pull/14182#issuecomment-440125029. This accidentally worked for a few releases but was a bug. However we might want to consider actually supporting this with an opt-in API.
facebook/react,2018-11-16 18:02:00,feature,React.lazy does not allow retrying a rejected promise,"**Do you want to request a *feature* or report a *bug*?**

It can be seen as a feature or a bug, depending on angle. Let's say it's an enhancement to how `lazy` works.

**What is the current behavior?**

When using `React.lazy`, if the given promise rejects while trying to asynchronously load a component, it's no longer possible to retry loading the component chunk because `lazy` internally caches the promise rejection.

**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**

This does not seem to work great in CodeSandbox because it's using service workers, which get in the way when simulating offline mode, yet this small app illustrates the issue: https://codesandbox.io/s/v8921j642l

**What is the expected behavior?**

A promise rejection should not be cached by `lazy` and another attempt to render the component should call the function again, giving it the chance to return a new promise.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

AFAIK all version of React that include `lazy`.
"
facebook/react,2018-11-13 17:57:45,feature,setState/dispatch 2nd arg callback or emitEffect() use case,"# Feature Request

## Current Behavior

useState/useReducers Hook's updater/dispatch functions do not expose a way to execute code _after_ the update has been made.

## Expected Behavior

useState or useReducer Hooks expose some way to locally execute the equivalent of inline useEffect/didUpdate etc. (to allow for overriding default side effect behavior) (e.g. emitEffect(() => ...)).

## Use Case

Formik exposes 2 props which control when form validation occurs: `validateOnChange` and `validateOnBlur`. When `validateOnChange` set to `true`, form validation will run whenever `handleChange`, `setFieldValue`, or `setValues` are called (these fns all update form `values`). Similarly, when `validateOnBlur` is `true`, validation will also run whenever `handleBlur`, `setFieldTouched`, and `setTouched` are called (these fns all update the `touched` state of the form). The reason that Formik doesn't centralize orchestrating validation logic into `componentDidUpdate` (i.e. run validation whenever either `this.state.values` or `this.state.touched` changes) is to allow for local overrides in custom input components.

For example, often times in a 3rd party input component (e.g. like Airbnb's Rheostat (https://github.com/airbnb/rheostat)) the value and touched state need to update together because there isn't a real ""blur"" event for the component or there isn't a prop for it. With Formik, you get around this by updating the field's value and touched state imperatively but override the validation behavior to only run once. To do this, Formik's current non-hooks API exposes an extra parameter to the `setFieldValue` and `setFieldTouched` methods which allow you to opt out of running validation after the update is made. Internally this looks like:

```js
setFieldValue(name, value, shouldValidate = true) {
   this.setState(prevState => setIn(prevState.values, name, value), () => {
      if (this.props.validateOnChange && shouldValidate) {
        this.validateForm(this.state.values)
      }
    })
  }

setFieldTouched(name, touch = true, shouldValidate = true) {
   this.setState(prevState => setIn(prevState.touched, name, touch), () => {
      if (this.props.validateOnBlur && shouldValidate) {
        this.validateForm(this.state.values)
      }
    })
  }
```

If a callback was supported by either `useReducer`'s `dispatch` or `useState` update fn, Formik could maintain its current API footprint and allow for the following code to work as expected:

```js
const CustomRangedInput = (props) => {
  const formik = useFormikContext();
  function handleChangeValue(value) {
    // Set the value
    formik.setFieldValue(props.name, value, false /* avoid normal validation logic */)
    // Mark the field as touched
    formik.setFieldTouched(props.name, true)
  }

   return <Rheostat
     onValueChange={handleChangeValue}
      min={1}
      max={100}
      values={[1, 100]}
   />;
}
``` 

However, with the current hooks API's there is not a way for me to expose this to users, since I have to lift update the validateOnChange/validateOnBlur validation logic to `useEffect`. In my current Formik x Hooks PR, this looks like

```js
 React.useEffect(
    () => {
      if (!!didMount.current && !!validateOnChange && !state.isSubmitting) {
          validateForm(state.values);
      }
    },
    [state.values, validateOnChange, state.isSubmitting]
  );

 React.useEffect(
    () => {
      if (!!didMount.current && !!validateOnBlur && !state.isSubmitting) {
          validateForm(state.values);
      }
    },
    [state.touched, validateOnBlur, state.isSubmitting]
  );

```

This will execute whenever `state.values` or `state.touched` change, which is usually what people want 98% of the time. However, I don't know/see a way to make this compatible with the old API (where you can locally override validation).


**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

16.7.0-alpha
"
facebook/react,2018-11-02 08:27:15,feature,<option> and <textarea> elements should be able to contain Components that return strings and render their output correctly,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**

Feature request

**What is the current behavior?**

If you use a Component that returns a string inside an option or textarea element, the Component will be rendered as '[object Object]'

**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**

https://jsfiddle.net/38tz0ym2/

**What is the expected behavior?**

The string returned by the component should be rendered as the elements innerHTML.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

This was working accidentally in react v16.0.0 - v16.4.2 but was apparently buggy and crash prone. It no longer works at all in react v16.6.0"
facebook/react,2018-10-26 03:24:35,feature,"More helpful interaction for ""React does not recognize the 'propName' prop on a DOM Element""","**Do you want to request a *feature* or report a *bug*?**

Feature

**What is the current behavior?**

When you pass a unknown prop to a DOM element - common when you pass `{...props}` to something that turns out to be a div/span/any other DOM element rather than a composite component - you get a warning like so:

```Warning: React does not recognize the `propName` prop on a DOM element. ....```

If the tree is pretty complicated, especially if you're using HOCs, it can be very hard to find where this prop has been passed and to which DOM element. 

**What is the expected behavior?**

We had a quick muck around with react-dom and logging the DOM element that triggers this warning allows you to see the element in the DOM and makes it much easier to work out where the prop is being accidentally passed. You can even use the react dev tools to work out exactly which line the component is defined in the code.

Simply logging the element is obviously not the most elegant way of showing the user where the mistake is, but would it be possible to do _something_ in order to make it quicker to fix mistaken prop passing like this?

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

All."
facebook/react,2018-10-11 13:14:18,feature,Support for classList,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**

feature

**What is the current behavior?**

Only `className` exists right now.

**What is the expected behavior?**

I think adding `classList` property for DOM elements would be useful. As far as I understand React Fire will drop support for IE11 but even in IE11, you can add or remove classList from elements.

Another idea might be adding support for for array type for `className` (or future `class`, which will make more sense because array). If array is passed, `classList` will be used for DOM elements. Otherwise, `className` is used as usual in the real DOM side.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

All versions. I hope this is added in React Fire."
facebook/react,2018-09-21 01:39:46,feature,Accessing ReactDebugCurrentFrame without using __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,"**Do you want to request a *feature* or report a *bug*?**
Request a feature.

**What is the current behavior?**
I am working on writing a custom React renderer (https://github.com/toxicFork/react-three-renderer-fiber) and right now I have to use `React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED` in order to access stack information for the current frame in order to display warnings for the developer (https://github.com/Methuselah96/react-three-renderer-fiber/blob/react-reconciler/src/core/customRenderer/descriptors/CustomDescriptor.ts#L102).

**What is the expected behavior?**
I would like to be able to access the stack information for the current frame without worrying for the safety of my employment. Is there a better way for me to be doing this?

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**
React 16.5.2"
facebook/react,2018-09-03 16:20:27,feature,Make possible to get component stack or at least its hash,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**

*feature*

**What is the current behavior?**

There is no good way to get the a list of component parents. The only way to do it is to wrap the rendered component to an error boundary, throw a dummy error and pass `componentStack` to the rendered component without throwing the error again.

![image](https://user-images.githubusercontent.com/1082083/44995658-cb9b7a00-afac-11e8-83da-6b60f6edb6e6.png)

Unfortunately the idea of hiding thrown errors was refused (see https://github.com/facebook/react/issues/11098) so this experimental hack isn't useful. 

**What is the expected behavior?**

I'd like to deterministically identify components at DOM tree and use this data to assign persistent data to it without using any custom identifiers. For example store visibility state for a specific component at window.localStorage. 

Related to https://github.com/facebook/react/issues/1137
"
facebook/react,2018-08-16 01:41:06,feature,KeyboardEvent.repeat is not normalized,"**Do you want to request a *feature* or report a *bug*?**
Bug

**What is the current behavior?**
Documentation of SyntheticEvent claims: ""React normalizes events so that they have consistent properties across different browsers."" https://reactjs.org/docs/events.html#supported-events

Documentation of Keyboard Events lists `boolean repeat` as a supported field: https://reactjs.org/docs/events.html#keyboard-events

IE11/Edge do not natively support `repeat`, but React does not normalize the event to set `repeat: true` when a keyDown event repeats (i.e. when a key is held down). (Edge has an open bug on this but of course IE11 is abandonware.)

**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem.**

Tab to to the only div in this repro and hold down a key:
https://jsfiddle.net/acsr4ofu/

Bug: 'repeat!' alert does not appear in IE11

**What is the expected behavior?**
An alert dialog showing 'repeat!' should appear in any browser that React supports.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**
Current version of React, any browser which does not natively support `KeyboardEvent.repeat` but IE/Edge in particular (Chrome always supported; FF since 28; Safari since 10.1). Unknown if this worked in previous versions of React."
facebook/react,2018-08-13 12:34:23,feature,React.cloneElement cannot remove existing props,"**Do you want to request a *feature* or report a *bug*?**

A feature.

**What is the current behavior?**

When an element is cloned with [React.cloneElement](https://reactjs.org/docs/react-api.html#cloneelement), it's possible to add new props or modify existing ones, but not to remove existing props. 

[Relevant code](https://github.com/facebook/react/blob/v16.8.0-alpha.1/packages/react/src/ReactElement.js#L333).

Example of how it works right now:

```
const element = React.createElement(""a"", {href: ""http://github.com""});
const newElement = React.cloneElement(element, {href: undefined});
console.log(newElement.props); // {href: undefined}
```

**What is the desired behavior?**

It would be great to add some way to remove props (passing `undefined` as value?):

```
const element = React.createElement(""a"", {href: ""http://github.com""});
const newElement = React.cloneElement(element, {href: undefined});
console.log(newElement.props); // {}
```

I guess I could use directly `React.createElement` but, AFAIK, I'll have also to worry about special attributes like `key` and `ref`. I'd rather not mess with internals.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

I think it has worked this way in all React versions.

**What's your use case?**

I am applying a map transformation of elements recursively and I need to remove some virtual props before passing the real elements for React to render.  Console shows `React does not recognize the [unknownProp] prop on a DOM element` for those props, I'd want to avoid that."
facebook/react,2018-07-30 03:24:48,feature,Setting rendering mode to <Surface> component of react-art,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**
feature

**What is the current behavior?**
`<Surface>` of canvas mode and `<Surface>` of svg mode cannot be used in a document at the same time.

**What is the expected behavior?**
Two more `<Surface>` components with each other modes can be used in a document at the same time.


Currently developers can set only one rending mode globally in react-art, using `setCurrent()` of `art/modes/current` module. So there is no way to use `<Surface>` of canvas mode and `<Surface>` of svg mode in a document together. On the other hand, `art.js` internally used in `react-art` provides a way to use each other modes together as directly importing their corresponding modules.  (e.g. svg.js for svg mode, canvas.js for canvas mode in `art.js` lib). 

I would like to suggest a way to set own rendering mode per instance of `<Surface>` Component by new property `mode`. This feature makes `<Surface>` with canvas mode and `<Surface>` with svg mode to be used together in a document like the following.

```javascript
const {
  Surface,
  Group,
  Shape
} = require('react-art');

class TestComponent extends React.Component {
  render() {
    return (
      <React.Fragment>
        <Surface mode=""svg"" width={100} height={100}>
          <Group>
            <Shape width={10} height={10} />
          </Group>
        </Surface>
        <Surface mode=""canvas"" width={100} height={100}>
          <Group>
            <Shape width={10} height={10} />
          </Group>
        </Surface>
      </React.Fragment>
    );
  }
};
```

If `mode` property is not set, `<Surface>` works as canvas mode for compatibility.

I have made a PR for this feature to show how to work and use it ([#13249](https://github.com/facebook/react/pull/13249)).
And you can check this feature through `art` fixture of my PR.

Feel free to discuss about this feature.



"
facebook/react,2018-06-21 12:57:54,feature,Some means of determining component order in hierarchy,"I apologise for raising this issue again, I'm not intending to be annoying or disrespectful by this, but my previous issue #13034 was closed with a suggestion which I believe not does mitigate the feature request.  I'm simply not aware if I should take the hint and go away, if there's a bit of a backlog and I should hang in there, or if it's been missed.  I'm assuming the latter, but beg forgiveness if that is not the case.  Should you want me to go away I will do so :)  Thanks.

I'm trying to build a container component and child component, whereby the children can sit anywhere in the hierarchy beneath the container, but know their relative order/index within that hierarchy.

My use-case is to build a helper wrapper for CSS grids, allowing subcomponents to themselves render a ""row"" component which knows it must be the next index, and may or may not progress the row counter for the next ""row"" component found in order.

I've looked into two possible avenues - recursing using React.Children on the component, which stops when it hits a component without props.children (e.g. a redux-connect()-ed one), and passing some means of counting via context, which fails because it seems the render() methods of the child components isn't always called in ""DOM order"".

More background here - https://stackoverflow.com/questions/50776933/react-get-component-order-within-hierarchy

It would be great to have some feature in React which might allow for this.

@aweary had previously suggested in #13034 that context could do this with nesting, however I'd raised the thought that this would give an indication of recursion depth, not relative position."
facebook/react,2018-05-31 14:31:19,feature,Allow `ref` attribute on custom elements,"**Do you want to request a *feature* or report a *bug*?**
feature

**What is the current behavior?**
Creating a custom element with a `ref` attribute currently is not possible, because `React.createElement('my-element', { ref: 'my-attribute' })` will interprete the `ref` attribute in a special sense.

**What is the expected behavior?**
Like for `htmlFor` it would be great if there were an alias that allows creating a `ref` attribute on a custom element.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**
16.3"
facebook/react,2018-05-22 17:47:53,feature,ReactIs.typeOf for non-elements,"**What is the current behavior?**

`ReactIs.typeOf` currently only works for element types, it does not allow you to pass a raw `Component` or `ForwardRef` to know the type.

The use case for this is in `hoist-non-react-statics` I now need a [special cases for `ForwardRefs`](https://github.com/mridgway/hoist-non-react-statics/issues/48). To do this, I will need to know the type of the source and target components, but currently I would need to turn them into elements first.

All of the `ReactIs.is*` functions also have this issue since they use the `typeOf` function internally.

```js
const ForwardComponent = React.forwardRef(() => {});

ReactIs.typeOf(ForwardComponent); // undefined
ReactIs.typeOf(React.createElement(ForwardComponent)); // Symbol(react.forward_ref)
```

**What is the expected behavior?**

Ideally I could pass in just the Component and get the type of it: 
```js
ReactIs.typeOf(ForwardComponent) // Symbol(react.forward_ref)
```

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

ReactIs@16.3.2
"
facebook/react,2018-05-16 03:52:24,feature,Callback in react-test-renderer for component changes,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**
feature

**What is the current behavior?**
Many react components render multiple times automatically.  Take a graphql component.  First it will render a loading spinner, then the data after it has been fetched.  In react-test-renderer, it's difficult to get a snapshot to consistently render for these types of components.

Currently, we set an interval timer and check the component tree to see if the data has loaded and thus rendered.  This approach results in a bunch of unnecessary checks and slows down tests because the interval timer will run after the component has been rendered.

**What is the expected behavior?**
I would expect react-test-render to allow a callback that will be invoked each time any component in the component tree changes, basically after any component's `componentDidUpdate` ran.  I would expect an API like:
```
import TestRenderer from 'react-test-renderer';
const testRenderer = TestRenderer.create(
  <Todos />
);
testRenderer.onChange(() => {
// check TODOS for whether the data has loaded and do the snapshot
})
```

This would be useful in react-dom and react-native.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**
It's a proposal for a new feature, doesn't affect any existing React versions

"
facebook/react,2018-05-07 05:18:39,feature,Expose a way of creating a ReactTestInstance for React DOM nodes,"**Do you want to request a *feature* or report a *bug*?**
I would like to request a new feature. 

**What is the current behavior?**
At the moment there is no way to create an instance of a `ReactTestInstance`. I would love to be able to do something like:

```js
const div = document.createElement('div');
const componentRef = ReactDOM.render(<MyComponentUnderTest />, div); // or renderIntoDocument
const testInstance = new ReactTestInstance(componentRef);
// now I can run queries using the API of ReactTestInstance
// against a component tree that has been fully DOM rendered
testInstance.findAll(..)
testInstance.children.forEach(() => {});
testInstance.parent
```

**Why?**
Libraries such as [Enzyme](https://github.com/airbnb/enzyme) can be used to test React components by [full DOM rendering](http://airbnb.io/enzyme/docs/api/mount.html) and providing an API to find components and get information about them.

As far as I know, there is no way of querying the component tree created by `ReactDOM.render` without relying on the internals of React nodes. This means that Enzyme, in order to support full DOM rendering and it's querying API, it has to interact with React nodes directly. This reliance causes problems in Enzyme whenever React adds a new node type (forwardRef, ContextProvider/Consumer for example).

I have started [this RFC](https://github.com/airbnb/enzyme/issues/1648) that proposes that Enzyme uses `ReactTestWrapper` from `react-test-renderer` as a layer on top of React node objects. This allows the library to be decoupled from the internals of React. The solution proposed in the RFC relies on the being able to create a `ReactTestInstance` from a `ReactDOM.render` component tree.

Please let me know if this is something you would consider 😄 "
facebook/react,2018-04-25 11:23:02,feature,Show culprit in `Cannot update during an existing state transition...` ?,"**Do you want to request a *feature* or report a *bug*?**
*Feature.*

**What is the current behavior?**
We are probably all familiar with the following message.

```
bundle.js:1

Warning: Cannot update during an existing state transition (such as within `render`
or another component's constructor). Render methods should be a pure function
of props and state; constructor side-effects are an anti-pattern, but can be moved
to `componentWillMount`.
```

For those who never came across this message, it can be created simply by mounting the following component.

```js
class UpdateDuringRender extends Component {
  constructor(props) {
    super(props);
    this.state = {
      text: 'initial',
    };
  }

  updateState(text) {
    this.setState({ text });
  }

  render() {
    this.updateState('updated!');

    return (
      <div>
        {this.state.text}
      </div>
    );
  }
}
```

**What is the expected behavior?**
Can we be more specific which component triggers this warning (I think it could be even treated as an optional error)? When this suddenly appears in the app, sometimes it's tough to find the culprit. Some stack trace or at least the offending component would be helpful in the warning message. Not sure how it's solved internally, but yeah, would be a nice hint to help remove anti-patterns.

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**
`""react"": ""^16.3.1""`"
facebook/react,2018-04-15 23:54:01,feature,Support partial hydration for static content,"<!--
  Note: if the issue is about documentation or the website, please file it at:
  https://github.com/reactjs/reactjs.org/issues/new
-->

**Do you want to request a *feature* or report a *bug*?**

Feature

**What is the current behavior?**

Hydrating some server-rendered content can be difficult, inefficient or impossible. For example, in the process of rendering on the server, significant work or additional data may be required for data processing and conversion, such as custom templating or localization. The content can be large too, such as product information or a news article.
 
When the resulting content is highly dynamic and changes with state, there is no choice but recreate it within React paradigm and recreate it on client. However, complicated server-generated content is often (if not typically) static. Delivering a redundant copy of static content to client just to compare and ignore it during hydration seems a waste of resources and can be prohibitively expensive. 

**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**

https://codesandbox.io/s/zx38ow3z8x

**What is the expected behavior?**

Instead of additional complications of recreating it on the client with hydration, wouldn’t it be much easier to just accept the content from server as-is and tell hydrate() to leave it alone?

There may be a few options for non-hydrating SSR:

1. Add a new callback `shouldComponentHydrate()` to disable hydration of component content
```javascript
export default class NoHydrate extends Component {
    // return false to avoid re-rendering of this component in hydrate()
    shouldComponentHydrate() {
        return false;
    }
    render() {
        // on server, simply render content
        // on client, this is never called and server content is accepted as-is
        return (
            <div>
                {this.props.children}
            </div>
        );
    }
}

```

2. Access SSR content from DOM in `render()`
_This is probably the worst option, though it is the only one that definitely works currently._
```javascript
export default class AutoHydrate extends Component {
    render() {
        // on server, simply render content
        // on client, find SSR in dom and re-render using dangerouslySetInnerHTML
        // ** requires a unique id, generated before or during server rendering **
        return (typeof window === 'undefined') ? (
            <div id={this.props.id}>
                {this.props.children}
            </div
        ) : (
            <div id={this.props.id}
                dangerouslySetInnerHTML={{
                    __html: document.getElementById(this.props.id).innerHTML
                }}
            />
        );
    }
}
```

3. Use `dangerouslySetInnerHTML` with empty content
_It actually works now, but it is not documented that it is supposed to._
```javascript
export default class Ssr extends Component {
    render() {
        // on server, simply render content
        // on client, render empty content using dangerouslySetInnerHTML,
        // which normally causes a warning of content mismatch and keeps the existing content
        // also add suppressHydrationWarning to turn off the warning.
        return (typeof window === 'undefined') ? (
            <div>
                {this.props.children}
            </div>
        ) : (
            <div
                dangerouslySetInnerHTML={{
                    __html: ''
                }}
                suppressHydrationWarning
            />
        );
    }
}
```

Considering that there is a way to make it work now, documenting (3) may be all that needs to happen. However if (1) could be added with same behavior, it would look cleaner.


**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

Version 16.2. Not sure if the working option 3 has worked before or is supposed to work in future versions."
facebook/react,2018-03-30 22:23:24,feature,Uncaught Error: Unexpected object passed to ReactTestInstance constructor (tag: 13). This is probably a bug in React.,"Hello,

I'm testing v16.3.0 and I'm getting this warning:
```
Warning: Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported 
```

 My use case is that I wanted to render React Test Renderer (for ex) from a Component in an another (ReactDOM) renderer but it does not seem to work - I wanted to use same Provider in both containers.

I thought `React.createContext` create objects with no state and could be shared across renderers / Fiber containers.. Is there workaround for this? Are there any thoughts on this, Is this a definite behaviour?

Following the warning, I eventually get the error message which I believe is related to the warning:

```
Uncaught Error: Unexpected object passed to ReactTestInstance constructor (tag: 13). This is probably a bug in React.
```

thank you for any guidance :)"
facebook/react,2018-03-29 08:35:33,feature,[SVG] Enable focusable to accept boolean values,"Moved discussion from https://github.com/facebook/react/issues/6212.

## Situation

The [`focusable` attribute](https://www.w3.org/TR/SVGTiny12/interact.html#focusable-attr) from the SVG specifications is an [enumerated attribute](https://html.spec.whatwg.org/#keywords-and-enumerated-attributes) accepting values `""true""`, `""false""` and `""auto""`. Because it is technically not a boolean attribute (although it certainly somehow looks like it), React expects the value to be passed as a string. See the following example:

```diff
-<svg focusable>I should be focusable</svg>
-<svg focusable={true}>I should be focusable</svg>
+<svg focusable='true'>I should be focusable</svg>
```

The thing is, the `focusable` attribute is often used in conjunction with elements from the ARIA specification, in which attributes are booleans and not enumerated attributes with `""true""` and `""false""` values. The [`aria-hidden` attribute](https://www.w3.org/TR/wai-aria-1.1/#aria-hidden) is a good example of that.

For instance, [following a good practice for icon-buttons](https://fvsch.com/code/svg-icons/#section-html):

```html
<button type=""button"">
  <svg aria-hidden=""true"" focusable=""false"">
    <use xlink:href=""#icon-play""></use>
  </svg>
  <span class=""access-label"">Start playback</span>
</button>
```

From an authoring perspective, the above snippet would likely be written like this in JSX:

```jsx
<button type='button'>
  <Icon icon='play' aria-hidden={true} focusable={false} />
  <span class='access-label'>Start playback</span>
</button>
```

The problem is that `focusable` **cannot** be authored as a boolean, otherwise it will **not** be printed out in the DOM. On the other hand, `aria-hidden` is perfectly fine being written as a boolean at it gets coerced by React.

## Proposal

Given the default value for the `focusable` attribute is `""auto""`, this is very likely this attribute gets authored to change its value to `true` or `false`. In that regard, it is confusing that it has to be specified as a string, when other attributes accepting booleans can be authored as such.

The suggestion would be to make it possible for `focusable` to be specified as either a boolean or a string, like other similar attributes. In other words, all the following should work:

```jsx
<svg focusable>I should be focusable</svg>
<svg focusable={true}>I should be focusable</svg>
<svg focusable='true'>I should be focusable</svg>
<svg focusable={false}>I should not be focusable</svg>
<svg focusable='false'>I should not be focusable</svg>
<svg focusable='auto'>I should be focusable</svg>
```

From an authoring perspective, I believe this would be the most straightforward and less confusing."
facebook/react,2018-03-26 05:23:57,feature,Elements loose focus when moving to or from a portal,"**Do you want to request a *feature* or report a *bug*?**

Perhaps a bug, but could also be seen as a feature

**What is the current behavior?**

When you move an element to a portal through `ReactDOM.createPortal` the element looses focus if it had focus. If the element gains focus while in a portal, when moving out of the portal it looses focus.

**What is the expected behavior?**

I would have expected React to maintain focus of the element when moving in or out of a portal

**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**

Tested with

React version: 16.2
Browsers: Latest chrome and firefox. I did not test others but expect the behaviour to be the same
OS: Tested on Mac High Sierra
"
facebook/react,2018-02-28 16:13:56,feature,Expose the `onSelect` event for any focusable element?,"I was curious earlier if the `onSelect` event works on things other than form elements and `contentEditable` elements, and by disabling a couple of conditions in the code, it seems — at first brush, at least — that `onSelect` works splendidly on any element that is focusable (via the `tabIndex` attribute), to obtain things like:

![ezgif-2-326cf42421](https://user-images.githubusercontent.com/205375/36798178-8aa7fdda-1cb2-11e8-8838-46e04300a09a.gif)

Would there be any problem with relaxing the conditions for allowing `onSelect` to include elements that have a `tabIndex` attribute? (Other than the case where existing implementations in userland rely on the event being disabled when `contenteditable = true` is removed from an element)."
facebook/react,2018-02-19 09:59:43,feature,Support for changing a Portal's container without remounting children?,"(This is related to https://github.com/facebook/react/issues/3965.)

I'm working on a project with a lot of globally unique component instances. (In other words, their `key`s are essentially database IDs.) It also has DnD functionality. For reordering, everything is fine, but moving an instance from one parent to another causes a complete re-render of the instance.

Instead of moving the nodes around myself, I was thinking of using Portals. Each instance has a prop for which element ID they should render inside. Then, to reparent them, it'd be a simple case of passing a different element ID. (I'm using Redux, so it'd just be a `string` in the state.)

However, changing a Portal's container node also causes a complete re-render of everything passed to `ReactDOM.createPortal`. (See this [CodePen](https://codepen.io/anon/pen/PQQKRP).)

Would it be possible to skip this re-rendering and effectively move the Portal contents instead?"
facebook/react,2018-02-15 23:59:23,feature,Context Transform,"With the new context API it is really bulky to create a middle man that consumes one context value, transforms it and provides another one. You have to create many components and store an intermediate state to avoid rerendering the provider if the input is unchanged.

We could have a convenience API for this use case.

```js
function transform(inputValue) {
  return [...inputValue, extraData];
}

<Context.Middleware transform={transform}>{children}</Context.Middleware>
```

cc @acdlite "
facebook/react,2018-02-09 03:30:16,feature,[FEATURE] implement a `getState` method to get the sync state since `setState` is async.,"
**Do you want to request a *feature* or report a *bug*?**
<h2>FEATURE REQUEST</h2>



**What is the current behavior?**
```js
class MyComponent extends Component {
  state = { a: 1 }
  method1 = () => {
    this.setState({ a: 2 });
    this.method2();
  }
  method2 = () => {
    // It can not log 2 in the console.
    console.log(this.state.a);
  }
  // xxx...
}
```

**What is the expected behavior?**
```js
class MyComponent extends Component {
  state = { a: 1 }
  method1 = () => {
    this.setState({ a: 2 });
    this.method2();
  }
  method2 = () => {
    // With the `getState` method, it should log 2 in the console.
    console.log(this.getState().a);
  }
  // xxx...
}
```
"